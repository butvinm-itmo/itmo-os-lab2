<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>mod_memcg_state (17,978,599 samples, 0.03%)</title><rect x="857.6" y="213" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="860.56" y="223.5" ></text>
</g>
<g >
<title>try_module_get (16,810,748 samples, 0.03%)</title><rect x="915.2" y="261" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="918.17" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,841,640 samples, 0.03%)</title><rect x="606.1" y="357" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="609.10" y="367.5" ></text>
</g>
<g >
<title>__fdget_pos (303,647,471 samples, 0.48%)</title><rect x="292.3" y="357" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="295.35" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (502,391,650 samples, 0.80%)</title><rect x="421.3" y="213" width="9.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="424.29" y="223.5" ></text>
</g>
<g >
<title>update_load_avg (17,988,982 samples, 0.03%)</title><rect x="769.6" y="325" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="772.61" y="335.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (18,621,460 samples, 0.03%)</title><rect x="555.5" y="293" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="558.50" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (90,179,386 samples, 0.14%)</title><rect x="96.1" y="469" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="99.12" y="479.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (1,915,044,162 samples, 3.05%)</title><rect x="516.5" y="277" width="36.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="519.46" y="287.5" >__e..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (716,117,268 samples, 1.14%)</title><rect x="72.7" y="469" width="13.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="75.70" y="479.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (87,398,577 samples, 0.14%)</title><rect x="680.2" y="293" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="683.16" y="303.5" ></text>
</g>
<g >
<title>search_name_run (62,720,570,405 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >search_name_run</text>
</g>
<g >
<title>do_syscall_64 (3,050,038,580 samples, 4.86%)</title><rect x="628.4" y="389" width="57.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="631.43" y="399.5" >do_sys..</text>
</g>
<g >
<title>obj_cgroup_charge (17,978,599 samples, 0.03%)</title><rect x="857.6" y="245" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="860.56" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (125,157,628 samples, 0.20%)</title><rect x="235.3" y="341" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="238.35" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.close (35,677,248 samples, 0.06%)</title><rect x="1024.3" y="485" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1027.34" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="421" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1066.20" y="431.5" ></text>
</g>
<g >
<title>generic_permission (32,415,247 samples, 0.05%)</title><rect x="936.7" y="245" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="939.72" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,687,971 samples, 0.03%)</title><rect x="753.6" y="405" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="756.61" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (123,702,445 samples, 0.20%)</title><rect x="97.8" y="469" width="2.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="100.81" y="479.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,833,943 samples, 0.03%)</title><rect x="66.7" y="389" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="69.73" y="399.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.0 (17,650,747 samples, 0.03%)</title><rect x="538.9" y="85" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="541.93" y="95.5" ></text>
</g>
<g >
<title>perf_event_task_tick (33,049,195 samples, 0.05%)</title><rect x="1161.4" y="261" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1164.42" y="271.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (17,725,649 samples, 0.03%)</title><rect x="1022.4" y="357" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1025.35" y="367.5" ></text>
</g>
<g >
<title>__memset (105,753,193 samples, 0.17%)</title><rect x="500.6" y="245" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="503.65" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (17,946,326 samples, 0.03%)</title><rect x="701.1" y="469" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="704.08" y="479.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (562,077,773 samples, 0.90%)</title><rect x="690.5" y="469" width="10.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="693.50" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (34,283,786 samples, 0.05%)</title><rect x="551.8" y="229" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="554.85" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (16,776,167 samples, 0.03%)</title><rect x="684.8" y="357" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="687.83" y="367.5" ></text>
</g>
<g >
<title>step_into (86,574,300 samples, 0.14%)</title><rect x="943.6" y="277" width="1.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="946.56" y="287.5" ></text>
</g>
<g >
<title>dput (229,674,866 samples, 0.37%)</title><rect x="947.1" y="261" width="4.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="950.12" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (34,283,786 samples, 0.05%)</title><rect x="551.8" y="101" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="554.85" y="111.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (50,071,614 samples, 0.08%)</title><rect x="616.4" y="437" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="619.36" y="447.5" ></text>
</g>
<g >
<title>xas_load (553,044,003 samples, 0.88%)</title><rect x="410.5" y="181" width="10.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="413.53" y="191.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (2,089,896,518 samples, 3.33%)</title><rect x="513.2" y="293" width="39.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="516.17" y="303.5" >ext..</text>
</g>
<g >
<title>__irq_exit_rcu (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="389" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1066.20" y="399.5" ></text>
</g>
<g >
<title>_raw_read_lock (71,000,955 samples, 0.11%)</title><rect x="442.7" y="213" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="445.68" y="223.5" ></text>
</g>
<g >
<title>inode_permission (123,894,139 samples, 0.20%)</title><rect x="918.5" y="261" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="921.47" y="271.5" ></text>
</g>
<g >
<title>native_write_msr (15,084,551 samples, 0.02%)</title><rect x="1161.8" y="213" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1164.75" y="223.5" ></text>
</g>
<g >
<title>x64_sys_call (85,016,304 samples, 0.14%)</title><rect x="610.1" y="373" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="613.09" y="383.5" ></text>
</g>
<g >
<title>fsnotify (17,838,512 samples, 0.03%)</title><rect x="305.5" y="325" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="308.53" y="335.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (68,559,367 samples, 0.11%)</title><rect x="1182.7" y="421" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1185.68" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,643,130 samples, 0.03%)</title><rect x="617.3" y="373" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="620.30" y="383.5" ></text>
</g>
<g >
<title>expand_files (54,878,776 samples, 0.09%)</title><rect x="809.9" y="293" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="812.95" y="303.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (34,751,168 samples, 0.06%)</title><rect x="219.7" y="421" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="222.70" y="431.5" ></text>
</g>
<g >
<title>path_get (36,018,746 samples, 0.06%)</title><rect x="894.3" y="261" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="897.35" y="271.5" ></text>
</g>
<g >
<title>mutex_lock (105,555,804 samples, 0.17%)</title><rect x="296.1" y="341" width="2.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="299.08" y="351.5" ></text>
</g>
<g >
<title>complete_walk (426,983,621 samples, 0.68%)</title><rect x="860.2" y="277" width="8.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="863.22" y="287.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (209,929,120 samples, 0.33%)</title><rect x="863.9" y="229" width="3.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="866.86" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,841,640 samples, 0.03%)</title><rect x="606.1" y="261" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="609.10" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (167,389,676 samples, 0.27%)</title><rect x="11.0" y="549" width="3.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.97" y="559.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (125,078,076 samples, 0.20%)</title><rect x="604.1" y="373" width="2.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="607.08" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (35,047,033 samples, 0.06%)</title><rect x="687.8" y="437" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="690.79" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,801,195 samples, 0.03%)</title><rect x="943.2" y="261" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="946.22" y="271.5" ></text>
</g>
<g >
<title>is_dx_dir (225,419,465 samples, 0.36%)</title><rect x="560.5" y="325" width="4.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="563.54" y="335.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,395,891,411 samples, 2.23%)</title><rect x="395.0" y="213" width="26.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="398.03" y="223.5" >_..</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (34,283,786 samples, 0.05%)</title><rect x="551.8" y="85" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="554.85" y="95.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (34,460,103 samples, 0.05%)</title><rect x="842.1" y="213" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="845.09" y="223.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (3,162,334,634 samples, 5.04%)</title><rect x="215.0" y="437" width="59.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="218.01" y="447.5" >mem.sl..</text>
</g>
<g >
<title>start.posixCallMainAndExit (62,234,996,388 samples, 99.23%)</title><rect x="19.1" y="565" width="1170.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="22.14" y="575.5" >start.posixCallMainAndExit</text>
</g>
<g >
<title>x64_sys_call (16,648,111 samples, 0.03%)</title><rect x="987.9" y="341" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="990.95" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (195,748,325 samples, 0.31%)</title><rect x="162.7" y="453" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.73" y="463.5" ></text>
</g>
<g >
<title>debug.assert (55,027,175 samples, 0.09%)</title><rect x="237.7" y="373" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="240.70" y="383.5" ></text>
</g>
<g >
<title>memcg_account_kmem (17,978,599 samples, 0.03%)</title><rect x="857.6" y="229" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="860.56" y="239.5" ></text>
</g>
<g >
<title>__memset (32,740,807 samples, 0.05%)</title><rect x="566.5" y="293" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="569.52" y="303.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (6,983,218,224 samples, 11.13%)</title><rect x="1052.6" y="437" width="131.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1055.59" y="447.5" >mem.eql__anon_5137</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (18,817,727 samples, 0.03%)</title><rect x="39.0" y="485" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="41.99" y="495.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (35,726,375 samples, 0.06%)</title><rect x="900.3" y="181" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="903.34" y="191.5" ></text>
</g>
<g >
<title>bpf_lsm_file_free_security (18,780,900 samples, 0.03%)</title><rect x="669.3" y="325" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="672.25" y="335.5" ></text>
</g>
<g >
<title>dput (107,377,264 samples, 0.17%)</title><rect x="641.1" y="341" width="2.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="644.08" y="351.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (54,427,855 samples, 0.09%)</title><rect x="212.6" y="421" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="215.65" y="431.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (36,463,154 samples, 0.06%)</title><rect x="689.8" y="453" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="692.82" y="463.5" ></text>
</g>
<g >
<title>inode_query_iversion (108,039,676 samples, 0.17%)</title><rect x="558.5" y="325" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="561.50" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (33,049,195 samples, 0.05%)</title><rect x="1161.4" y="245" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1164.42" y="255.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (552,724,187 samples, 0.88%)</title><rect x="353.0" y="293" width="10.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="356.05" y="303.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (18,761,703 samples, 0.03%)</title><rect x="907.8" y="197" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="910.76" y="207.5" ></text>
</g>
<g >
<title>search_name_runner.main (62,234,996,388 samples, 99.23%)</title><rect x="19.1" y="517" width="1170.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.14" y="527.5" >search_name_runner.main</text>
</g>
<g >
<title>generic_permission (53,324,539 samples, 0.09%)</title><rect x="919.8" y="245" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="922.80" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (34,610,754 samples, 0.06%)</title><rect x="21.5" y="485" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.48" y="495.5" ></text>
</g>
<g >
<title>array_list.addOrOom (34,310,978 samples, 0.05%)</title><rect x="100.1" y="469" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="103.14" y="479.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (8,432,119,362 samples, 13.44%)</title><rect x="1031.4" y="453" width="158.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1034.36" y="463.5" >mem.indexOfPosLinear..</text>
</g>
<g >
<title>fs.Dir.Walker.next (52,355,111,171 samples, 83.47%)</title><rect x="39.3" y="485" width="985.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="42.35" y="495.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__htab_map_lookup_elem (71,273,770 samples, 0.11%)</title><rect x="897.6" y="197" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="900.64" y="207.5" ></text>
</g>
<g >
<title>kmalloc_slab (100,860,393 samples, 0.16%)</title><rect x="504.0" y="261" width="1.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="506.99" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (53,444,022 samples, 0.09%)</title><rect x="214.0" y="437" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="217.01" y="447.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,740,849,076 samples, 4.37%)</title><rect x="702.4" y="453" width="51.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="705.40" y="463.5" >compi..</text>
</g>
<g >
<title>__virt_addr_valid (173,428,738 samples, 0.28%)</title><rect x="975.3" y="261" width="3.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="978.29" y="271.5" ></text>
</g>
<g >
<title>debug.assert (34,367,300 samples, 0.05%)</title><rect x="85.5" y="437" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="88.53" y="447.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (878,676,910 samples, 1.40%)</title><rect x="896.7" y="245" width="16.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="899.66" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (213,241,147 samples, 0.34%)</title><rect x="233.7" y="357" width="4.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="236.69" y="367.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (161,763,487 samples, 0.26%)</title><rect x="564.8" y="309" width="3.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="567.78" y="319.5" ></text>
</g>
<g >
<title>ext4_map_blocks (719,904,288 samples, 1.15%)</title><rect x="431.8" y="245" width="13.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="434.77" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,848,887 samples, 0.03%)</title><rect x="439.4" y="133" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="442.37" y="143.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (19,155,556 samples, 0.03%)</title><rect x="434.4" y="213" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="437.44" y="223.5" ></text>
</g>
<g >
<title>__f_unlock_pos (26,568,429 samples, 0.04%)</title><rect x="291.8" y="357" width="0.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="294.85" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,841,640 samples, 0.03%)</title><rect x="606.1" y="277" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="609.10" y="287.5" ></text>
</g>
<g >
<title>alloc_empty_file (2,089,688,825 samples, 3.33%)</title><rect x="820.9" y="277" width="39.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="823.90" y="287.5" >all..</text>
</g>
<g >
<title>scheduler_tick (18,687,971 samples, 0.03%)</title><rect x="753.6" y="309" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="756.61" y="319.5" ></text>
</g>
<g >
<title>__slab_free (18,129,754 samples, 0.03%)</title><rect x="753.3" y="341" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="756.27" y="351.5" ></text>
</g>
<g >
<title>legitimize_links (23,603,442 samples, 0.04%)</title><rect x="867.8" y="245" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="870.81" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (137,174,552 samples, 0.22%)</title><rect x="988.3" y="373" width="2.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="991.26" y="383.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (359,081,750 samples, 0.57%)</title><rect x="901.0" y="197" width="6.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="904.01" y="207.5" ></text>
</g>
<g >
<title>__fget_light (17,643,130 samples, 0.03%)</title><rect x="617.3" y="325" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="620.30" y="335.5" ></text>
</g>
<g >
<title>__fsnotify_parent (87,060,734 samples, 0.14%)</title><rect x="880.3" y="261" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="883.25" y="271.5" ></text>
</g>
<g >
<title>debug.assert (17,684,032 samples, 0.03%)</title><rect x="83.9" y="421" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="86.89" y="431.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (90,918,819 samples, 0.14%)</title><rect x="963.8" y="277" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="966.75" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (3,116,605,578 samples, 4.97%)</title><rect x="100.8" y="469" width="58.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="103.79" y="479.5" >compil..</text>
</g>
<g >
<title>copy_from_kernel_nofault (285,001,491 samples, 0.45%)</title><rect x="902.4" y="181" width="5.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="905.40" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (34,513,586 samples, 0.06%)</title><rect x="430.1" y="133" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="433.09" y="143.5" ></text>
</g>
<g >
<title>posix.lseek_SET (17,643,130 samples, 0.03%)</title><rect x="617.3" y="437" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="620.30" y="447.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (17,988,982 samples, 0.03%)</title><rect x="769.6" y="421" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="772.61" y="431.5" ></text>
</g>
<g >
<title>alloc_fd (339,041,716 samples, 0.54%)</title><rect x="804.6" y="309" width="6.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="807.60" y="319.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (1,079,550,252 samples, 1.72%)</title><rect x="1162.4" y="421" width="20.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1165.37" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (16,735,225 samples, 0.03%)</title><rect x="684.5" y="357" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="687.52" y="367.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (18,808,239 samples, 0.03%)</title><rect x="842.7" y="197" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="845.74" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (158,943,024 samples, 0.25%)</title><rect x="69.1" y="469" width="3.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="72.07" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,904,854,157 samples, 15.79%)</title><rect x="801.9" y="357" width="186.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="804.92" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>os.linux.close (3,301,647,278 samples, 5.26%)</title><rect x="625.7" y="437" width="62.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="628.67" y="447.5" >os.lin..</text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_8703 (71,660,491 samples, 0.11%)</title><rect x="239.8" y="341" width="1.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="242.76" y="351.5" ></text>
</g>
<g >
<title>cache_from_obj (35,986,936 samples, 0.06%)</title><rect x="664.9" y="325" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="667.91" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,848,887 samples, 0.03%)</title><rect x="439.4" y="101" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="442.37" y="111.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (45,237,606 samples, 0.07%)</title><rect x="828.5" y="229" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="831.49" y="239.5" ></text>
</g>
<g >
<title>_raw_read_unlock (33,944,249 samples, 0.05%)</title><rect x="444.0" y="213" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="447.02" y="223.5" ></text>
</g>
<g >
<title>kfree (52,861,538 samples, 0.08%)</title><rect x="555.9" y="309" width="0.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="558.85" y="319.5" ></text>
</g>
<g >
<title>__legitimize_mnt (123,791,548 samples, 0.20%)</title><rect x="861.5" y="229" width="2.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="864.53" y="239.5" ></text>
</g>
<g >
<title>htab_map_hash (71,273,770 samples, 0.11%)</title><rect x="897.6" y="181" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="900.64" y="191.5" ></text>
</g>
<g >
<title>kmalloc_trace (161,763,487 samples, 0.26%)</title><rect x="564.8" y="325" width="3.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="567.78" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (35,771,791 samples, 0.06%)</title><rect x="854.6" y="229" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="857.61" y="239.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (208,130,543 samples, 0.33%)</title><rect x="677.9" y="309" width="3.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="680.89" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (9,728,198,721 samples, 15.51%)</title><rect x="802.6" y="341" width="183.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="805.58" y="351.5" >__x64_sys_openat</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (383,952,145 samples, 0.61%)</title><rect x="77.0" y="437" width="7.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="80.00" y="447.5" ></text>
</g>
<g >
<title>__check_heap_object (86,696,260 samples, 0.14%)</title><rect x="973.7" y="261" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="976.66" y="271.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (17,959,155 samples, 0.03%)</title><rect x="617.6" y="453" width="0.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="620.63" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (34,283,786 samples, 0.05%)</title><rect x="551.8" y="165" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="554.85" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,848,887 samples, 0.03%)</title><rect x="439.4" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="442.37" y="191.5" ></text>
</g>
<g >
<title>xas_descend (246,282,033 samples, 0.39%)</title><rect x="414.2" y="165" width="4.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="417.18" y="175.5" ></text>
</g>
<g >
<title>lockref_get (160,275,810 samples, 0.26%)</title><rect x="891.3" y="261" width="3.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="894.33" y="271.5" ></text>
</g>
<g >
<title>update_process_times (17,841,640 samples, 0.03%)</title><rect x="606.1" y="245" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="609.10" y="255.5" ></text>
</g>
<g >
<title>may_open (279,997,879 samples, 0.45%)</title><rect x="933.4" y="277" width="5.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="936.36" y="287.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,651,253 samples, 0.03%)</title><rect x="698.1" y="357" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="701.08" y="367.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (3,606,728,817 samples, 5.75%)</title><rect x="445.3" y="293" width="67.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="448.32" y="303.5" >ext4_ht..</text>
</g>
<g >
<title>ext4_bread (4,332,989,523 samples, 6.91%)</title><rect x="363.8" y="277" width="81.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="366.80" y="287.5" >ext4_bread</text>
</g>
<g >
<title>__slab_free (53,559,010 samples, 0.09%)</title><rect x="652.7" y="309" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="655.66" y="319.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (703,024,613 samples, 1.12%)</title><rect x="539.3" y="261" width="13.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="542.26" y="271.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (88,865,998 samples, 0.14%)</title><rect x="994.5" y="405" width="1.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="997.50" y="415.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (11,146,665,147 samples, 17.77%)</title><rect x="342.8" y="325" width="209.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="345.78" y="335.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>__check_block_validity.constprop.0 (280,054,428 samples, 0.45%)</title><rect x="434.4" y="229" width="5.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="437.44" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17,800,136 samples, 0.03%)</title><rect x="445.0" y="197" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="447.98" y="207.5" ></text>
</g>
<g >
<title>debug.assert (34,376,638 samples, 0.05%)</title><rect x="240.5" y="309" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="243.46" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,841,640 samples, 0.03%)</title><rect x="606.1" y="293" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="609.10" y="303.5" ></text>
</g>
<g >
<title>filldir64 (1,260,360,185 samples, 2.01%)</title><rect x="319.1" y="309" width="23.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="322.07" y="319.5" >f..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,650,747 samples, 0.03%)</title><rect x="538.9" y="261" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="541.93" y="271.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (107,537,358 samples, 0.17%)</title><rect x="899.0" y="197" width="2.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="901.98" y="207.5" ></text>
</g>
<g >
<title>folio_mark_accessed (18,789,630 samples, 0.03%)</title><rect x="420.9" y="197" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="423.94" y="207.5" ></text>
</g>
<g >
<title>memchr (194,768,623 samples, 0.31%)</title><rect x="339.1" y="277" width="3.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="342.12" y="287.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (71,629,615 samples, 0.11%)</title><rect x="908.1" y="213" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="911.12" y="223.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,496,790,789 samples, 2.39%)</title><rect x="996.2" y="453" width="28.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="999.18" y="463.5" >p..</text>
</g>
<g >
<title>__legitimize_path (368,981,277 samples, 0.59%)</title><rect x="860.9" y="245" width="6.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="863.87" y="255.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (34,267,691 samples, 0.05%)</title><rect x="955.4" y="309" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="958.44" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (33,511,392 samples, 0.05%)</title><rect x="684.5" y="373" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="687.52" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (53,156,643 samples, 0.08%)</title><rect x="849.3" y="229" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="852.33" y="239.5" ></text>
</g>
<g >
<title>irqtime_account_irq (17,676,518 samples, 0.03%)</title><rect x="881.9" y="229" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="884.89" y="239.5" ></text>
</g>
<g >
<title>[unknown] (51,369,049 samples, 0.08%)</title><rect x="10.0" y="565" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (245,875,537 samples, 0.39%)</title><rect x="788.2" y="389" width="4.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="791.22" y="399.5" ></text>
</g>
<g >
<title>allocate_slab (34,200,317 samples, 0.05%)</title><rect x="840.8" y="229" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="843.80" y="239.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (36,237,521 samples, 0.06%)</title><rect x="619.3" y="453" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="622.26" y="463.5" ></text>
</g>
<g >
<title>schedule (17,988,982 samples, 0.03%)</title><rect x="769.6" y="389" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="772.61" y="399.5" ></text>
</g>
<g >
<title>errseq_sample (57,333,364 samples, 0.09%)</title><rect x="882.2" y="261" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="885.22" y="271.5" ></text>
</g>
<g >
<title>mem.eqlBytes (5,236,504,461 samples, 8.35%)</title><rect x="1063.9" y="421" width="98.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1066.86" y="431.5" >mem.eqlBytes</text>
</g>
<g >
<title>__irq_exit_rcu (17,651,253 samples, 0.03%)</title><rect x="698.1" y="405" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="701.08" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (281,198,176 samples, 0.45%)</title><rect x="90.5" y="469" width="5.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="93.49" y="479.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (17,577,433 samples, 0.03%)</title><rect x="567.5" y="293" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="570.49" y="303.5" ></text>
</g>
<g >
<title>__fsnotify_parent (17,838,512 samples, 0.03%)</title><rect x="305.5" y="341" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="308.53" y="351.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (194,606,210 samples, 0.31%)</title><rect x="990.8" y="373" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="993.84" y="383.5" ></text>
</g>
<g >
<title>filemap_get_entry (1,326,159,409 samples, 2.11%)</title><rect x="396.0" y="197" width="24.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="398.99" y="207.5" >f..</text>
</g>
<g >
<title>ext4_sb_block_valid (260,898,872 samples, 0.42%)</title><rect x="434.8" y="213" width="4.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="437.80" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (229,466,973 samples, 0.37%)</title><rect x="86.2" y="469" width="4.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="89.17" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (17,859,904 samples, 0.03%)</title><rect x="18.1" y="549" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="21.12" y="559.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (18,808,239 samples, 0.03%)</title><rect x="842.7" y="213" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="845.74" y="223.5" ></text>
</g>
<g >
<title>__call_rcu_common (457,617,518 samples, 0.73%)</title><rect x="629.1" y="357" width="8.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="632.10" y="367.5" ></text>
</g>
<g >
<title>debug.assert (70,678,109 samples, 0.11%)</title><rect x="229.7" y="389" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="232.74" y="399.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (51,369,049 samples, 0.08%)</title><rect x="10.0" y="549" width="1.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>[unknown] (245,875,537 samples, 0.39%)</title><rect x="788.2" y="405" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="791.22" y="415.5" ></text>
</g>
<g >
<title>array_list.addOrOom (53,531,725 samples, 0.09%)</title><rect x="96.8" y="453" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="99.81" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (86,923,779 samples, 0.14%)</title><rect x="1160.7" y="405" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1163.74" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (158,854,539 samples, 0.25%)</title><rect x="606.8" y="357" width="3.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="609.77" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (245,875,537 samples, 0.39%)</title><rect x="788.2" y="373" width="4.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="791.22" y="383.5" ></text>
</g>
<g >
<title>handle_softirqs (17,651,253 samples, 0.03%)</title><rect x="698.1" y="389" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="701.08" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,848,887 samples, 0.03%)</title><rect x="439.4" y="117" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="442.37" y="127.5" ></text>
</g>
<g >
<title>fs.Dir.close (3,750,215,803 samples, 5.98%)</title><rect x="619.9" y="469" width="70.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="622.95" y="479.5" >fs.Dir...</text>
</g>
<g >
<title>touch_atime (317,326,677 samples, 0.51%)</title><rect x="591.2" y="341" width="5.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="594.18" y="351.5" ></text>
</g>
<g >
<title>rcu_core (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="357" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1066.20" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,651,253 samples, 0.03%)</title><rect x="698.1" y="421" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="701.08" y="431.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (140,162,090 samples, 0.22%)</title><rect x="69.4" y="453" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="72.42" y="463.5" ></text>
</g>
<g >
<title>amd_clear_divider (18,815,738 samples, 0.03%)</title><rect x="985.9" y="325" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.93" y="335.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (54,014,359 samples, 0.09%)</title><rect x="808.0" y="293" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="810.96" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (18,129,754 samples, 0.03%)</title><rect x="753.3" y="389" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="756.27" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,309,144 samples, 0.03%)</title><rect x="848.3" y="213" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="851.31" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (52,366,807 samples, 0.08%)</title><rect x="38.0" y="485" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="41.01" y="495.5" ></text>
</g>
<g >
<title>rcu_do_batch (18,789,347 samples, 0.03%)</title><rect x="567.1" y="213" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="570.14" y="223.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (71,437,097 samples, 0.11%)</title><rect x="1030.0" y="453" width="1.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1033.02" y="463.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (1,631,083,304 samples, 2.60%)</title><rect x="241.1" y="389" width="30.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="244.11" y="399.5" >si..</text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (18,688,622 samples, 0.03%)</title><rect x="1025.0" y="485" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1028.01" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (34,874,700 samples, 0.06%)</title><rect x="611.7" y="405" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="614.69" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (34,283,786 samples, 0.05%)</title><rect x="551.8" y="197" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="554.85" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (51,369,049 samples, 0.08%)</title><rect x="10.0" y="533" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (53,609,849 samples, 0.09%)</title><rect x="19.1" y="501" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="22.14" y="511.5" ></text>
</g>
<g >
<title>start.callMain (62,234,996,388 samples, 99.23%)</title><rect x="19.1" y="533" width="1170.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="22.14" y="543.5" >start.callMain</text>
</g>
<g >
<title>ext4_release_dir (842,957,908 samples, 1.34%)</title><rect x="643.1" y="341" width="15.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="646.10" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,841,640 samples, 0.03%)</title><rect x="606.1" y="341" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="609.10" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_free (286,531,457 samples, 0.46%)</title><rect x="647.3" y="309" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="650.27" y="319.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (17,012,115 samples, 0.03%)</title><rect x="233.4" y="357" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="236.37" y="367.5" ></text>
</g>
<g >
<title>pick_file (69,217,713 samples, 0.11%)</title><rect x="674.2" y="341" width="1.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="677.21" y="351.5" ></text>
</g>
<g >
<title>build_open_flags (34,274,883 samples, 0.05%)</title><rect x="811.0" y="309" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="813.98" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (54,728,166 samples, 0.09%)</title><rect x="182.4" y="437" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="185.44" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,122,390,100 samples, 4.98%)</title><rect x="627.1" y="405" width="58.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="630.07" y="415.5" >entry_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (34,513,586 samples, 0.06%)</title><rect x="430.1" y="165" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="433.09" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,676,518 samples, 0.03%)</title><rect x="881.9" y="261" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="884.89" y="271.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (54,162,661 samples, 0.09%)</title><rect x="1021.7" y="389" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1024.67" y="399.5" ></text>
</g>
<g >
<title>atime_needs_update (281,962,398 samples, 0.45%)</title><rect x="591.8" y="325" width="5.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="594.85" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (17,164,271,748 samples, 27.37%)</title><rect x="701.4" y="469" width="322.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="704.41" y="479.5" >fs.Dir.openDir</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (36,001,021 samples, 0.06%)</title><rect x="18.5" y="565" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="21.46" y="575.5" ></text>
</g>
<g >
<title>locks_remove_posix (126,265,212 samples, 0.20%)</title><rect x="681.8" y="341" width="2.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="684.81" y="351.5" ></text>
</g>
<g >
<title>mem.eqlBytes (33,891,883 samples, 0.05%)</title><rect x="183.5" y="437" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="186.47" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (33,953,161 samples, 0.05%)</title><rect x="72.1" y="469" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="75.06" y="479.5" ></text>
</g>
<g >
<title>__srcu_read_lock (120,731,966 samples, 0.19%)</title><rect x="677.9" y="293" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="680.89" y="303.5" ></text>
</g>
<g >
<title>rcu_do_batch (15,833,943 samples, 0.03%)</title><rect x="66.7" y="341" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="69.73" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="325" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1066.20" y="335.5" ></text>
</g>
<g >
<title>[[x_tables]] (878,676,910 samples, 1.40%)</title><rect x="896.7" y="229" width="16.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="899.66" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (35,112,331 samples, 0.06%)</title><rect x="444.7" y="213" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="447.66" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (34,283,786 samples, 0.05%)</title><rect x="551.8" y="213" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="554.85" y="223.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (72,707,057 samples, 0.12%)</title><rect x="688.4" y="437" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="691.45" y="447.5" ></text>
</g>
<g >
<title>cache_from_obj (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="309" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1066.20" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (35,869,718 samples, 0.06%)</title><rect x="14.1" y="549" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="17.12" y="559.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (1,163,143,224 samples, 1.85%)</title><rect x="1002.5" y="421" width="21.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1005.45" y="431.5" >m..</text>
</g>
<g >
<title>os.linux.openat (10,718,525,228 samples, 17.09%)</title><rect x="792.8" y="405" width="201.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="795.85" y="415.5" >os.linux.openat</text>
</g>
<g >
<title>handle_softirqs (15,833,943 samples, 0.03%)</title><rect x="66.7" y="373" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="69.73" y="383.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (141,649,017 samples, 0.23%)</title><rect x="634.4" y="341" width="2.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="637.40" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (462,542,512 samples, 0.74%)</title><rect x="956.8" y="293" width="8.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="959.76" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (11,429,171,403 samples, 18.22%)</title><rect x="781.2" y="437" width="215.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="784.15" y="447.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (17,885,429 samples, 0.03%)</title><rect x="213.7" y="437" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="216.67" y="447.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (4,351,631,951 samples, 6.94%)</title><rect x="363.4" y="293" width="81.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="366.45" y="303.5" >__ext4_re..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,789,347 samples, 0.03%)</title><rect x="567.1" y="277" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="570.14" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,988,982 samples, 0.03%)</title><rect x="769.6" y="437" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="772.61" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (36,537,974 samples, 0.06%)</title><rect x="912.5" y="213" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="915.50" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,129,754 samples, 0.03%)</title><rect x="753.3" y="405" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="756.27" y="415.5" ></text>
</g>
<g >
<title>__fput (1,695,187,619 samples, 2.70%)</title><rect x="637.7" y="357" width="31.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="640.71" y="367.5" >__..</text>
</g>
<g >
<title>kmem_cache_free (246,652,867 samples, 0.39%)</title><rect x="661.0" y="341" width="4.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="663.95" y="351.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (62,234,996,388 samples, 99.23%)</title><rect x="19.1" y="549" width="1170.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="22.14" y="559.5" >start.callMainWithArgs</text>
</g>
<g >
<title>fsnotify_perm.part.0 (198,096,232 samples, 0.32%)</title><rect x="887.6" y="261" width="3.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="890.60" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (15,833,943 samples, 0.03%)</title><rect x="66.7" y="437" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="69.73" y="447.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (17,954,142,074 samples, 28.63%)</title><rect x="278.6" y="421" width="337.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="281.57" y="431.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (194,164,008 samples, 0.31%)</title><rect x="86.8" y="453" width="3.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="89.84" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (826,047,142 samples, 1.32%)</title><rect x="22.5" y="485" width="15.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="25.47" y="495.5" ></text>
</g>
<g >
<title>rcu_do_batch (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="341" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1066.20" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (17,887,875 samples, 0.03%)</title><rect x="769.9" y="453" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="772.95" y="463.5" ></text>
</g>
<g >
<title>avg_vruntime (17,809,943 samples, 0.03%)</title><rect x="1162.0" y="229" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1165.04" y="239.5" ></text>
</g>
<g >
<title>rcu_core (18,129,754 samples, 0.03%)</title><rect x="753.3" y="373" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="756.27" y="383.5" ></text>
</g>
<g >
<title>migrate_enable (18,024,022 samples, 0.03%)</title><rect x="909.5" y="197" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="912.46" y="207.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (52,268,827 samples, 0.08%)</title><rect x="685.8" y="405" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="688.81" y="415.5" ></text>
</g>
<g >
<title>security_file_permission (36,353,010 samples, 0.06%)</title><rect x="590.5" y="341" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="593.50" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,841,640 samples, 0.03%)</title><rect x="606.1" y="213" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="609.10" y="223.5" ></text>
</g>
<g >
<title>fsnotify (144,634,428 samples, 0.23%)</title><rect x="888.6" y="245" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="891.61" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (179,059,649 samples, 0.29%)</title><rect x="612.3" y="405" width="3.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="615.35" y="415.5" ></text>
</g>
<g >
<title>init_file (557,066,081 samples, 0.89%)</title><rect x="821.5" y="261" width="10.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="824.55" y="271.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9010 (34,376,638 samples, 0.05%)</title><rect x="240.5" y="325" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="243.46" y="335.5" ></text>
</g>
<g >
<title>reweight_entity (17,809,943 samples, 0.03%)</title><rect x="1162.0" y="245" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1165.04" y="255.5" ></text>
</g>
<g >
<title>os.linux.openat (17,380,174 samples, 0.03%)</title><rect x="784.9" y="421" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="787.88" y="431.5" ></text>
</g>
<g >
<title>security_inode_permission (54,015,457 samples, 0.09%)</title><rect x="920.8" y="261" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="923.80" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (83,593,055 samples, 0.13%)</title><rect x="853.0" y="229" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="856.03" y="239.5" ></text>
</g>
<g >
<title>call_filldir (1,350,250,366 samples, 2.15%)</title><rect x="317.4" y="325" width="25.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="320.38" y="335.5" >c..</text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (1,163,143,224 samples, 1.85%)</title><rect x="1002.5" y="437" width="21.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1005.45" y="447.5" >m..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36,001,021 samples, 0.06%)</title><rect x="18.5" y="549" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="21.46" y="559.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (69,176,620 samples, 0.11%)</title><rect x="65.4" y="437" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="68.42" y="447.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.0 (15,084,551 samples, 0.02%)</title><rect x="1161.8" y="229" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1164.75" y="239.5" ></text>
</g>
<g >
<title>dget_parent (34,127,280 samples, 0.05%)</title><rect x="881.2" y="245" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="884.25" y="255.5" ></text>
</g>
<g >
<title>debug.inValgrind (352,443,045 samples, 0.56%)</title><rect x="231.1" y="389" width="6.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="234.07" y="399.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (319,515,689 samples, 0.51%)</title><rect x="552.5" y="325" width="6.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="555.49" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,789,347 samples, 0.03%)</title><rect x="567.1" y="293" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="570.14" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,988,982 samples, 0.03%)</title><rect x="769.6" y="405" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="772.61" y="415.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (613,704,426 samples, 0.98%)</title><rect x="921.8" y="261" width="11.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="924.82" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_se (17,988,982 samples, 0.03%)</title><rect x="769.6" y="309" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="772.61" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,848,887 samples, 0.03%)</title><rect x="439.4" y="149" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="442.37" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,650,747 samples, 0.03%)</title><rect x="538.9" y="245" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="541.93" y="255.5" ></text>
</g>
<g >
<title>inode_to_bdi (70,012,802 samples, 0.11%)</title><rect x="884.6" y="245" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="887.62" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (107,036,509 samples, 0.17%)</title><rect x="985.9" y="341" width="2.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="988.93" y="351.5" ></text>
</g>
<g >
<title>file_ra_state_init (140,233,198 samples, 0.22%)</title><rect x="883.3" y="261" width="2.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="886.30" y="271.5" ></text>
</g>
<g >
<title>mntput (52,465,672 samples, 0.08%)</title><rect x="665.9" y="341" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="668.93" y="351.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (300,071,996 samples, 0.48%)</title><rect x="844.7" y="245" width="5.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="847.69" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,676,518 samples, 0.03%)</title><rect x="881.9" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="884.89" y="255.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7460 (17,843,122 samples, 0.03%)</title><rect x="239.1" y="357" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="242.07" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_free (231,601,262 samples, 0.37%)</title><rect x="978.6" y="309" width="4.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="981.55" y="319.5" ></text>
</g>
<g >
<title>__mutex_init (17,756,804 samples, 0.03%)</title><rect x="826.2" y="245" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="829.19" y="255.5" ></text>
</g>
<g >
<title>dnotify_flush (334,831,308 samples, 0.53%)</title><rect x="675.5" y="341" width="6.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="678.51" y="351.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (34,531,414 samples, 0.06%)</title><rect x="831.4" y="213" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="834.38" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (16,790,610,080 samples, 26.77%)</title><rect x="288.2" y="373" width="315.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="291.19" y="383.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>ext4_readdir (13,808,924,772 samples, 22.02%)</title><rect x="310.4" y="341" width="259.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="313.35" y="351.5" >ext4_readdir</text>
</g>
<g >
<title>__slab_free (124,599,245 samples, 0.20%)</title><rect x="553.5" y="309" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="556.51" y="319.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,650,747 samples, 0.03%)</title><rect x="538.9" y="101" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="541.93" y="111.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (192,469,249 samples, 0.31%)</title><rect x="845.7" y="229" width="3.6" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="848.71" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (17,265,129 samples, 0.03%)</title><rect x="844.4" y="245" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="847.36" y="255.5" ></text>
</g>
<g >
<title>__fget_light (127,274,761 samples, 0.20%)</title><rect x="293.7" y="341" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="296.68" y="351.5" ></text>
</g>
<g >
<title>__brelse (156,826,760 samples, 0.25%)</title><rect x="350.1" y="293" width="2.9" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="353.10" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,848,887 samples, 0.03%)</title><rect x="439.4" y="197" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="442.37" y="207.5" ></text>
</g>
<g >
<title>debug.assert (18,784,072 samples, 0.03%)</title><rect x="239.4" y="341" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="242.41" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (2,734,196,644 samples, 4.36%)</title><rect x="220.4" y="405" width="51.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="223.35" y="415.5" >mem.i..</text>
</g>
<g >
<title>hrtimer_interrupt (17,841,640 samples, 0.03%)</title><rect x="606.1" y="309" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="609.10" y="319.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (1,571,586,579 samples, 2.51%)</title><rect x="184.1" y="437" width="29.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="187.10" y="447.5" >me..</text>
</g>
<g >
<title>rb_first (17,984,940 samples, 0.03%)</title><rect x="567.8" y="325" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="570.82" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (141,786,274 samples, 0.23%)</title><rect x="698.4" y="453" width="2.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="701.41" y="463.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (87,714,139 samples, 0.14%)</title><rect x="910.9" y="213" width="1.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="913.85" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (34,513,586 samples, 0.06%)</title><rect x="430.1" y="181" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="433.09" y="191.5" ></text>
</g>
<g >
<title>security_file_alloc (292,371,896 samples, 0.47%)</title><rect x="826.5" y="245" width="5.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="829.53" y="255.5" ></text>
</g>
<g >
<title>close_fd_get_file (313,743,901 samples, 0.50%)</title><rect x="669.6" y="357" width="5.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="672.61" y="367.5" ></text>
</g>
<g >
<title>__memcpy (296,607,680 samples, 0.47%)</title><rect x="505.9" y="277" width="5.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="508.89" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="405" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1066.20" y="415.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (17,872,776 samples, 0.03%)</title><rect x="1021.3" y="389" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1024.33" y="399.5" ></text>
</g>
<g >
<title>___slab_alloc (176,453,111 samples, 0.28%)</title><rect x="839.8" y="245" width="3.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="842.77" y="255.5" ></text>
</g>
<g >
<title>mem.eqlBytes (499,997,419 samples, 0.80%)</title><rect x="189.8" y="421" width="9.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="192.79" y="431.5" ></text>
</g>
<g >
<title>rcu_do_batch (18,129,754 samples, 0.03%)</title><rect x="753.3" y="357" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="756.27" y="367.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (33,903,978 samples, 0.05%)</title><rect x="938.0" y="245" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="940.99" y="255.5" ></text>
</g>
<g >
<title>security_inode_permission (69,265,193 samples, 0.11%)</title><rect x="937.3" y="261" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="940.33" y="271.5" ></text>
</g>
<g >
<title>___slab_alloc (37,121,379 samples, 0.06%)</title><rect x="499.9" y="245" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="502.95" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,212,910,904 samples, 27.44%)</title><rect x="287.9" y="389" width="323.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="290.85" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (420,291,499 samples, 0.67%)</title><rect x="690.5" y="453" width="7.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="693.50" y="463.5" ></text>
</g>
<g >
<title>terminate_walk (368,668,918 samples, 0.59%)</title><rect x="945.2" y="277" width="6.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="948.19" y="287.5" ></text>
</g>
<g >
<title>debug.assert (33,998,460 samples, 0.05%)</title><rect x="89.9" y="437" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="92.85" y="447.5" ></text>
</g>
<g >
<title>strncpy_from_user (695,782,823 samples, 1.11%)</title><rect x="965.5" y="293" width="13.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="968.46" y="303.5" ></text>
</g>
<g >
<title>mem.eqlBytes (119,332,700 samples, 0.19%)</title><rect x="1050.3" y="437" width="2.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1053.35" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,687,971 samples, 0.03%)</title><rect x="753.6" y="341" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="756.61" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="277" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1164.42" y="287.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (53,263,620 samples, 0.08%)</title><rect x="231.7" y="373" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="234.73" y="383.5" ></text>
</g>
<g >
<title>[unknown] (592,167,408 samples, 0.94%)</title><rect x="897.0" y="213" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="899.98" y="223.5" ></text>
</g>
<g >
<title>rb_next_postorder (51,639,185 samples, 0.08%)</title><rect x="557.5" y="309" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="560.53" y="319.5" ></text>
</g>
<g >
<title>xas_start (112,860,689 samples, 0.18%)</title><rect x="418.8" y="165" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="421.81" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (108,837,867 samples, 0.17%)</title><rect x="67.0" y="453" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="70.02" y="463.5" ></text>
</g>
<g >
<title>lockref_put_return (105,696,745 samples, 0.17%)</title><rect x="949.4" y="245" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="952.45" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (34,513,586 samples, 0.06%)</title><rect x="430.1" y="85" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="433.09" y="95.5" ></text>
</g>
<g >
<title>putname (142,922,455 samples, 0.23%)</title><rect x="982.9" y="309" width="2.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="985.91" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (162,848,683 samples, 0.26%)</title><rect x="64.0" y="453" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="66.96" y="463.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (383,886,179 samples, 0.61%)</title><rect x="850.3" y="245" width="7.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="853.33" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="325" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1164.42" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_close (2,963,493,551 samples, 4.72%)</title><rect x="628.4" y="373" width="55.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="631.43" y="383.5" >__x64..</text>
</g>
<g >
<title>__hrtimer_run_queues (17,650,747 samples, 0.03%)</title><rect x="538.9" y="197" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="541.93" y="207.5" ></text>
</g>
<g >
<title>__kmalloc (2,747,107,285 samples, 4.38%)</title><rect x="454.2" y="277" width="51.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="457.21" y="287.5" >__kma..</text>
</g>
<g >
<title>perf_event_task_tick (17,848,887 samples, 0.03%)</title><rect x="439.4" y="53" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="442.37" y="63.5" ></text>
</g>
<g >
<title>scheduler_tick (17,848,887 samples, 0.03%)</title><rect x="439.4" y="69" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="442.37" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="357" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1164.42" y="367.5" ></text>
</g>
<g >
<title>update_process_times (17,848,887 samples, 0.03%)</title><rect x="439.4" y="85" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="442.37" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,650,747 samples, 0.03%)</title><rect x="538.9" y="229" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="541.93" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (53,289,323 samples, 0.08%)</title><rect x="502.6" y="245" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="505.64" y="255.5" ></text>
</g>
<g >
<title>sched_clock_cpu (18,687,971 samples, 0.03%)</title><rect x="753.6" y="277" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="756.61" y="287.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (87,687,222 samples, 0.14%)</title><rect x="1022.7" y="405" width="1.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1025.69" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,687,971 samples, 0.03%)</title><rect x="753.6" y="357" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="756.61" y="367.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (194,345,116 samples, 0.31%)</title><rect x="606.4" y="373" width="3.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="609.44" y="383.5" ></text>
</g>
<g >
<title>iterate_dir (16,007,860,670 samples, 25.52%)</title><rect x="301.2" y="357" width="301.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="304.23" y="367.5" >iterate_dir</text>
</g>
<g >
<title>put_prev_entity (17,988,982 samples, 0.03%)</title><rect x="769.6" y="341" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="772.61" y="351.5" ></text>
</g>
<g >
<title>__memset (197,098,321 samples, 0.31%)</title><rect x="960.0" y="277" width="3.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="963.04" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,650,747 samples, 0.03%)</title><rect x="538.9" y="181" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="541.93" y="191.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (15,833,943 samples, 0.03%)</title><rect x="66.7" y="325" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="69.73" y="335.5" ></text>
</g>
<g >
<title>kfree (210,977,648 samples, 0.34%)</title><rect x="653.7" y="309" width="3.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="656.67" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (51,346,229 samples, 0.08%)</title><rect x="809.0" y="293" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="811.98" y="303.5" ></text>
</g>
<g >
<title>rcu_do_batch (34,513,586 samples, 0.06%)</title><rect x="430.1" y="101" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="433.09" y="111.5" ></text>
</g>
<g >
<title>make_vfsuid (34,487,117 samples, 0.05%)</title><rect x="920.2" y="229" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="923.15" y="239.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (320,341,560 samples, 0.51%)</title><rect x="1184.0" y="437" width="6.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1186.97" y="447.5" ></text>
</g>
<g >
<title>__fdget_pos (17,643,130 samples, 0.03%)</title><rect x="617.3" y="341" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="620.30" y="351.5" ></text>
</g>
<g >
<title>rb_next (105,926,477 samples, 0.17%)</title><rect x="568.2" y="325" width="2.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="571.16" y="335.5" ></text>
</g>
<g >
<title>rcu_core (15,833,943 samples, 0.03%)</title><rect x="66.7" y="357" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="69.73" y="367.5" ></text>
</g>
<g >
<title>debug.assert (54,064,544 samples, 0.09%)</title><rect x="99.1" y="453" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="102.12" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,650,747 samples, 0.03%)</title><rect x="538.9" y="213" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="541.93" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (35,768,148 samples, 0.06%)</title><rect x="911.8" y="197" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="914.83" y="207.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (123,586,878 samples, 0.20%)</title><rect x="857.9" y="261" width="2.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="860.89" y="271.5" ></text>
</g>
<g >
<title>make_vfsuid (17,763,116 samples, 0.03%)</title><rect x="596.8" y="309" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="599.82" y="319.5" ></text>
</g>
<g >
<title>__memset (36,598,394 samples, 0.06%)</title><rect x="830.7" y="213" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="833.69" y="223.5" ></text>
</g>
<g >
<title>try_to_unlazy (426,983,621 samples, 0.68%)</title><rect x="860.2" y="261" width="8.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="863.22" y="271.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7461 (35,680,566 samples, 0.06%)</title><rect x="238.7" y="373" width="0.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="241.74" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,852,502 samples, 0.03%)</title><rect x="439.0" y="197" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="442.03" y="207.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3954 (35,680,566 samples, 0.06%)</title><rect x="238.7" y="389" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="241.74" y="399.5" ></text>
</g>
<g >
<title>[unknown] (485,574,017 samples, 0.77%)</title><rect x="10.0" y="581" width="9.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (17,839,622 samples, 0.03%)</title><rect x="95.8" y="469" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="98.78" y="479.5" ></text>
</g>
<g >
<title>sched_clock (18,687,971 samples, 0.03%)</title><rect x="753.6" y="261" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="756.61" y="271.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8551 (90,444,563 samples, 0.14%)</title><rect x="239.4" y="357" width="1.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="242.41" y="367.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_7754 (90,444,563 samples, 0.14%)</title><rect x="239.4" y="373" width="1.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="242.41" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (17,841,640 samples, 0.03%)</title><rect x="606.1" y="229" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="609.10" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,212,910,904 samples, 27.44%)</title><rect x="287.9" y="405" width="323.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="290.85" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>update_process_times (34,283,786 samples, 0.05%)</title><rect x="551.8" y="133" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="554.85" y="143.5" ></text>
</g>
<g >
<title>ksys_lseek (17,643,130 samples, 0.03%)</title><rect x="617.3" y="357" width="0.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="620.30" y="367.5" ></text>
</g>
<g >
<title>debug.assert (87,687,222 samples, 0.14%)</title><rect x="1022.7" y="389" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1025.69" y="399.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,830,920 samples, 0.03%)</title><rect x="985.6" y="341" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="988.60" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (142,915,749 samples, 0.23%)</title><rect x="829.3" y="229" width="2.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="832.34" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (17,795,431 samples, 0.03%)</title><rect x="609.8" y="357" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="612.76" y="367.5" ></text>
</g>
<g >
<title>path_init (261,892,340 samples, 0.42%)</title><rect x="938.6" y="277" width="5.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="941.63" y="287.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (714,920,268 samples, 1.14%)</title><rect x="199.2" y="421" width="13.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="202.20" y="431.5" ></text>
</g>
<g >
<title>locks_remove_file (18,190,606 samples, 0.03%)</title><rect x="665.6" y="341" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="668.59" y="351.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (298,349,273 samples, 0.48%)</title><rect x="439.7" y="229" width="5.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="442.70" y="239.5" ></text>
</g>
<g >
<title>fd_install (176,455,750 samples, 0.28%)</title><rect x="952.1" y="309" width="3.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="955.12" y="319.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (87,752,978 samples, 0.14%)</title><rect x="841.4" y="229" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="844.44" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,374,845,879 samples, 2.19%)</title><rect x="832.0" y="261" width="25.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="835.03" y="271.5" >k..</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (10,590,633,528 samples, 16.89%)</title><rect x="795.3" y="389" width="199.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="798.26" y="399.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>syscall_return_via_sysret (52,769,939 samples, 0.08%)</title><rect x="686.8" y="405" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="689.80" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (87,043,152 samples, 0.14%)</title><rect x="671.3" y="341" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="674.25" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_free (112,645,505 samples, 0.18%)</title><rect x="643.8" y="325" width="2.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="646.79" y="335.5" ></text>
</g>
<g >
<title>rcu_core (36,064,641 samples, 0.06%)</title><rect x="1160.7" y="341" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1163.74" y="351.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1,194,050,175 samples, 1.90%)</title><rect x="956.1" y="309" width="22.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="959.09" y="319.5" >g..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,026,124,440 samples, 15.99%)</title><rect x="799.6" y="373" width="188.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="802.63" y="383.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>file_free_rcu (36,064,641 samples, 0.06%)</title><rect x="1160.7" y="309" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1163.74" y="319.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,841,640 samples, 0.03%)</title><rect x="606.1" y="197" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="609.10" y="207.5" ></text>
</g>
<g >
<title>update_process_times (17,650,747 samples, 0.03%)</title><rect x="538.9" y="149" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="541.93" y="159.5" ></text>
</g>
<g >
<title>do_dentry_open (2,510,756,911 samples, 4.00%)</title><rect x="868.3" y="277" width="47.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="871.25" y="287.5" >do_d..</text>
</g>
<g >
<title>tick_sched_handle (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="309" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1164.42" y="319.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (11,129,189,036 samples, 17.74%)</title><rect x="343.1" y="309" width="209.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="346.11" y="319.5" >htree_dirblock_to_tree</text>
</g>
<g >
<title>syscall_return_via_sysret (33,976,353 samples, 0.05%)</title><rect x="615.7" y="405" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="618.72" y="415.5" ></text>
</g>
<g >
<title>os.linux.lseek (17,643,130 samples, 0.03%)</title><rect x="617.3" y="421" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="620.30" y="431.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (641,477,139 samples, 1.02%)</title><rect x="645.9" y="325" width="12.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="648.91" y="335.5" ></text>
</g>
<g >
<title>__check_object_size (421,937,059 samples, 0.67%)</title><rect x="970.6" y="277" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="973.61" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (34,513,586 samples, 0.06%)</title><rect x="430.1" y="149" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="433.09" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (69,843,683 samples, 0.11%)</title><rect x="672.9" y="341" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="675.89" y="351.5" ></text>
</g>
<g >
<title>mntput_no_expire (36,562,231 samples, 0.06%)</title><rect x="951.4" y="261" width="0.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="954.44" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (35,347,032 samples, 0.06%)</title><rect x="685.1" y="373" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="688.15" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (17,809,943 samples, 0.03%)</title><rect x="1162.0" y="261" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1165.04" y="271.5" ></text>
</g>
<g >
<title>__fget_light (104,965,243 samples, 0.17%)</title><rect x="941.2" y="261" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="944.25" y="271.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (55,861,656 samples, 0.09%)</title><rect x="909.8" y="213" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="912.80" y="223.5" ></text>
</g>
<g >
<title>fsnotify (322,401,408 samples, 0.51%)</title><rect x="570.2" y="341" width="6.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="573.15" y="351.5" ></text>
</g>
<g >
<title>do_filp_open (7,468,042,214 samples, 11.91%)</title><rect x="811.6" y="309" width="140.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="814.62" y="319.5" >do_filp_open</text>
</g>
<g >
<title>compiler_rt.memset.memset (849,598,939 samples, 1.35%)</title><rect x="754.0" y="453" width="15.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="756.97" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,687,971 samples, 0.03%)</title><rect x="753.6" y="389" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="756.61" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,650,747 samples, 0.03%)</title><rect x="538.9" y="165" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="541.93" y="175.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (176,734,246 samples, 0.28%)</title><rect x="904.4" y="165" width="3.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="907.44" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (52,645,959 samples, 0.08%)</title><rect x="987.0" y="325" width="0.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="989.96" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (86,923,779 samples, 0.14%)</title><rect x="1160.7" y="389" width="1.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1163.74" y="399.5" ></text>
</g>
<g >
<title>ext4_getblk (4,296,404,815 samples, 6.85%)</title><rect x="364.5" y="261" width="80.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="367.49" y="271.5" >ext4_getblk</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (341,513,126 samples, 0.54%)</title><rect x="62.6" y="469" width="6.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="65.65" y="479.5" ></text>
</g>
<g >
<title>__rcu_read_lock (53,447,281 samples, 0.09%)</title><rect x="948.4" y="245" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="951.44" y="255.5" ></text>
</g>
<g >
<title>debug.assert (17,852,111 samples, 0.03%)</title><rect x="95.4" y="453" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="98.44" y="463.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (296,944,155 samples, 0.47%)</title><rect x="425.2" y="197" width="5.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="428.16" y="207.5" ></text>
</g>
<g >
<title>down_read_killable (238,729,789 samples, 0.38%)</title><rect x="305.9" y="341" width="4.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="308.86" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (36,817,725 samples, 0.06%)</title><rect x="753.3" y="421" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="756.27" y="431.5" ></text>
</g>
<g >
<title>path_openat (7,202,613,024 samples, 11.48%)</title><rect x="816.6" y="293" width="135.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="819.62" y="303.5" >path_openat</text>
</g>
<g >
<title>os.linux.errnoFromSyscall (144,422,478 samples, 0.23%)</title><rect x="274.5" y="437" width="2.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="277.51" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (176,706,154 samples, 0.28%)</title><rect x="284.5" y="405" width="3.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="287.53" y="415.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (52,257,022 samples, 0.08%)</title><rect x="159.4" y="469" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="162.42" y="479.5" ></text>
</g>
<g >
<title>should_failslab (18,853,277 samples, 0.03%)</title><rect x="503.6" y="245" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="506.64" y="255.5" ></text>
</g>
<g >
<title>fsnotify (635,524,875 samples, 1.01%)</title><rect x="578.5" y="325" width="12.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="581.54" y="335.5" ></text>
</g>
<g >
<title>fsnotify (88,581,452 samples, 0.14%)</title><rect x="885.9" y="261" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="888.94" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (177,084,649 samples, 0.28%)</title><rect x="14.8" y="549" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="17.79" y="559.5" ></text>
</g>
<g >
<title>lockref_put_return (53,082,352 samples, 0.08%)</title><rect x="642.1" y="325" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="645.10" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (2,483,951,718 samples, 3.96%)</title><rect x="457.3" y="261" width="46.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="460.26" y="271.5" >__km..</text>
</g>
<g >
<title>up_read (278,735,925 samples, 0.44%)</title><rect x="597.1" y="341" width="5.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="600.15" y="351.5" ></text>
</g>
<g >
<title>do_sys_openat2 (9,674,669,282 samples, 15.43%)</title><rect x="803.6" y="325" width="182.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="806.58" y="335.5" >do_sys_openat2</text>
</g>
<g >
<title>__rcu_read_lock (18,867,460 samples, 0.03%)</title><rect x="900.0" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="902.98" y="191.5" ></text>
</g>
<g >
<title>mntput_no_expire (53,532,629 samples, 0.09%)</title><rect x="666.9" y="341" width="1.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="669.92" y="351.5" ></text>
</g>
<g >
<title>start._start (62,234,996,388 samples, 99.23%)</title><rect x="19.1" y="581" width="1170.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="22.14" y="591.5" >start._start</text>
</g>
<g >
<title>posix.close (3,462,420,489 samples, 5.52%)</title><rect x="624.7" y="453" width="65.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="627.67" y="463.5" >posix.c..</text>
</g>
<g >
<title>debug.assert (17,837,444 samples, 0.03%)</title><rect x="238.7" y="357" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="241.74" y="367.5" ></text>
</g>
<g >
<title>kfree (52,080,510 samples, 0.08%)</title><rect x="658.0" y="325" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="660.98" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (17,650,747 samples, 0.03%)</title><rect x="538.9" y="69" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="541.93" y="79.5" ></text>
</g>
<g >
<title>mod_objcg_state (121,034,170 samples, 0.19%)</title><rect x="855.3" y="229" width="2.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="858.28" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,833,943 samples, 0.03%)</title><rect x="66.7" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="69.73" y="415.5" ></text>
</g>
<g >
<title>all (62,720,570,405 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,848,887 samples, 0.03%)</title><rect x="439.4" y="165" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="442.37" y="175.5" ></text>
</g>
<g >
<title>verify_dirent_name (300,230,560 samples, 0.48%)</title><rect x="337.1" y="293" width="5.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="340.13" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (34,283,786 samples, 0.05%)</title><rect x="551.8" y="181" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="554.85" y="191.5" ></text>
</g>
<g >
<title>security_file_open (1,070,929,467 samples, 1.71%)</title><rect x="895.0" y="261" width="20.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="898.02" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,841,640 samples, 0.03%)</title><rect x="606.1" y="325" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="609.10" y="335.5" ></text>
</g>
<g >
<title>rb_first_postorder (36,311,735 samples, 0.06%)</title><rect x="556.8" y="309" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="559.85" y="319.5" ></text>
</g>
<g >
<title>fsnotify (105,974,363 samples, 0.17%)</title><rect x="659.0" y="341" width="2.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="661.96" y="351.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (144,205,965 samples, 0.23%)</title><rect x="271.8" y="405" width="2.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="274.79" y="415.5" ></text>
</g>
<g >
<title>rcu_do_batch (36,064,641 samples, 0.06%)</title><rect x="1160.7" y="325" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1163.74" y="335.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (2,878,402,609 samples, 4.59%)</title><rect x="220.4" y="421" width="54.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="223.35" y="431.5" >mem.l..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (69,449,270 samples, 0.11%)</title><rect x="84.2" y="437" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="87.22" y="447.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (194,944,553 samples, 0.31%)</title><rect x="14.8" y="565" width="3.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="17.79" y="575.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,726,099 samples, 0.03%)</title><rect x="641.7" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="644.75" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,651,253 samples, 0.03%)</title><rect x="698.1" y="437" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="701.08" y="447.5" ></text>
</g>
<g >
<title>psi_account_irqtime (18,687,971 samples, 0.03%)</title><rect x="753.6" y="293" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="756.61" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (36,064,641 samples, 0.06%)</title><rect x="1160.7" y="357" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1163.74" y="367.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (62,181,386,539 samples, 99.14%)</title><rect x="20.1" y="501" width="1169.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="23.14" y="511.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (23,983,386,287 samples, 38.24%)</title><rect x="166.4" y="453" width="451.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="169.42" y="463.5" >fs.Dir.Iterator__struct_3782.nextLinux</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (125,692,704 samples, 0.20%)</title><rect x="1000.1" y="437" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1003.09" y="447.5" ></text>
</g>
<g >
<title>__find_get_block (3,343,665,795 samples, 5.33%)</title><rect x="368.9" y="229" width="62.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="371.87" y="239.5" >__find..</text>
</g>
<g >
<title>handle_softirqs (18,789,347 samples, 0.03%)</title><rect x="567.1" y="245" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="570.14" y="255.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (34,299,502 samples, 0.05%)</title><rect x="637.1" y="341" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="640.07" y="351.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_3903 (8,751,214,817 samples, 13.95%)</title><rect x="1025.4" y="485" width="164.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1028.36" y="495.5" >mem.indexOf__anon_3903</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,643,130 samples, 0.03%)</title><rect x="617.3" y="389" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="620.30" y="399.5" ></text>
</g>
<g >
<title>rcu_core (18,789,347 samples, 0.03%)</title><rect x="567.1" y="229" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="570.14" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,833,943 samples, 0.03%)</title><rect x="66.7" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="69.73" y="431.5" ></text>
</g>
<g >
<title>housekeeping_test_cpu (54,770,788 samples, 0.09%)</title><rect x="430.7" y="213" width="1.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="433.74" y="223.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (68,943,138 samples, 0.11%)</title><rect x="618.0" y="453" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="620.97" y="463.5" ></text>
</g>
<g >
<title>[[x_tables]] (18,770,729 samples, 0.03%)</title><rect x="799.3" y="373" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="802.28" y="383.5" ></text>
</g>
<g >
<title>rcu_core (17,651,253 samples, 0.03%)</title><rect x="698.1" y="373" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="701.08" y="383.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (53,701,485 samples, 0.09%)</title><rect x="667.9" y="341" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="670.93" y="351.5" ></text>
</g>
<g >
<title>lookup_fast (613,704,426 samples, 0.98%)</title><rect x="921.8" y="277" width="11.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="924.82" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,686,605 samples, 0.03%)</title><rect x="684.2" y="373" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="687.18" y="383.5" ></text>
</g>
<g >
<title>cache_from_obj (50,898,403 samples, 0.08%)</title><rect x="982.0" y="293" width="0.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="984.95" y="303.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (18,024,022 samples, 0.03%)</title><rect x="909.5" y="213" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="912.46" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (17,919,008 samples, 0.03%)</title><rect x="22.1" y="485" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="25.13" y="495.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,650,747 samples, 0.03%)</title><rect x="538.9" y="117" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="541.93" y="127.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (263,913,379 samples, 0.42%)</title><rect x="232.7" y="373" width="5.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="235.73" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (48,911,536 samples, 0.08%)</title><rect x="409.6" y="181" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="412.61" y="191.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (336,424,032 samples, 0.54%)</title><rect x="915.5" y="277" width="6.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="918.49" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (34,283,786 samples, 0.05%)</title><rect x="551.8" y="149" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="554.85" y="159.5" ></text>
</g>
<g >
<title>posix.openatZ (11,213,395,037 samples, 17.88%)</title><rect x="785.2" y="421" width="211.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="788.21" y="431.5" >posix.openatZ</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (36,817,725 samples, 0.06%)</title><rect x="753.3" y="437" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="756.27" y="447.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (3,282,740,875 samples, 5.23%)</title><rect x="626.0" y="421" width="61.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="629.03" y="431.5" >os.lin..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (557,899,011 samples, 0.89%)</title><rect x="75.7" y="453" width="10.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="78.68" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (17,988,982 samples, 0.03%)</title><rect x="769.6" y="357" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="772.61" y="367.5" ></text>
</g>
<g >
<title>__memset (67,514,486 samples, 0.11%)</title><rect x="843.1" y="245" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="846.09" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (24,426,105,234 samples, 38.94%)</title><rect x="160.4" y="469" width="459.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="163.40" y="479.5" >fs.Dir.Iterator__struct_3782.next</text>
</g>
<g >
<title>mem.isAligned (90,444,563 samples, 0.14%)</title><rect x="239.4" y="389" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="242.41" y="399.5" ></text>
</g>
<g >
<title>__getblk_gfp (3,343,665,795 samples, 5.33%)</title><rect x="368.9" y="245" width="62.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="371.87" y="255.5" >__getb..</text>
</g>
<g >
<title>__hrtimer_run_queues (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="341" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1164.42" y="351.5" ></text>
</g>
<g >
<title>inode_permission (102,385,668 samples, 0.16%)</title><rect x="935.4" y="261" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="938.40" y="271.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (245,379,056 samples, 0.39%)</title><rect x="677.2" y="325" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="680.19" y="335.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (8,624,381,369 samples, 13.75%)</title><rect x="1027.7" y="469" width="162.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1030.74" y="479.5" >mem.indexOfPos__anon..</text>
</g>
<g >
<title>debug.inValgrind (106,369,254 samples, 0.17%)</title><rect x="1020.7" y="405" width="2.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1023.68" y="415.5" ></text>
</g>
<g >
<title>rcu_core (34,513,586 samples, 0.06%)</title><rect x="430.1" y="117" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="433.09" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="373" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1164.42" y="383.5" ></text>
</g>
<g >
<title>__schedule (17,988,982 samples, 0.03%)</title><rect x="769.6" y="373" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="772.61" y="383.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (55,027,175 samples, 0.09%)</title><rect x="237.7" y="389" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="240.70" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (12,006,689,154 samples, 19.14%)</title><rect x="770.3" y="453" width="225.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="773.29" y="463.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,848,887 samples, 0.03%)</title><rect x="439.4" y="37" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="442.37" y="47.5" ></text>
</g>
<g >
<title>mutex_unlock (89,738,496 samples, 0.14%)</title><rect x="602.4" y="357" width="1.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="605.39" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (34,283,786 samples, 0.05%)</title><rect x="551.8" y="117" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="554.85" y="127.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (36,064,641 samples, 0.06%)</title><rect x="1160.7" y="373" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1163.74" y="383.5" ></text>
</g>
<g >
<title>update_process_times (18,687,971 samples, 0.03%)</title><rect x="753.6" y="325" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="756.61" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (35,574,812 samples, 0.06%)</title><rect x="986.3" y="325" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="989.29" y="335.5" ></text>
</g>
<g >
<title>rb_next_postorder (18,006,624 samples, 0.03%)</title><rect x="657.6" y="309" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="660.64" y="319.5" ></text>
</g>
<g >
<title>security_file_free (35,546,759 samples, 0.06%)</title><rect x="668.9" y="341" width="0.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="671.94" y="351.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (54,162,661 samples, 0.09%)</title><rect x="1021.7" y="373" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1024.67" y="383.5" ></text>
</g>
<g >
<title>__put_user_8 (168,354,735 samples, 0.27%)</title><rect x="298.1" y="357" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="301.06" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (34,283,786 samples, 0.05%)</title><rect x="551.8" y="245" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="554.85" y="255.5" ></text>
</g>
<g >
<title>filp_flush (461,096,520 samples, 0.74%)</title><rect x="675.5" y="357" width="8.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="678.51" y="367.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (18,025,826,110 samples, 28.74%)</title><rect x="277.2" y="437" width="339.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="280.22" y="447.5" >os.linux.getdents64</text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (203,259,394 samples, 0.32%)</title><rect x="11.0" y="565" width="3.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.97" y="575.5" ></text>
</g>
<g >
<title>update_process_times (50,859,138 samples, 0.08%)</title><rect x="1161.4" y="293" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1164.42" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_free (35,520,490 samples, 0.06%)</title><rect x="552.8" y="309" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="555.84" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (34,344,597 samples, 0.05%)</title><rect x="94.8" y="453" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="97.80" y="463.5" ></text>
</g>
<g >
<title>hook_file_open (105,306,108 samples, 0.17%)</title><rect x="913.2" y="245" width="2.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="916.19" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (17,650,747 samples, 0.03%)</title><rect x="538.9" y="133" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="541.93" y="143.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,789,347 samples, 0.03%)</title><rect x="567.1" y="261" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="570.14" y="271.5" ></text>
</g>
<g >
<title>migrate_disable (53,193,395 samples, 0.08%)</title><rect x="908.5" y="197" width="1.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="911.46" y="207.5" ></text>
</g>
<g >
<title>rb_insert_color (90,436,416 samples, 0.14%)</title><rect x="511.5" y="277" width="1.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="514.47" y="287.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (17,643,130 samples, 0.03%)</title><rect x="617.3" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="620.30" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,687,971 samples, 0.03%)</title><rect x="753.6" y="373" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="756.61" y="383.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (759,022,184 samples, 1.21%)</title><rect x="576.2" y="341" width="14.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="579.22" y="351.5" ></text>
</g>
<g >
<title>make_vfsgid (35,164,743 samples, 0.06%)</title><rect x="596.2" y="309" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="599.15" y="319.5" ></text>
</g>
<g >
<title>handle_softirqs (34,836,340 samples, 0.06%)</title><rect x="1063.2" y="373" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1066.20" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (70,596,510 samples, 0.11%)</title><rect x="699.7" y="437" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="702.75" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (36,284,081 samples, 0.06%)</title><rect x="848.7" y="213" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="851.65" y="223.5" ></text>
</g>
</g>
</svg>
