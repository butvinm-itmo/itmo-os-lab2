<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>rcu_segcblist_enqueue (53,332,074 samples, 0.08%)</title><rect x="605.7" y="277" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="608.68" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (33,404,269 samples, 0.05%)</title><rect x="638.6" y="261" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="641.56" y="271.5" ></text>
</g>
<g >
<title>file_free_rcu (18,645,032 samples, 0.03%)</title><rect x="213.4" y="245" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="216.44" y="255.5" ></text>
</g>
<g >
<title>build_open_flags (90,330,136 samples, 0.14%)</title><rect x="786.7" y="245" width="1.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="789.72" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,853,007 samples, 0.03%)</title><rect x="295.7" y="245" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="298.72" y="255.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (34,706,733 samples, 0.05%)</title><rect x="509.0" y="229" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="512.02" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (33,892,688 samples, 0.05%)</title><rect x="553.0" y="309" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="556.03" y="319.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (18,084,720 samples, 0.03%)</title><rect x="802.1" y="165" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="805.09" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (84,557,780 samples, 0.13%)</title><rect x="761.2" y="309" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="764.20" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_free (446,400,815 samples, 0.70%)</title><rect x="616.8" y="245" width="8.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="619.80" y="255.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (34,253,044 samples, 0.05%)</title><rect x="662.7" y="389" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="665.74" y="399.5" ></text>
</g>
<g >
<title>kick_pool (18,347,216 samples, 0.03%)</title><rect x="512.9" y="117" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="515.92" y="127.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (18,238,220 samples, 0.03%)</title><rect x="801.8" y="165" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="804.75" y="175.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (34,225,653 samples, 0.05%)</title><rect x="823.3" y="197" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="826.28" y="207.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (366,480,466 samples, 0.57%)</title><rect x="228.7" y="309" width="6.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="231.71" y="319.5" ></text>
</g>
<g >
<title>try_to_wake_up (18,347,216 samples, 0.03%)</title><rect x="512.9" y="101" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="515.92" y="111.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7460 (18,739,920 samples, 0.03%)</title><rect x="239.0" y="309" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="241.96" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (190,483,421 samples, 0.30%)</title><rect x="657.3" y="293" width="3.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="660.26" y="303.5" ></text>
</g>
<g >
<title>os.linux.close (3,497,278,804 samples, 5.45%)</title><rect x="597.5" y="373" width="64.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="600.46" y="383.5" >os.linu..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,416,737 samples, 0.03%)</title><rect x="865.2" y="165" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="868.17" y="175.5" ></text>
</g>
<g >
<title>rcu_do_batch (18,645,032 samples, 0.03%)</title><rect x="213.4" y="261" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="216.44" y="271.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7461 (85,734,660 samples, 0.13%)</title><rect x="237.4" y="309" width="1.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="240.38" y="319.5" ></text>
</g>
<g >
<title>enqueue_task (18,347,216 samples, 0.03%)</title><rect x="512.9" y="69" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="515.92" y="79.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,479,066 samples, 0.03%)</title><rect x="84.5" y="213" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="87.49" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,939,548 samples, 0.03%)</title><rect x="850.8" y="165" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="853.75" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_lock (36,321,826 samples, 0.06%)</title><rect x="885.6" y="133" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="888.59" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,440,165,655 samples, 24.07%)</title><rect x="275.9" y="325" width="284.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="278.87" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>obj_cgroup_charge (88,105,765 samples, 0.14%)</title><rect x="821.7" y="181" width="1.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="824.66" y="191.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (332,704,055 samples, 0.52%)</title><rect x="654.6" y="309" width="6.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="657.65" y="319.5" ></text>
</g>
<g >
<title>memcg_account_kmem (17,885,151 samples, 0.03%)</title><rect x="823.0" y="165" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="825.95" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (18,678,500 samples, 0.03%)</title><rect x="937.8" y="213" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="940.85" y="223.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8551 (34,793,266 samples, 0.05%)</title><rect x="239.3" y="293" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="242.30" y="303.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (17,838,399 samples, 0.03%)</title><rect x="821.3" y="149" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="824.33" y="159.5" ></text>
</g>
<g >
<title>do_filp_open (7,319,380,620 samples, 11.41%)</title><rect x="788.4" y="245" width="134.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="791.38" y="255.5" >do_filp_open</text>
</g>
<g >
<title>path_get (18,628,672 samples, 0.03%)</title><rect x="869.3" y="197" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="872.27" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (12,052,215,439 samples, 18.79%)</title><rect x="738.0" y="389" width="221.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="740.96" y="399.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (123,817,906 samples, 0.19%)</title><rect x="466.0" y="181" width="2.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="469.00" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (211,730,807 samples, 0.33%)</title><rect x="72.6" y="405" width="3.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="75.58" y="415.5" ></text>
</g>
<g >
<title>kmalloc_trace (88,256,085 samples, 0.14%)</title><rect x="522.0" y="261" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="525.03" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (249,905,622 samples, 0.39%)</title><rect x="58.5" y="405" width="4.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="61.50" y="415.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (36,686,159 samples, 0.06%)</title><rect x="10.0" y="485" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>fs.Dir.walk (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="405" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1192.35" y="415.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (71,217,347 samples, 0.11%)</title><rect x="881.7" y="101" width="1.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="884.67" y="111.5" ></text>
</g>
<g >
<title>__kmem_cache_free (106,986,359 samples, 0.17%)</title><rect x="510.3" y="245" width="2.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="513.29" y="255.5" ></text>
</g>
<g >
<title>os.linux.openat (18,576,760 samples, 0.03%)</title><rect x="752.7" y="357" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="755.73" y="367.5" ></text>
</g>
<g >
<title>x64_sys_call (53,174,818 samples, 0.08%)</title><rect x="558.9" y="309" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="561.87" y="319.5" ></text>
</g>
<g >
<title>putname (73,361,508 samples, 0.11%)</title><rect x="951.4" y="245" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="954.42" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (18,326,756 samples, 0.03%)</title><rect x="954.7" y="261" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="957.72" y="271.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (17,345,456 samples, 0.03%)</title><rect x="814.1" y="165" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="817.06" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (138,416,281 samples, 0.22%)</title><rect x="87.1" y="405" width="2.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="90.13" y="415.5" ></text>
</g>
<g >
<title>touch_atime (218,712,378 samples, 0.34%)</title><rect x="539.0" y="277" width="4.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="541.97" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (18,786,534 samples, 0.03%)</title><rect x="723.9" y="293" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="726.95" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.close (5,216,943,847 samples, 8.13%)</title><rect x="567.4" y="405" width="96.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="570.42" y="415.5" >fs.Dir.close</text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (18,479,066 samples, 0.03%)</title><rect x="84.5" y="341" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="87.49" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_openat (9,724,543,807 samples, 15.16%)</title><rect x="773.9" y="277" width="178.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="776.91" y="287.5" >__x64_sys_openat</text>
</g>
<g >
<title>__fdget_pos (485,509,457 samples, 0.76%)</title><rect x="278.1" y="293" width="8.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="281.10" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (36,686,159 samples, 0.06%)</title><rect x="10.0" y="469" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>atime_needs_update (146,510,317 samples, 0.23%)</title><rect x="540.3" y="261" width="2.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="543.29" y="271.5" ></text>
</g>
<g >
<title>ext4_release_dir (932,900,481 samples, 1.45%)</title><rect x="612.7" y="277" width="17.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="615.74" y="287.5" ></text>
</g>
<g >
<title>sched_clock_cpu (18,786,534 samples, 0.03%)</title><rect x="723.9" y="229" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="726.95" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="341" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1192.35" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (34,553,119 samples, 0.05%)</title><rect x="959.6" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="962.62" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (493,836,630 samples, 0.77%)</title><rect x="26.7" y="421" width="9.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="29.74" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (158,014,502 samples, 0.25%)</title><rect x="73.2" y="389" width="2.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="76.24" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (17,021,160,354 samples, 26.53%)</title><rect x="675.7" y="405" width="313.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="678.72" y="415.5" >fs.Dir.openDir</text>
</g>
<g >
<title>[unknown] (605,235,998 samples, 0.94%)</title><rect x="10.0" y="517" width="11.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_free (34,756,838 samples, 0.05%)</title><rect x="160.9" y="293" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="163.91" y="303.5" ></text>
</g>
<g >
<title>rcu_core (34,465,263 samples, 0.05%)</title><rect x="434.7" y="69" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="437.69" y="79.5" ></text>
</g>
<g >
<title>posix.close (3,584,023,401 samples, 5.59%)</title><rect x="596.8" y="389" width="65.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="599.83" y="399.5" >posix.c..</text>
</g>
<g >
<title>xas_start (37,587,297 samples, 0.06%)</title><rect x="403.8" y="101" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="406.79" y="111.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (281,686,919 samples, 0.44%)</title><rect x="16.0" y="501" width="5.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.95" y="511.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (283,818,745 samples, 0.44%)</title><rect x="553.7" y="309" width="5.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="556.65" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (106,559,383 samples, 0.17%)</title><rect x="964.5" y="373" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="967.46" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (34,352,672 samples, 0.05%)</title><rect x="15.3" y="485" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.32" y="495.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,786,534 samples, 0.03%)</title><rect x="723.9" y="341" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="726.95" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (10,728,357,041 samples, 16.72%)</title><rect x="992.0" y="405" width="197.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="995.03" y="415.5" >mem.indexOfPos__anon_4210</text>
</g>
<g >
<title>__irq_exit_rcu (34,465,263 samples, 0.05%)</title><rect x="434.7" y="101" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="437.69" y="111.5" ></text>
</g>
<g >
<title>rb_insert_color (69,488,095 samples, 0.11%)</title><rect x="473.2" y="213" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="476.19" y="223.5" ></text>
</g>
<g >
<title>filldir64 (1,331,519,847 samples, 2.08%)</title><rect x="309.8" y="245" width="24.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="312.77" y="255.5" >f..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9010 (34,793,266 samples, 0.05%)</title><rect x="239.3" y="261" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="242.30" y="271.5" ></text>
</g>
<g >
<title>__kmalloc (1,143,325,485 samples, 1.78%)</title><rect x="447.9" y="213" width="21.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="450.91" y="223.5" ></text>
</g>
<g >
<title>__fsnotify_parent (35,745,467 samples, 0.06%)</title><rect x="850.1" y="197" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="853.09" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_8707 (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="325" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1192.35" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_state (17,885,151 samples, 0.03%)</title><rect x="823.0" y="133" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="825.95" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (214,007,569 samples, 0.33%)</title><rect x="554.6" y="293" width="3.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="557.61" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,244,583,367 samples, 5.06%)</title><rect x="601.1" y="325" width="59.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="604.09" y="335.5" >do_sys..</text>
</g>
<g >
<title>update_process_times (18,759,302 samples, 0.03%)</title><rect x="161.6" y="277" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="164.55" y="287.5" ></text>
</g>
<g >
<title>rcu_core (18,645,032 samples, 0.03%)</title><rect x="213.4" y="277" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="216.44" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,759,302 samples, 0.03%)</title><rect x="161.6" y="357" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="164.55" y="367.5" ></text>
</g>
<g >
<title>iterate_dir (14,003,071,274 samples, 21.83%)</title><rect x="291.5" y="293" width="257.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="294.53" y="303.5" >iterate_dir</text>
</g>
<g >
<title>mod_objcg_state (106,544,850 samples, 0.17%)</title><rect x="819.7" y="165" width="2.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="822.70" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,771,082 samples, 0.03%)</title><rect x="75.8" y="325" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="78.82" y="335.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (34,550,219 samples, 0.05%)</title><rect x="988.1" y="341" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="991.14" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (706,663,570 samples, 1.10%)</title><rect x="724.3" y="389" width="13.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="727.30" y="399.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (70,824,256 samples, 0.11%)</title><rect x="217.3" y="357" width="1.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="220.30" y="367.5" ></text>
</g>
<g >
<title>os.linux.openat (10,651,986,695 samples, 16.60%)</title><rect x="762.8" y="341" width="195.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="765.75" y="351.5" >os.linux.openat</text>
</g>
<g >
<title>lockref_get (205,333,987 samples, 0.32%)</title><rect x="865.5" y="197" width="3.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="868.49" y="207.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (34,491,713 samples, 0.05%)</title><rect x="565.5" y="389" width="0.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="568.47" y="399.5" ></text>
</g>
<g >
<title>__fdget_raw (18,589,775 samples, 0.03%)</title><rect x="914.5" y="197" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="917.47" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (907,281,479 samples, 1.41%)</title><rect x="806.6" y="197" width="16.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="809.59" y="207.5" ></text>
</g>
<g >
<title>__srcu_read_lock (158,668,049 samples, 0.25%)</title><rect x="647.0" y="229" width="3.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="650.03" y="239.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (155,753,938 samples, 0.24%)</title><rect x="871.9" y="133" width="2.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="874.85" y="143.5" ></text>
</g>
<g >
<title>mutex_unlock (215,068,973 samples, 0.34%)</title><rect x="549.1" y="293" width="3.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="552.07" y="303.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (89,388,738 samples, 0.14%)</title><rect x="513.3" y="229" width="1.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="516.26" y="239.5" ></text>
</g>
<g >
<title>dput (123,737,057 samples, 0.19%)</title><rect x="920.1" y="197" width="2.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="923.05" y="207.5" ></text>
</g>
<g >
<title>call_filldir (1,539,063,415 samples, 2.40%)</title><rect x="306.0" y="261" width="28.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="308.95" y="271.5" >c..</text>
</g>
<g >
<title>psi_task_change (18,786,534 samples, 0.03%)</title><rect x="723.9" y="261" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="726.95" y="271.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,051,625 samples, 0.03%)</title><rect x="952.8" y="277" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="955.77" y="287.5" ></text>
</g>
<g >
<title>posix.openatZ (34,350,984 samples, 0.05%)</title><rect x="959.0" y="373" width="0.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="961.99" y="383.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (55,056,323 samples, 0.09%)</title><rect x="885.2" y="149" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="888.24" y="159.5" ></text>
</g>
<g >
<title>mntput_no_expire (159,898,846 samples, 0.25%)</title><rect x="636.9" y="277" width="2.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="639.90" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,645,032 samples, 0.03%)</title><rect x="213.4" y="341" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="216.44" y="351.5" ></text>
</g>
<g >
<title>search_name_runner.main (63,552,864,058 samples, 99.06%)</title><rect x="21.1" y="453" width="1168.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="24.13" y="463.5" >search_name_runner.main</text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (3,497,278,804 samples, 5.45%)</title><rect x="597.5" y="357" width="64.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="600.46" y="367.5" >os.linu..</text>
</g>
<g >
<title>start.callMain (63,552,864,058 samples, 99.06%)</title><rect x="21.1" y="469" width="1168.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="24.13" y="479.5" >start.callMain</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (36,237,793 samples, 0.06%)</title><rect x="660.8" y="341" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="663.77" y="351.5" ></text>
</g>
<g >
<title>enqueue_task (18,786,534 samples, 0.03%)</title><rect x="723.9" y="277" width="0.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="726.95" y="287.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (229,663,890 samples, 0.36%)</title><rect x="420.3" y="165" width="4.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="423.33" y="175.5" ></text>
</g>
<g >
<title>kfree (17,819,477 samples, 0.03%)</title><rect x="514.9" y="245" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="517.90" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (53,516,140 samples, 0.08%)</title><rect x="160.9" y="373" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="163.91" y="383.5" ></text>
</g>
<g >
<title>debug.assert (53,110,602 samples, 0.08%)</title><rect x="70.0" y="357" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="73.01" y="367.5" ></text>
</g>
<g >
<title>make_vfsuid (52,500,001 samples, 0.08%)</title><rect x="893.0" y="197" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="895.98" y="207.5" ></text>
</g>
<g >
<title>terminate_walk (213,516,472 samples, 0.33%)</title><rect x="919.1" y="213" width="3.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="922.08" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (334,799,086 samples, 0.52%)</title><rect x="51.7" y="389" width="6.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="54.72" y="399.5" ></text>
</g>
<g >
<title>pick_file (53,844,156 samples, 0.08%)</title><rect x="645.0" y="277" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="648.02" y="287.5" ></text>
</g>
<g >
<title>fd_install (87,667,350 samples, 0.14%)</title><rect x="923.0" y="245" width="1.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="926.00" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (53,446,030 samples, 0.08%)</title><rect x="227.7" y="309" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="230.73" y="319.5" ></text>
</g>
<g >
<title>__getblk_gfp (3,153,799,122 samples, 4.92%)</title><rect x="359.8" y="181" width="58.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="362.84" y="191.5" >__getb..</text>
</g>
<g >
<title>debug.assert (34,550,219 samples, 0.05%)</title><rect x="988.1" y="325" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="991.14" y="335.5" ></text>
</g>
<g >
<title>lockref_put_return (18,840,579 samples, 0.03%)</title><rect x="296.1" y="245" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="299.07" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (90,895,883 samples, 0.14%)</title><rect x="650.0" y="229" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="652.95" y="239.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (173,602,063 samples, 0.27%)</title><rect x="232.3" y="277" width="3.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="235.26" y="287.5" ></text>
</g>
<g >
<title>may_open (182,137,888 samples, 0.28%)</title><rect x="907.9" y="213" width="3.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="910.86" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (17,771,082 samples, 0.03%)</title><rect x="75.8" y="245" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="78.82" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,257,978 samples, 0.03%)</title><rect x="830.9" y="181" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="833.91" y="191.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18,796,847 samples, 0.03%)</title><rect x="661.4" y="341" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="664.43" y="351.5" ></text>
</g>
<g >
<title>debug.assert (89,925,733 samples, 0.14%)</title><rect x="88.0" y="389" width="1.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="91.02" y="399.5" ></text>
</g>
<g >
<title>kfree (18,868,261 samples, 0.03%)</title><rect x="509.3" y="213" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="512.32" y="223.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (1,879,146,237 samples, 2.93%)</title><rect x="474.5" y="229" width="34.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="477.46" y="239.5" >ex..</text>
</g>
<g >
<title>valgrind.doClientRequest (87,630,085 samples, 0.14%)</title><rect x="229.1" y="293" width="1.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="232.07" y="303.5" ></text>
</g>
<g >
<title>debug.assert (16,001,156 samples, 0.02%)</title><rect x="57.0" y="357" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="59.95" y="367.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (17,588,259 samples, 0.03%)</title><rect x="1189.3" y="277" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1192.35" y="287.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (87,193,566 samples, 0.14%)</title><rect x="639.8" y="277" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="642.84" y="287.5" ></text>
</g>
<g >
<title>path_openat (7,035,057,759 samples, 10.97%)</title><rect x="793.6" y="229" width="129.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="796.61" y="239.5" >path_openat</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,598,226,626 samples, 24.31%)</title><rect x="273.0" y="341" width="286.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="275.97" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__kmem_cache_free (124,104,043 samples, 0.19%)</title><rect x="612.7" y="261" width="2.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="615.74" y="271.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (34,566,413 samples, 0.05%)</title><rect x="811.5" y="149" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="814.46" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,030,262,289 samples, 15.63%)</title><rect x="771.3" y="293" width="184.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="774.31" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>fsnotify_find_mark (249,563,932 samples, 0.39%)</title><rect x="647.0" y="261" width="4.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="650.03" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (34,814,167 samples, 0.05%)</title><rect x="919.4" y="197" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="922.41" y="207.5" ></text>
</g>
<g >
<title>security_file_alloc (282,041,545 samples, 0.44%)</title><rect x="801.4" y="181" width="5.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="804.41" y="191.5" ></text>
</g>
<g >
<title>debug.assert (17,838,449 samples, 0.03%)</title><rect x="76.1" y="389" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="79.14" y="399.5" ></text>
</g>
<g >
<title>security_inode_permission (18,815,180 samples, 0.03%)</title><rect x="893.9" y="197" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="896.94" y="207.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_7754 (34,793,266 samples, 0.05%)</title><rect x="239.3" y="309" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="242.30" y="319.5" ></text>
</g>
<g >
<title>hook_file_open (88,968,378 samples, 0.14%)</title><rect x="886.9" y="181" width="1.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="889.91" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (365,626,432 samples, 0.57%)</title><rect x="76.5" y="405" width="6.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="79.47" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacityPrecise (18,479,066 samples, 0.03%)</title><rect x="84.5" y="373" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="87.49" y="383.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (53,993,886 samples, 0.08%)</title><rect x="994.9" y="389" width="1.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="997.95" y="399.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (2,073,919,492 samples, 3.23%)</title><rect x="436.3" y="229" width="38.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="439.32" y="239.5" >ext..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,279,245,630 samples, 5.11%)</title><rect x="600.5" y="341" width="60.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="603.45" y="351.5" >entry_..</text>
</g>
<g >
<title>entry_SYSCALL_64 (218,283,704 samples, 0.34%)</title><rect x="757.2" y="309" width="4.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="760.19" y="319.5" ></text>
</g>
<g >
<title>array_list.addOrOom (125,058,462 samples, 0.19%)</title><rect x="84.8" y="389" width="2.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="87.83" y="399.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (108,256,861 samples, 0.17%)</title><rect x="955.8" y="309" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="958.79" y="319.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (34,653,948 samples, 0.05%)</title><rect x="213.8" y="373" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="216.78" y="383.5" ></text>
</g>
<g >
<title>search_name_run (64,158,100,056 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >search_name_run</text>
</g>
<g >
<title>kmem_cache_free (34,465,263 samples, 0.05%)</title><rect x="434.7" y="37" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="437.69" y="47.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3954 (104,474,580 samples, 0.16%)</title><rect x="237.4" y="325" width="1.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="240.38" y="335.5" ></text>
</g>
<g >
<title>call_timer_fn (18,347,216 samples, 0.03%)</title><rect x="512.9" y="149" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="515.92" y="159.5" ></text>
</g>
<g >
<title>mntput_no_expire (36,685,538 samples, 0.06%)</title><rect x="922.3" y="197" width="0.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="925.33" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (18,019,374 samples, 0.03%)</title><rect x="806.3" y="149" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="809.26" y="159.5" ></text>
</g>
<g >
<title>rcu_core (34,756,838 samples, 0.05%)</title><rect x="160.9" y="325" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="163.91" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (671,493,281 samples, 1.05%)</title><rect x="663.4" y="405" width="12.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="666.37" y="415.5" ></text>
</g>
<g >
<title>down_read_killable (212,076,660 samples, 0.33%)</title><rect x="296.4" y="277" width="3.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="299.41" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,645,032 samples, 0.03%)</title><rect x="213.4" y="309" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="216.44" y="319.5" ></text>
</g>
<g >
<title>file_ra_state_init (70,410,163 samples, 0.11%)</title><rect x="852.4" y="197" width="1.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="855.36" y="207.5" ></text>
</g>
<g >
<title>fsnotify (16,926,143 samples, 0.03%)</title><rect x="850.4" y="181" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="853.44" y="191.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (104,828,783 samples, 0.16%)</title><rect x="235.5" y="325" width="1.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="238.45" y="335.5" ></text>
</g>
<g >
<title>fsnotify (138,531,212 samples, 0.22%)</title><rect x="629.9" y="277" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="632.90" y="287.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8493 (35,684,208 samples, 0.06%)</title><rect x="238.3" y="277" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="241.30" y="287.5" ></text>
</g>
<g >
<title>sched_clock (18,786,534 samples, 0.03%)</title><rect x="723.9" y="213" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="726.95" y="223.5" ></text>
</g>
<g >
<title>[unknown] (672,678,930 samples, 1.05%)</title><rect x="870.6" y="149" width="12.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="873.61" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (34,419,905 samples, 0.05%)</title><rect x="814.4" y="165" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="817.37" y="175.5" ></text>
</g>
<g >
<title>mntget (18,628,672 samples, 0.03%)</title><rect x="869.3" y="181" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="872.27" y="191.5" ></text>
</g>
<g >
<title>errseq_sample (69,694,400 samples, 0.11%)</title><rect x="851.1" y="197" width="1.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="854.08" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (18,786,534 samples, 0.03%)</title><rect x="723.9" y="325" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="726.95" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (34,115,189 samples, 0.05%)</title><rect x="57.2" y="373" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="60.25" y="383.5" ></text>
</g>
<g >
<title>memchr (215,824,961 samples, 0.34%)</title><rect x="330.3" y="213" width="4.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="333.29" y="223.5" ></text>
</g>
<g >
<title>__fsnotify_parent (55,229,495 samples, 0.09%)</title><rect x="295.4" y="277" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="298.40" y="287.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (211,916,907 samples, 0.33%)</title><rect x="420.7" y="149" width="3.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="423.65" y="159.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7460 (69,696,480 samples, 0.11%)</title><rect x="237.7" y="293" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="240.67" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,771,082 samples, 0.03%)</title><rect x="75.8" y="277" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="78.82" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (113,653,238 samples, 0.18%)</title><rect x="784.0" y="229" width="2.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="787.00" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,347,216 samples, 0.03%)</title><rect x="512.9" y="229" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="515.92" y="239.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (16,484,443,473 samples, 25.69%)</title><rect x="261.9" y="373" width="303.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="264.94" y="383.5" >os.linux.getdents64</text>
</g>
<g >
<title>fsnotify_perm.part.0 (330,641,762 samples, 0.52%)</title><rect x="531.6" y="277" width="6.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="534.60" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (52,318,675 samples, 0.08%)</title><rect x="423.6" y="133" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="426.59" y="143.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (18,479,066 samples, 0.03%)</title><rect x="84.5" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="87.49" y="239.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (1,215,578,343 samples, 1.89%)</title><rect x="966.4" y="373" width="22.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="969.42" y="383.5" >m..</text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (2,744,635,126 samples, 4.28%)</title><rect x="1132.1" y="357" width="50.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1135.07" y="367.5" >mem.s..</text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (11,457,540,640 samples, 17.86%)</title><rect x="748.3" y="373" width="210.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="751.26" y="383.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>__find_get_block (3,094,865,737 samples, 4.82%)</title><rect x="360.9" y="165" width="56.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="363.93" y="175.5" >__find..</text>
</g>
<g >
<title>psi_group_change (18,786,534 samples, 0.03%)</title><rect x="723.9" y="245" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="726.95" y="255.5" ></text>
</g>
<g >
<title>do_sys_openat2 (9,634,585,095 samples, 15.02%)</title><rect x="775.6" y="261" width="177.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="778.57" y="271.5" >do_sys_openat2</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (213,880,626 samples, 0.33%)</title><rect x="83.2" y="405" width="3.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="86.20" y="415.5" ></text>
</g>
<g >
<title>start._start (63,552,864,058 samples, 99.06%)</title><rect x="21.1" y="517" width="1168.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="24.13" y="527.5" >start._start</text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (17,724,799 samples, 0.03%)</title><rect x="161.9" y="405" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="164.90" y="415.5" ></text>
</g>
<g >
<title>legitimize_links (35,969,053 samples, 0.06%)</title><rect x="831.2" y="181" width="0.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="834.25" y="191.5" ></text>
</g>
<g >
<title>debug.assert (86,592,888 samples, 0.13%)</title><rect x="226.1" y="325" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="229.14" y="335.5" ></text>
</g>
<g >
<title>handle_softirqs (34,465,263 samples, 0.05%)</title><rect x="434.7" y="85" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="437.69" y="95.5" ></text>
</g>
<g >
<title>__run_timers (18,347,216 samples, 0.03%)</title><rect x="512.9" y="165" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="515.92" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,645,032 samples, 0.03%)</title><rect x="213.4" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="216.44" y="335.5" ></text>
</g>
<g >
<title>__legitimize_mnt (274,563,695 samples, 0.43%)</title><rect x="824.6" y="165" width="5.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="827.57" y="175.5" ></text>
</g>
<g >
<title>ext4_getblk (4,247,630,539 samples, 6.62%)</title><rect x="358.2" y="197" width="78.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="361.20" y="207.5" >ext4_getblk</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (359,388,243 samples, 0.56%)</title><rect x="64.7" y="389" width="6.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="67.72" y="399.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,550,695,950 samples, 2.42%)</title><rect x="960.3" y="389" width="28.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="963.26" y="399.5" >po..</text>
</g>
<g >
<title>___slab_alloc (123,066,595 samples, 0.19%)</title><rect x="809.8" y="181" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="812.83" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,484,335,679 samples, 3.87%)</title><rect x="678.6" y="389" width="45.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="681.60" y="399.5" >comp..</text>
</g>
<g >
<title>migrate_enable (33,271,843 samples, 0.05%)</title><rect x="884.3" y="133" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="887.30" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (159,884,892 samples, 0.25%)</title><rect x="21.1" y="437" width="3.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="24.13" y="447.5" ></text>
</g>
<g >
<title>debug.assert (34,793,266 samples, 0.05%)</title><rect x="239.3" y="245" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="242.30" y="255.5" ></text>
</g>
<g >
<title>__put_user_8 (244,388,845 samples, 0.38%)</title><rect x="287.0" y="293" width="4.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="290.03" y="303.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,347,216 samples, 0.03%)</title><rect x="512.9" y="197" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="515.92" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (51,811,916,020 samples, 80.76%)</title><rect x="36.2" y="421" width="952.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="39.16" y="431.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>fsnotify (281,260,968 samples, 0.44%)</title><rect x="532.5" y="261" width="5.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="535.51" y="271.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (35,607,319 samples, 0.06%)</title><rect x="605.0" y="277" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="608.02" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (3,926,701,519 samples, 6.12%)</title><rect x="89.7" y="405" width="72.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="92.68" y="415.5" >compiler..</text>
</g>
<g >
<title>_raw_spin_lock (18,759,302 samples, 0.03%)</title><rect x="161.6" y="229" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="164.55" y="239.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (9,193,003,431 samples, 14.33%)</title><rect x="1015.4" y="373" width="169.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1018.37" y="383.5" >mem.eql__anon_5137</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (404,374,573 samples, 0.63%)</title><rect x="51.1" y="405" width="7.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="54.06" y="415.5" ></text>
</g>
<g >
<title>handle_softirqs (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="293" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1134.73" y="303.5" ></text>
</g>
<g >
<title>security_inode_permission (70,054,833 samples, 0.11%)</title><rect x="909.9" y="197" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="912.93" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (18,759,302 samples, 0.03%)</title><rect x="161.6" y="261" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="164.55" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (48,307,447 samples, 0.08%)</title><rect x="957.8" y="309" width="0.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="960.78" y="319.5" ></text>
</g>
<g >
<title>__memset (15,926,309 samples, 0.02%)</title><rect x="523.4" y="229" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="526.36" y="239.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (17,853,939 samples, 0.03%)</title><rect x="258.7" y="341" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="261.72" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,759,302 samples, 0.03%)</title><rect x="161.6" y="341" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="164.55" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,416,737 samples, 0.03%)</title><rect x="865.2" y="149" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="868.17" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (31,656,491 samples, 0.05%)</title><rect x="819.1" y="165" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="822.12" y="175.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (1,178,125,435 samples, 1.84%)</title><rect x="967.1" y="357" width="21.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="970.11" y="367.5" >m..</text>
</g>
<g >
<title>__rcu_read_lock (17,373,761 samples, 0.03%)</title><rect x="611.8" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="614.80" y="271.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (667,996,218 samples, 1.04%)</title><rect x="496.7" y="197" width="12.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="499.74" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (35,564,822 samples, 0.06%)</title><rect x="886.3" y="149" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="889.26" y="159.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (52,567,420 samples, 0.08%)</title><rect x="661.8" y="373" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="664.78" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,416,737 samples, 0.03%)</title><rect x="865.2" y="133" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="868.17" y="143.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8493 (16,038,180 samples, 0.02%)</title><rect x="237.4" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="240.38" y="303.5" ></text>
</g>
<g >
<title>file_free_rcu (17,939,548 samples, 0.03%)</title><rect x="850.8" y="101" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="853.75" y="111.5" ></text>
</g>
<g >
<title>inode_permission (94,415,584 samples, 0.15%)</title><rect x="908.2" y="197" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="911.19" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (34,756,838 samples, 0.05%)</title><rect x="160.9" y="341" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="163.91" y="351.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (720,831,788 samples, 1.12%)</title><rect x="894.6" y="197" width="13.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="897.61" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,771,082 samples, 0.03%)</title><rect x="75.8" y="213" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="78.82" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (36,509,928 samples, 0.06%)</title><rect x="639.2" y="261" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="642.17" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1134.73" y="335.5" ></text>
</g>
<g >
<title>native_sched_clock (18,786,534 samples, 0.03%)</title><rect x="723.9" y="197" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="726.95" y="207.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (9,396,138,288 samples, 14.65%)</title><rect x="336.8" y="245" width="172.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="339.85" y="255.5" >htree_dirblock_to_tree</text>
</g>
<g >
<title>_raw_read_lock (129,356,576 samples, 0.20%)</title><rect x="430.7" y="149" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="433.66" y="159.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (104,741,105 samples, 0.16%)</title><rect x="810.2" y="165" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="813.17" y="175.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_7757 (18,479,066 samples, 0.03%)</title><rect x="84.5" y="325" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="87.49" y="335.5" ></text>
</g>
<g >
<title>fsnotify (184,978,812 samples, 0.29%)</title><rect x="853.7" y="197" width="3.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="856.66" y="207.5" ></text>
</g>
<g >
<title>os.linux.mmap (18,479,066 samples, 0.03%)</title><rect x="84.5" y="245" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="87.49" y="255.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (286,862,920 samples, 0.45%)</title><rect x="10.7" y="501" width="5.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.67" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (34,267,210 samples, 0.05%)</title><rect x="559.9" y="341" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="562.85" y="351.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (158,253,154 samples, 0.25%)</title><rect x="812.1" y="181" width="2.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="815.10" y="191.5" ></text>
</g>
<g >
<title>dput (37,693,586 samples, 0.06%)</title><rect x="295.7" y="261" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="298.72" y="271.5" ></text>
</g>
<g >
<title>inode_to_bdi (52,487,545 samples, 0.08%)</title><rect x="852.7" y="181" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="855.69" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (140,256,214 samples, 0.22%)</title><rect x="185.4" y="373" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="188.43" y="383.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (2,163,733,662 samples, 3.37%)</title><rect x="218.9" y="341" width="39.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="221.92" y="351.5" >mem..</text>
</g>
<g >
<title>fsnotify_grab_connector (249,563,932 samples, 0.39%)</title><rect x="647.0" y="245" width="4.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="650.03" y="255.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (18,948,788 samples, 0.03%)</title><rect x="565.1" y="373" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="568.12" y="383.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (2,199,237,328 samples, 3.43%)</title><rect x="218.6" y="357" width="40.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="221.60" y="367.5" >mem..</text>
</g>
<g >
<title>vm_mmap_pgoff (18,479,066 samples, 0.03%)</title><rect x="84.5" y="181" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="87.49" y="191.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_8562 (18,479,066 samples, 0.03%)</title><rect x="84.5" y="357" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="87.49" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,771,082 samples, 0.03%)</title><rect x="75.8" y="373" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="78.82" y="383.5" ></text>
</g>
<g >
<title>kfree (87,050,742 samples, 0.14%)</title><rect x="625.7" y="245" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="628.70" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,759,302 samples, 0.03%)</title><rect x="161.6" y="293" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="164.55" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (549,739,787 samples, 0.86%)</title><rect x="664.0" y="389" width="10.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="667.00" y="399.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_8556 (18,479,066 samples, 0.03%)</title><rect x="84.5" y="309" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="87.49" y="319.5" ></text>
</g>
<g >
<title>mod_memcg_state (17,885,151 samples, 0.03%)</title><rect x="823.0" y="149" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="825.95" y="159.5" ></text>
</g>
<g >
<title>try_to_unlazy (435,024,647 samples, 0.68%)</title><rect x="823.9" y="197" width="8.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="826.91" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (39,531,645 samples, 0.06%)</title><rect x="955.1" y="277" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="958.06" y="287.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (10,578,313,178 samples, 16.49%)</title><rect x="764.1" y="325" width="194.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="767.11" y="335.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>__irq_exit_rcu (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="309" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1134.73" y="319.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (9,536,982,187 samples, 14.86%)</title><rect x="334.3" y="261" width="175.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="337.26" y="271.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>htab_map_hash (122,326,271 samples, 0.19%)</title><rect x="872.5" y="117" width="2.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="875.47" y="127.5" ></text>
</g>
<g >
<title>is_dx_dir (194,830,728 samples, 0.30%)</title><rect x="518.4" y="261" width="3.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="521.44" y="271.5" ></text>
</g>
<g >
<title>mem.eqlBytes (53,539,470 samples, 0.08%)</title><rect x="1014.4" y="373" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1017.38" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (34,872,148 samples, 0.05%)</title><rect x="644.0" y="277" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="647.04" y="287.5" ></text>
</g>
<g >
<title>make_vfsuid (18,660,058 samples, 0.03%)</title><rect x="542.6" y="245" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="545.65" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (53,040,426 samples, 0.08%)</title><rect x="987.2" y="293" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="990.17" y="303.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (17,751,696 samples, 0.03%)</title><rect x="538.6" y="261" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="541.64" y="271.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (150,739,929 samples, 0.23%)</title><rect x="874.7" y="133" width="2.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="877.72" y="143.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (32,028,735 samples, 0.05%)</title><rect x="71.3" y="389" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.33" y="399.5" ></text>
</g>
<g >
<title>mem.eqlBytes (274,171,716 samples, 0.43%)</title><rect x="196.3" y="357" width="5.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="199.34" y="367.5" ></text>
</g>
<g >
<title>rb_next (125,946,181 samples, 0.20%)</title><rect x="524.7" y="261" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="527.67" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (18,323,926 samples, 0.03%)</title><rect x="945.1" y="197" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="948.11" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="341" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1134.73" y="351.5" ></text>
</g>
<g >
<title>mutex_lock (174,312,183 samples, 0.27%)</title><rect x="283.8" y="277" width="3.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="286.83" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,939,548 samples, 0.03%)</title><rect x="850.8" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="853.75" y="191.5" ></text>
</g>
<g >
<title>up_read (330,858,937 samples, 0.52%)</title><rect x="543.0" y="277" width="6.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="545.99" y="287.5" ></text>
</g>
<g >
<title>migrate_disable (54,187,907 samples, 0.08%)</title><rect x="883.3" y="133" width="1.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="886.31" y="143.5" ></text>
</g>
<g >
<title>__memset (34,474,190 samples, 0.05%)</title><rect x="805.6" y="149" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="808.63" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="357" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.35" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,771,082 samples, 0.03%)</title><rect x="75.8" y="293" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="78.82" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,771,082 samples, 0.03%)</title><rect x="75.8" y="341" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="78.82" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,786,534 samples, 0.03%)</title><rect x="723.9" y="357" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="726.95" y="367.5" ></text>
</g>
<g >
<title>rb_next_postorder (36,633,654 samples, 0.06%)</title><rect x="627.6" y="245" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="630.62" y="255.5" ></text>
</g>
<g >
<title>xas_descend (291,107,412 samples, 0.45%)</title><rect x="398.4" y="101" width="5.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="401.43" y="111.5" ></text>
</g>
<g >
<title>__queue_work.part.0 (18,347,216 samples, 0.03%)</title><rect x="512.9" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="515.92" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,416,737 samples, 0.03%)</title><rect x="865.2" y="117" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="868.17" y="127.5" ></text>
</g>
<g >
<title>rcu_do_batch (34,465,263 samples, 0.05%)</title><rect x="434.7" y="53" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="437.69" y="63.5" ></text>
</g>
<g >
<title>housekeeping_test_cpu (18,881,893 samples, 0.03%)</title><rect x="417.5" y="149" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="420.50" y="159.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (53,962,744 samples, 0.08%)</title><rect x="435.3" y="149" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="438.33" y="159.5" ></text>
</g>
<g >
<title>rcu_do_batch (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="261" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1134.73" y="271.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,475,217,623 samples, 2.30%)</title><rect x="379.0" y="149" width="27.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="382.00" y="159.5" >_..</text>
</g>
<g >
<title>__fput (1,892,333,434 samples, 2.95%)</title><rect x="607.0" y="293" width="34.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="609.99" y="303.5" >__..</text>
</g>
<g >
<title>ext4_es_lookup_extent (639,933,228 samples, 1.00%)</title><rect x="424.6" y="165" width="11.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="427.55" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (17,682,806 samples, 0.03%)</title><rect x="737.3" y="389" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="740.29" y="399.5" ></text>
</g>
<g >
<title>__memcpy (231,054,257 samples, 0.36%)</title><rect x="468.9" y="213" width="4.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="471.94" y="223.5" ></text>
</g>
<g >
<title>inode_query_iversion (103,752,961 samples, 0.16%)</title><rect x="516.5" y="261" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="519.54" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,939,548 samples, 0.03%)</title><rect x="850.8" y="197" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="853.75" y="207.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (18,759,302 samples, 0.03%)</title><rect x="161.6" y="245" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="164.55" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (404,803,811 samples, 0.63%)</title><rect x="930.7" y="229" width="7.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="933.75" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,732,475 samples, 0.03%)</title><rect x="922.7" y="181" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="925.66" y="191.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (458,371,908 samples, 0.71%)</title><rect x="857.1" y="197" width="8.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="860.06" y="207.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (17,835,341 samples, 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.67" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (86,208,439 samples, 0.13%)</title><rect x="945.5" y="197" width="1.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="948.45" y="207.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (63,357,555,566 samples, 98.75%)</title><rect x="24.1" y="437" width="1165.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="27.07" y="447.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="373" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1192.35" y="383.5" ></text>
</g>
<g >
<title>complete_walk (435,024,647 samples, 0.68%)</title><rect x="823.9" y="213" width="8.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="826.91" y="223.5" ></text>
</g>
<g >
<title>fsnotify (250,780,292 samples, 0.39%)</title><rect x="527.0" y="277" width="4.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="529.99" y="287.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (21,977,792,561 samples, 34.26%)</title><rect x="162.5" y="405" width="404.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="165.55" y="415.5" >fs.Dir.Iterator__struct_3782.next</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,280,304,623 samples, 16.02%)</title><rect x="766.7" y="309" width="189.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="769.71" y="319.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>filp_flush (450,699,385 samples, 0.70%)</title><rect x="646.0" y="293" width="8.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="649.01" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (70,027,219 samples, 0.11%)</title><rect x="522.4" y="245" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="525.36" y="255.5" ></text>
</g>
<g >
<title>__slab_free (143,463,175 samples, 0.22%)</title><rect x="512.3" y="245" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="515.26" y="255.5" ></text>
</g>
<g >
<title>debug.assert (104,828,783 samples, 0.16%)</title><rect x="235.5" y="309" width="1.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="238.45" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (226,873,145 samples, 0.35%)</title><rect x="802.4" y="165" width="4.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="805.42" y="175.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (17,634,677 samples, 0.03%)</title><rect x="958.7" y="341" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="961.67" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (34,756,838 samples, 0.05%)</title><rect x="160.9" y="357" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="163.91" y="367.5" ></text>
</g>
<g >
<title>__legitimize_path (362,815,682 samples, 0.57%)</title><rect x="824.2" y="181" width="6.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="827.24" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,759,302 samples, 0.03%)</title><rect x="161.6" y="309" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="164.55" y="319.5" ></text>
</g>
<g >
<title>init_file (440,415,362 samples, 0.69%)</title><rect x="798.5" y="197" width="8.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="801.49" y="207.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (63,552,864,058 samples, 99.06%)</title><rect x="21.1" y="485" width="1168.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="24.13" y="495.5" >start.callMainWithArgs</text>
</g>
<g >
<title>free_rb_tree_fname (721,761,309 samples, 1.12%)</title><rect x="615.0" y="261" width="13.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="618.02" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (142,650,110 samples, 0.22%)</title><rect x="60.5" y="389" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="63.47" y="399.5" ></text>
</g>
<g >
<title>posix.openatZ (11,196,104,800 samples, 17.45%)</title><rect x="753.1" y="357" width="205.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="756.07" y="367.5" >posix.openatZ</text>
</g>
<g >
<title>__kmem_cache_alloc_node (931,739,638 samples, 1.45%)</title><rect x="451.1" y="197" width="17.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="454.15" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,771,082 samples, 0.03%)</title><rect x="75.8" y="357" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="78.82" y="367.5" ></text>
</g>
<g >
<title>___slab_alloc (122,321,721 samples, 0.19%)</title><rect x="463.1" y="181" width="2.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="466.12" y="191.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (17,838,399 samples, 0.03%)</title><rect x="821.3" y="117" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="824.33" y="127.5" ></text>
</g>
<g >
<title>[unknown] (302,841,484 samples, 0.47%)</title><rect x="757.2" y="341" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="760.19" y="351.5" ></text>
</g>
<g >
<title>debug.assert (36,414,184 samples, 0.06%)</title><rect x="747.6" y="373" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="750.59" y="383.5" ></text>
</g>
<g >
<title>put_cpu_partial (17,721,507 samples, 0.03%)</title><rect x="515.2" y="245" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="518.23" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (515,536,912 samples, 0.80%)</title><rect x="63.1" y="405" width="9.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="66.10" y="415.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (361,637,480 samples, 0.56%)</title><rect x="815.0" y="181" width="6.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="818.01" y="191.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (1,064,429,091 samples, 1.66%)</title><rect x="928.5" y="245" width="19.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="931.47" y="255.5" ></text>
</g>
<g >
<title>check_stack_object (35,588,707 samples, 0.06%)</title><rect x="947.0" y="197" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="950.04" y="207.5" ></text>
</g>
<g >
<title>rcu_core (17,939,548 samples, 0.03%)</title><rect x="850.8" y="133" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="853.75" y="143.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (16,395,157,881 samples, 25.55%)</title><rect x="263.6" y="357" width="301.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="266.58" y="367.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (35,935,194 samples, 0.06%)</title><rect x="71.9" y="389" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="74.92" y="399.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,939,548 samples, 0.03%)</title><rect x="850.8" y="117" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="853.75" y="127.5" ></text>
</g>
<g >
<title>[unknown] (36,686,159 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>vma_expand (18,479,066 samples, 0.03%)</title><rect x="84.5" y="133" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="87.49" y="143.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (53,040,426 samples, 0.08%)</title><rect x="987.2" y="325" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="990.17" y="335.5" ></text>
</g>
<g >
<title>rb_first_postorder (17,821,396 samples, 0.03%)</title><rect x="627.3" y="245" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="630.30" y="255.5" ></text>
</g>
<g >
<title>posix.mmap (18,479,066 samples, 0.03%)</title><rect x="84.5" y="261" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="87.49" y="271.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1,004,265,498 samples, 1.57%)</title><rect x="417.8" y="181" width="18.5" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="420.85" y="191.5" ></text>
</g>
<g >
<title>mem.eqlBytes (5,669,130,484 samples, 8.84%)</title><rect x="1027.8" y="357" width="104.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1030.80" y="367.5" >mem.eqlBytes</text>
</g>
<g >
<title>try_to_wake_up (18,786,534 samples, 0.03%)</title><rect x="723.9" y="309" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="726.95" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_free (183,367,673 samples, 0.29%)</title><rect x="948.0" y="245" width="3.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="951.04" y="255.5" ></text>
</g>
<g >
<title>do_mmap (18,479,066 samples, 0.03%)</title><rect x="84.5" y="165" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="87.49" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,639,162 samples, 0.03%)</title><rect x="654.3" y="309" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="657.30" y="319.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (85,105,579 samples, 0.13%)</title><rect x="214.4" y="373" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="217.42" y="383.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (18,067,129 samples, 0.03%)</title><rect x="606.7" y="277" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="609.66" y="287.5" ></text>
</g>
<g >
<title>alloc_fd (378,249,794 samples, 0.59%)</title><rect x="779.8" y="245" width="6.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="782.77" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (18,661,694 samples, 0.03%)</title><rect x="71.0" y="373" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="73.98" y="383.5" ></text>
</g>
<g >
<title>__call_rcu_common (284,396,783 samples, 0.44%)</title><rect x="601.8" y="293" width="5.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="604.76" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (16,677,724 samples, 0.03%)</title><rect x="988.8" y="405" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="991.78" y="415.5" ></text>
</g>
<g >
<title>lockref_put_return (34,035,804 samples, 0.05%)</title><rect x="612.1" y="261" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="615.11" y="271.5" ></text>
</g>
<g >
<title>handle_softirqs (18,347,216 samples, 0.03%)</title><rect x="512.9" y="181" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="515.92" y="191.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (71,996,400 samples, 0.11%)</title><rect x="883.0" y="149" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="885.98" y="159.5" ></text>
</g>
<g >
<title>ext4_readdir (12,324,479,777 samples, 19.21%)</title><rect x="300.3" y="277" width="226.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="303.31" y="287.5" >ext4_readdir</text>
</g>
<g >
<title>handle_softirqs (18,645,032 samples, 0.03%)</title><rect x="213.4" y="293" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="216.44" y="303.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (18,479,066 samples, 0.03%)</title><rect x="84.5" y="277" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="87.49" y="287.5" ></text>
</g>
<g >
<title>all (64,158,100,056 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (122,021,340 samples, 0.19%)</title><rect x="81.0" y="389" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="83.95" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (88,419,090 samples, 0.14%)</title><rect x="953.1" y="261" width="1.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="956.10" y="271.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="421" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.35" y="431.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (33,271,843 samples, 0.05%)</title><rect x="884.3" y="149" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="887.30" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_free (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="245" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1134.73" y="255.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (122,577,152 samples, 0.19%)</title><rect x="924.6" y="245" width="2.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="927.62" y="255.5" ></text>
</g>
<g >
<title>generic_permission (59,312,815 samples, 0.09%)</title><rect x="908.8" y="181" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="911.84" y="191.5" ></text>
</g>
<g >
<title>inode_permission (51,803,721 samples, 0.08%)</title><rect x="892.0" y="197" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="895.02" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (70,014,435 samples, 0.11%)</title><rect x="537.7" y="277" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="540.68" y="287.5" ></text>
</g>
<g >
<title>close_fd_get_file (107,435,446 samples, 0.17%)</title><rect x="644.0" y="293" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="647.04" y="303.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (17,649,727 samples, 0.03%)</title><rect x="218.6" y="341" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="221.60" y="351.5" ></text>
</g>
<g >
<title>_raw_read_unlock (124,323,303 samples, 0.19%)</title><rect x="433.0" y="149" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="436.04" y="159.5" ></text>
</g>
<g >
<title>lookup_fast (738,261,194 samples, 1.15%)</title><rect x="894.3" y="213" width="13.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="897.29" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (180,078,466 samples, 0.28%)</title><rect x="269.7" y="341" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="272.66" y="351.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (1,020,967,289 samples, 1.59%)</title><rect x="239.9" y="325" width="18.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="242.94" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (53,516,140 samples, 0.08%)</title><rect x="160.9" y="389" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="163.91" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (35,800,686 samples, 0.06%)</title><rect x="566.8" y="405" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="569.77" y="415.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (17,835,341 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.67" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,479,066 samples, 0.03%)</title><rect x="84.5" y="197" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="87.49" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (51,798,169 samples, 0.08%)</title><rect x="674.8" y="373" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="677.77" y="383.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (373,633,037 samples, 0.58%)</title><rect x="509.7" y="261" width="6.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="512.66" y="271.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (70,084,316 samples, 0.11%)</title><rect x="782.7" y="229" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="785.71" y="239.5" ></text>
</g>
<g >
<title>debug.assert (17,746,751 samples, 0.03%)</title><rect x="162.2" y="405" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="165.22" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (34,287,026 samples, 0.05%)</title><rect x="786.1" y="229" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="789.09" y="239.5" ></text>
</g>
<g >
<title>__brelse (124,731,088 samples, 0.19%)</title><rect x="343.4" y="229" width="2.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="346.42" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (252,510,248 samples, 0.39%)</title><rect x="10.7" y="485" width="4.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.67" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (108,580,684 samples, 0.17%)</title><rect x="563.1" y="341" width="2.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="566.12" y="351.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (35,963,471 samples, 0.06%)</title><rect x="566.1" y="389" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="569.10" y="399.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (17,828,259 samples, 0.03%)</title><rect x="884.9" y="149" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="887.92" y="159.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (17,838,399 samples, 0.03%)</title><rect x="821.3" y="133" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="824.33" y="143.5" ></text>
</g>
<g >
<title>dnotify_flush (287,047,259 samples, 0.45%)</title><rect x="646.3" y="277" width="5.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="649.34" y="287.5" ></text>
</g>
<g >
<title>ttwu_do_activate (18,347,216 samples, 0.03%)</title><rect x="512.9" y="85" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="515.92" y="95.5" ></text>
</g>
<g >
<title>filemap_get_entry (1,297,411,308 samples, 2.02%)</title><rect x="380.6" y="133" width="23.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="383.61" y="143.5" >f..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (195,954,376 samples, 0.31%)</title><rect x="67.4" y="373" width="3.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="70.38" y="383.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (298,512,757 samples, 0.47%)</title><rect x="877.5" y="133" width="5.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="880.49" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (15,034,222,353 samples, 23.43%)</title><rect x="276.5" y="309" width="276.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="279.52" y="319.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>verify_dirent_name (233,816,243 samples, 0.36%)</title><rect x="330.0" y="229" width="4.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="332.96" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,828,259 samples, 0.03%)</title><rect x="884.9" y="133" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="887.92" y="143.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (886,396,577 samples, 1.38%)</title><rect x="870.6" y="181" width="16.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="873.61" y="191.5" ></text>
</g>
<g >
<title>debug.inValgrind (419,926,496 samples, 0.65%)</title><rect x="227.7" y="325" width="7.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="230.73" y="335.5" ></text>
</g>
<g >
<title>__memset (108,253,049 samples, 0.17%)</title><rect x="935.9" y="213" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="938.86" y="223.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="309" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1192.35" y="319.5" ></text>
</g>
<g >
<title>kfree (87,035,129 samples, 0.14%)</title><rect x="628.3" y="261" width="1.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="631.30" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17,416,737 samples, 0.03%)</title><rect x="865.2" y="101" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="868.17" y="111.5" ></text>
</g>
<g >
<title>rb_next_postorder (53,332,681 samples, 0.08%)</title><rect x="515.6" y="245" width="0.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="518.55" y="255.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (4,353,646,707 samples, 6.79%)</title><rect x="356.2" y="229" width="80.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="359.25" y="239.5" >__ext4_re..</text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (74,167,149 samples, 0.12%)</title><rect x="989.1" y="421" width="1.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="992.09" y="431.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (1,366,929,925 samples, 2.13%)</title><rect x="188.6" y="373" width="25.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="191.64" y="383.5" >m..</text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7942 (17,835,341 samples, 0.03%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1192.67" y="287.5" ></text>
</g>
<g >
<title>__slab_free (18,795,582 samples, 0.03%)</title><rect x="625.0" y="245" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="628.01" y="255.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (572,625,213 samples, 0.89%)</title><rect x="345.7" y="229" width="10.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="348.72" y="239.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (18,479,066 samples, 0.03%)</title><rect x="84.5" y="293" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="87.49" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (17,939,548 samples, 0.03%)</title><rect x="850.8" y="149" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="853.75" y="159.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (87,634,512 samples, 0.14%)</title><rect x="674.1" y="389" width="1.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="677.11" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (51,579,281 samples, 0.08%)</title><rect x="20.2" y="485" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="23.18" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (17,588,259 samples, 0.03%)</title><rect x="1189.3" y="261" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1192.35" y="271.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (227,691,657 samples, 0.35%)</title><rect x="878.8" y="117" width="4.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="881.79" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (18,719,142 samples, 0.03%)</title><rect x="644.7" y="277" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="647.68" y="287.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,771,082 samples, 0.03%)</title><rect x="75.8" y="229" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="78.82" y="239.5" ></text>
</g>
<g >
<title>ext4_bread (4,283,487,500 samples, 6.68%)</title><rect x="357.5" y="213" width="78.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="360.54" y="223.5" >ext4_bread</text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_8703 (34,793,266 samples, 0.05%)</title><rect x="239.3" y="277" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="242.30" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,759,302 samples, 0.03%)</title><rect x="161.6" y="325" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="164.55" y="335.5" ></text>
</g>
<g >
<title>__fget_light (106,124,572 samples, 0.17%)</title><rect x="914.8" y="197" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="917.81" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (34,465,263 samples, 0.05%)</title><rect x="434.7" y="117" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="437.69" y="127.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (266,629,824 samples, 0.42%)</title><rect x="1184.4" y="373" width="4.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1187.44" y="383.5" ></text>
</g>
<g >
<title>strncpy_from_user (535,627,510 samples, 0.83%)</title><rect x="938.2" y="229" width="9.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="941.19" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (106,745,846 samples, 0.17%)</title><rect x="953.1" y="277" width="2.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="956.10" y="287.5" ></text>
</g>
<g >
<title>xas_load (664,318,172 samples, 1.04%)</title><rect x="392.3" y="117" width="12.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="395.26" y="127.5" ></text>
</g>
<g >
<title>__rcu_read_lock (35,711,478 samples, 0.06%)</title><rect x="818.5" y="165" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="821.46" y="175.5" ></text>
</g>
<g >
<title>[[x_tables]] (886,396,577 samples, 1.38%)</title><rect x="870.6" y="165" width="16.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="873.61" y="175.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (19,187,587 samples, 0.03%)</title><rect x="947.7" y="197" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="950.69" y="207.5" ></text>
</g>
<g >
<title>generic_permission (16,276,931 samples, 0.03%)</title><rect x="892.7" y="181" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="895.68" y="191.5" ></text>
</g>
<g >
<title>__check_object_size (336,696,442 samples, 0.52%)</title><rect x="941.9" y="213" width="6.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="944.85" y="223.5" ></text>
</g>
<g >
<title>mmap_region (18,479,066 samples, 0.03%)</title><rect x="84.5" y="149" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="87.49" y="159.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (103,024,993 samples, 0.16%)</title><rect x="1182.5" y="357" width="1.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1185.55" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_close (2,874,840,895 samples, 4.48%)</title><rect x="601.4" y="309" width="52.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="604.43" y="319.5" >__x64..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (34,465,263 samples, 0.05%)</title><rect x="434.7" y="133" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="437.69" y="143.5" ></text>
</g>
<g >
<title>debug.assert (18,516,616 samples, 0.03%)</title><rect x="737.6" y="389" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="740.62" y="399.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (17,865,201 samples, 0.03%)</title><rect x="910.9" y="181" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="913.89" y="191.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (10,515,910,091 samples, 16.39%)</title><rect x="995.9" y="389" width="193.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="998.94" y="399.5" >mem.indexOfPosLinear__ano..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (177,607,043 samples, 0.28%)</title><rect x="54.0" y="373" width="3.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="56.98" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (17,942,426 samples, 0.03%)</title><rect x="558.5" y="293" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="561.54" y="303.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (157,213,574 samples, 0.25%)</title><rect x="259.0" y="373" width="2.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="262.05" y="383.5" ></text>
</g>
<g >
<title>update_process_times (17,771,082 samples, 0.03%)</title><rect x="75.8" y="261" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="78.82" y="271.5" ></text>
</g>
<g >
<title>rcu_core (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="277" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1134.73" y="287.5" ></text>
</g>
<g >
<title>path_init (301,857,538 samples, 0.47%)</title><rect x="911.2" y="213" width="5.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="914.21" y="223.5" ></text>
</g>
<g >
<title>lockref_put_return (105,100,601 samples, 0.16%)</title><rect x="920.4" y="181" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="923.40" y="191.5" ></text>
</g>
<g >
<title>folio_mark_accessed (89,957,425 samples, 0.14%)</title><rect x="404.5" y="133" width="1.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="407.48" y="143.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (1,574,623,962 samples, 2.45%)</title><rect x="480.1" y="213" width="28.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="483.06" y="223.5" >__..</text>
</g>
<g >
<title>locks_remove_file (73,312,713 samples, 0.11%)</title><rect x="635.3" y="277" width="1.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="638.26" y="287.5" ></text>
</g>
<g >
<title>getname (86,784,202 samples, 0.14%)</title><rect x="926.9" y="245" width="1.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="929.87" y="255.5" ></text>
</g>
<g >
<title>__fsnotify_parent (18,761,306 samples, 0.03%)</title><rect x="609.5" y="277" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="612.48" y="287.5" ></text>
</g>
<g >
<title>search_name.searchName (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="437" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1192.35" y="447.5" ></text>
</g>
<g >
<title>__unfreeze_partials (18,414,182 samples, 0.03%)</title><rect x="625.4" y="245" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="628.36" y="255.5" ></text>
</g>
<g >
<title>__fput_sync (121,967,393 samples, 0.19%)</title><rect x="641.8" y="293" width="2.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="644.80" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (21,428,480,955 samples, 33.40%)</title><rect x="171.4" y="389" width="394.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="174.36" y="399.5" >fs.Dir.Iterator__struct_3782.nextLinux</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (476,408,692 samples, 0.74%)</title><rect x="408.7" y="133" width="8.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="411.74" y="143.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9015 (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.35" y="303.5" ></text>
</g>
<g >
<title>rcu_do_batch (34,756,838 samples, 0.05%)</title><rect x="160.9" y="309" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="163.91" y="319.5" ></text>
</g>
<g >
<title>kmalloc_slab (35,560,790 samples, 0.06%)</title><rect x="468.3" y="197" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="471.28" y="207.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (53,040,426 samples, 0.08%)</title><rect x="987.2" y="309" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="990.17" y="319.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (63,552,864,058 samples, 99.06%)</title><rect x="21.1" y="501" width="1168.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="24.13" y="511.5" >start.posixCallMainAndExit</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (302,841,484 samples, 0.47%)</title><rect x="757.2" y="325" width="5.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="760.19" y="335.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,432,618,272 samples, 2.23%)</title><rect x="797.6" y="213" width="26.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="800.56" y="223.5" >a..</text>
</g>
<g >
<title>__hrtimer_run_queues (17,771,082 samples, 0.03%)</title><rect x="75.8" y="309" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="78.82" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (355,701,026 samples, 0.55%)</title><rect x="164.8" y="389" width="6.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="167.81" y="399.5" ></text>
</g>
<g >
<title>debug.inValgrind (53,040,426 samples, 0.08%)</title><rect x="987.2" y="341" width="0.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="990.17" y="351.5" ></text>
</g>
<g >
<title>__memset (34,611,697 samples, 0.05%)</title><rect x="465.4" y="181" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="468.37" y="191.5" ></text>
</g>
<g >
<title>fsnotify (388,144,626 samples, 0.60%)</title><rect x="858.4" y="181" width="7.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="861.35" y="191.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_3903 (10,814,369,706 samples, 16.86%)</title><rect x="990.4" y="421" width="198.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="993.45" y="431.5" >mem.indexOf__anon_3903</text>
</g>
<g >
<title>sync_regs (17,588,259 samples, 0.03%)</title><rect x="1189.3" y="245" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.35" y="255.5" ></text>
</g>
<g >
<title>locks_remove_posix (145,749,418 samples, 0.23%)</title><rect x="651.6" y="277" width="2.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="654.62" y="287.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (259,392,846 samples, 0.40%)</title><rect x="230.7" y="293" width="4.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="233.68" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (618,239,785 samples, 0.96%)</title><rect x="406.1" y="149" width="11.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="409.13" y="159.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (70,341,717 samples, 0.11%)</title><rect x="829.6" y="165" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="832.62" y="175.5" ></text>
</g>
<g >
<title>mod_objcg_state (18,549,330 samples, 0.03%)</title><rect x="1131.7" y="229" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1134.73" y="239.5" ></text>
</g>
<g >
<title>amd_clear_divider (51,697,801 samples, 0.08%)</title><rect x="656.3" y="293" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="659.31" y="303.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (312,036,751 samples, 0.49%)</title><rect x="888.5" y="213" width="5.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="891.55" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (18,250,392 samples, 0.03%)</title><rect x="35.8" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="38.82" y="431.5" ></text>
</g>
<g >
<title>mem.eqlBytes (34,309,288 samples, 0.05%)</title><rect x="188.0" y="373" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="191.01" y="383.5" ></text>
</g>
<g >
<title>mntput (15,935,526 samples, 0.02%)</title><rect x="636.6" y="277" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="639.61" y="287.5" ></text>
</g>
<g >
<title>step_into (125,583,173 samples, 0.20%)</title><rect x="916.8" y="213" width="2.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="919.77" y="223.5" ></text>
</g>
<g >
<title>__fget_light (123,172,858 samples, 0.19%)</title><rect x="281.6" y="277" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="284.56" y="287.5" ></text>
</g>
<g >
<title>do_dentry_open (3,079,457,479 samples, 4.80%)</title><rect x="831.9" y="213" width="56.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="834.91" y="223.5" >do_de..</text>
</g>
<g >
<title>entry_SYSCALL_64 (230,107,638 samples, 0.36%)</title><rect x="16.0" y="485" width="4.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="18.95" y="495.5" ></text>
</g>
<g >
<title>rb_first (55,400,123 samples, 0.09%)</title><rect x="523.6" y="261" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="526.65" y="271.5" ></text>
</g>
<g >
<title>security_file_free (18,998,936 samples, 0.03%)</title><rect x="641.4" y="277" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="644.45" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,786,534 samples, 0.03%)</title><rect x="723.9" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="726.95" y="383.5" ></text>
</g>
<g >
<title>mem.isAligned (34,793,266 samples, 0.05%)</title><rect x="239.3" y="325" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="242.30" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (152,963,251 samples, 0.24%)</title><rect x="632.4" y="277" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="635.45" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (35,423,600 samples, 0.06%)</title><rect x="1189.3" y="389" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.35" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (18,414,182 samples, 0.03%)</title><rect x="625.4" y="229" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="628.36" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (36,091,172 samples, 0.06%)</title><rect x="84.2" y="389" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="87.17" y="399.5" ></text>
</g>
<g >
<title>dput (158,575,619 samples, 0.25%)</title><rect x="609.8" y="277" width="2.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="612.82" y="287.5" ></text>
</g>
<g >
<title>security_file_open (1,029,641,223 samples, 1.60%)</title><rect x="869.6" y="197" width="18.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="872.61" y="207.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (143,708,519 samples, 0.22%)</title><rect x="560.5" y="341" width="2.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="563.48" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,347,216 samples, 0.03%)</title><rect x="512.9" y="213" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="515.92" y="223.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (673,944,776 samples, 1.05%)</title><rect x="201.4" y="357" width="12.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="204.38" y="367.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (2,341,454,116 samples, 3.65%)</title><rect x="216.0" y="373" width="43.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="218.98" y="383.5" >mem...</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (34,083,040 samples, 0.05%)</title><rect x="57.9" y="389" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="60.87" y="399.5" ></text>
</g>
</g>
</svg>
