<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>handle_softirqs (14,439,890 samples, 0.07%)</title><rect x="121.1" y="277" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="124.08" y="287.5" ></text>
</g>
<g >
<title>ext4_release_dir (163,968,391 samples, 0.77%)</title><rect x="644.0" y="213" width="9.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="646.99" y="223.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (44,200,783 samples, 0.21%)</title><rect x="671.1" y="181" width="2.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="674.09" y="191.5" ></text>
</g>
<g >
<title>__call_rcu_common (850,431,853 samples, 3.98%)</title><rect x="592.7" y="229" width="47.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="595.74" y="239.5" >__ca..</text>
</g>
<g >
<title>__check_heap_object (22,724,713 samples, 0.11%)</title><rect x="1016.8" y="133" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1019.84" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,619,143 samples, 0.03%)</title><rect x="51.5" y="277" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="54.54" y="287.5" ></text>
</g>
<g >
<title>lockref_get (118,136,218 samples, 0.55%)</title><rect x="940.3" y="133" width="6.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="943.31" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,788,994 samples, 0.08%)</title><rect x="18.3" y="421" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="21.31" y="431.5" ></text>
</g>
<g >
<title>update_process_times (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="165" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1187.17" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,761,995 samples, 0.08%)</title><rect x="220.2" y="197" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="223.25" y="207.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (14,651,796 samples, 0.07%)</title><rect x="861.3" y="117" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="864.31" y="127.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3954 (5,936,685 samples, 0.03%)</title><rect x="287.1" y="261" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="290.08" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (207,894,713 samples, 0.97%)</title><rect x="1026.2" y="245" width="11.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1029.17" y="255.5" ></text>
</g>
<g >
<title>handle_softirqs (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="101" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1026.02" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,619,143 samples, 0.03%)</title><rect x="51.5" y="245" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="54.54" y="255.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (31,483,439 samples, 0.15%)</title><rect x="531.9" y="165" width="1.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="534.91" y="175.5" ></text>
</g>
<g >
<title>call_rcu (33,755,406 samples, 0.16%)</title><rect x="667.1" y="229" width="1.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="670.07" y="239.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,439,890 samples, 0.07%)</title><rect x="121.1" y="293" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="124.08" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,027,250 samples, 0.08%)</title><rect x="137.7" y="309" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="140.67" y="319.5" ></text>
</g>
<g >
<title>security_file_free (79,434,075 samples, 0.37%)</title><rect x="662.7" y="213" width="4.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="665.69" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,761,995 samples, 0.08%)</title><rect x="220.2" y="149" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="223.25" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,619,143 samples, 0.03%)</title><rect x="51.5" y="293" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="54.54" y="303.5" ></text>
</g>
<g >
<title>__getblk_gfp (467,530,403 samples, 2.19%)</title><rect x="395.5" y="117" width="25.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="398.54" y="127.5" >_..</text>
</g>
<g >
<title>os.linux.openat (4,129,928,785 samples, 19.33%)</title><rect x="812.5" y="277" width="228.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="815.54" y="287.5" >os.linux.openat</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (193,516,163 samples, 0.91%)</title><rect x="680.4" y="277" width="10.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="683.36" y="287.5" ></text>
</g>
<g >
<title>may_open (21,126,374 samples, 0.10%)</title><rect x="981.3" y="149" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="984.25" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (23,750,169 samples, 0.11%)</title><rect x="59.9" y="309" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="62.86" y="319.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (1,316,544,940 samples, 6.16%)</title><rect x="1117.3" y="309" width="72.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1120.31" y="319.5" >mem.eql_..</text>
</g>
<g >
<title>_raw_read_lock (7,431,898 samples, 0.03%)</title><rect x="377.7" y="85" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="380.73" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,619,143 samples, 0.03%)</title><rect x="51.5" y="261" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="54.54" y="271.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,113,428,736 samples, 5.21%)</title><rect x="1040.6" y="325" width="61.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1043.57" y="335.5" >posix...</text>
</g>
<g >
<title>__x64_sys_openat (3,639,434,733 samples, 17.03%)</title><rect x="822.4" y="213" width="200.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="825.39" y="223.5" >__x64_sys_openat</text>
</g>
<g >
<title>fs.Dir.close (1,894,491,690 samples, 8.86%)</title><rect x="590.0" y="341" width="104.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="593.01" y="351.5" >fs.Dir.close</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (17,523,859 samples, 0.08%)</title><rect x="809.4" y="261" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="812.41" y="271.5" ></text>
</g>
<g >
<title>touch_atime (51,209,077 samples, 0.24%)</title><rect x="553.3" y="213" width="2.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="556.33" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (31,300,504 samples, 0.15%)</title><rect x="344.3" y="165" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="347.26" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,619,143 samples, 0.03%)</title><rect x="51.5" y="197" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="54.54" y="207.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (60,044,612 samples, 0.28%)</title><rect x="937.0" y="133" width="3.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="940.00" y="143.5" ></text>
</g>
<g >
<title>fsnotify (51,094,854 samples, 0.24%)</title><rect x="934.2" y="133" width="2.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="937.18" y="143.5" ></text>
</g>
<g >
<title>dnotify_flush (67,157,911 samples, 0.31%)</title><rect x="669.8" y="213" width="3.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="672.82" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (75,169,729 samples, 0.35%)</title><rect x="47.8" y="341" width="4.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="50.76" y="351.5" ></text>
</g>
<g >
<title>__fput (495,859,941 samples, 2.32%)</title><rect x="639.7" y="229" width="27.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="642.70" y="239.5" >_..</text>
</g>
<g >
<title>rcu_do_batch (17,027,250 samples, 0.08%)</title><rect x="137.7" y="229" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="140.67" y="239.5" ></text>
</g>
<g >
<title>__memset (55,109,146 samples, 0.26%)</title><rect x="1008.2" y="149" width="3.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1011.18" y="159.5" ></text>
</g>
<g >
<title>__legitimize_path (30,741,224 samples, 0.14%)</title><rect x="869.4" y="117" width="1.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="872.40" y="127.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (364,391,733 samples, 1.71%)</title><rect x="1081.9" y="293" width="20.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1084.93" y="303.5" ></text>
</g>
<g >
<title>ext4_getblk (7,431,898 samples, 0.03%)</title><rect x="377.7" y="133" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="380.73" y="143.5" ></text>
</g>
<g >
<title>inode_permission (41,283,250 samples, 0.19%)</title><rect x="969.6" y="133" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="972.59" y="143.5" ></text>
</g>
<g >
<title>filemap_get_entry (99,865,570 samples, 0.47%)</title><rect x="407.7" y="69" width="5.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="410.75" y="79.5" ></text>
</g>
<g >
<title>__slab_free (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="53" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1026.02" y="63.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (102,831,006 samples, 0.48%)</title><rect x="415.7" y="69" width="5.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="418.68" y="79.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (286,313,987 samples, 1.34%)</title><rect x="949.0" y="117" width="15.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="951.97" y="127.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (40,196,205 samples, 0.19%)</title><rect x="65.0" y="341" width="2.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="68.04" y="351.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (48,248,746 samples, 0.23%)</title><rect x="550.7" y="197" width="2.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="553.67" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (13,230,291 samples, 0.06%)</title><rect x="1022.3" y="133" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1025.29" y="143.5" ></text>
</g>
<g >
<title>try_to_wake_up (14,439,890 samples, 0.07%)</title><rect x="121.1" y="261" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="124.08" y="271.5" ></text>
</g>
<g >
<title>common_interrupt (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="181" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1026.35" y="191.5" ></text>
</g>
<g >
<title>fsnotify (5,610,330 samples, 0.03%)</title><rect x="331.9" y="197" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="334.90" y="207.5" ></text>
</g>
<g >
<title>perf_event_task_tick (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="133" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1187.17" y="143.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (966,135,108 samples, 4.52%)</title><rect x="233.7" y="245" width="53.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="236.74" y="255.5" >valgr..</text>
</g>
<g >
<title>__irq_exit_rcu (31,611,848 samples, 0.15%)</title><rect x="548.9" y="149" width="1.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="551.92" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (146,555,604 samples, 0.69%)</title><rect x="413.3" y="85" width="8.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="416.26" y="95.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (323,404,141 samples, 1.51%)</title><rect x="473.6" y="133" width="17.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="476.61" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (8,803,268 samples, 0.04%)</title><rect x="1025.7" y="197" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1028.68" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (6,619,143 samples, 0.03%)</title><rect x="51.5" y="309" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="54.54" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (30,518,315 samples, 0.14%)</title><rect x="62.9" y="325" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="65.85" y="335.5" ></text>
</g>
<g >
<title>alloc_empty_file (446,866,094 samples, 2.09%)</title><rect x="844.7" y="149" width="24.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="847.72" y="159.5" >a..</text>
</g>
<g >
<title>memchr (78,420,188 samples, 0.37%)</title><rect x="369.8" y="149" width="4.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="372.78" y="159.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="37" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1026.02" y="47.5" ></text>
</g>
<g >
<title>security_file_alloc (117,505,294 samples, 0.55%)</title><rect x="850.9" y="117" width="6.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="853.90" y="127.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,819,057,297 samples, 8.51%)</title><rect x="590.6" y="293" width="100.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="593.60" y="303.5" >os.linux.x86..</text>
</g>
<g >
<title>getname (32,673,038 samples, 0.15%)</title><rect x="999.6" y="181" width="1.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1002.64" y="191.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (70,506,025 samples, 0.33%)</title><rect x="1098.2" y="261" width="3.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1101.16" y="271.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (933,853,880 samples, 4.37%)</title><rect x="235.5" y="229" width="51.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="238.52" y="239.5" >valgr..</text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (63,006,319 samples, 0.29%)</title><rect x="123.0" y="341" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="126.00" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_free (6,976,519 samples, 0.03%)</title><rect x="527.8" y="181" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="530.85" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="213" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1026.35" y="223.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (10,254,831 samples, 0.05%)</title><rect x="859.4" y="101" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="862.41" y="111.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (969,662,021 samples, 4.54%)</title><rect x="68.3" y="341" width="53.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="71.35" y="351.5" >compi..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (5,958,141 samples, 0.03%)</title><rect x="126.5" y="325" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="129.48" y="335.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (21,193,242,889 samples, 99.17%)</title><rect x="19.8" y="421" width="1170.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="22.81" y="431.5" >start.callMainWithArgs</text>
</g>
<g >
<title>ext4_map_blocks (831,766,595 samples, 3.89%)</title><rect x="421.4" y="117" width="45.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="424.36" y="127.5" >ext4..</text>
</g>
<g >
<title>__handle_irq_event_percpu (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="117" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1026.35" y="127.5" ></text>
</g>
<g >
<title>atime_needs_update (34,624,896 samples, 0.16%)</title><rect x="554.2" y="197" width="2.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="557.25" y="207.5" ></text>
</g>
<g >
<title>[unknown] (167,230,368 samples, 0.78%)</title><rect x="10.0" y="453" width="9.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (31,300,504 samples, 0.15%)</title><rect x="344.3" y="181" width="1.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="347.26" y="191.5" ></text>
</g>
<g >
<title>enqueue_task (14,439,890 samples, 0.07%)</title><rect x="121.1" y="229" width="0.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="124.08" y="239.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (14,969,447 samples, 0.07%)</title><rect x="957.5" y="53" width="0.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="960.50" y="63.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (139,217,550 samples, 0.65%)</title><rect x="644.0" y="197" width="7.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="646.99" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (31,611,848 samples, 0.15%)</title><rect x="548.9" y="133" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="551.92" y="143.5" ></text>
</g>
<g >
<title>__unfreeze_partials (31,611,848 samples, 0.15%)</title><rect x="548.9" y="85" width="1.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="551.92" y="95.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (88,644,717 samples, 0.41%)</title><rect x="1185.1" y="293" width="4.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1188.11" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,596,099,552 samples, 7.47%)</title><rect x="592.2" y="261" width="88.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="595.23" y="271.5" >do_syscall..</text>
</g>
<g >
<title>filldir64 (491,543,958 samples, 2.30%)</title><rect x="347.0" y="181" width="27.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="349.97" y="191.5" >f..</text>
</g>
<g >
<title>mem.eql__anon_5137 (1,469,103,444 samples, 6.87%)</title><rect x="138.6" y="309" width="81.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="141.61" y="319.5" >mem.eql__..</text>
</g>
<g >
<title>debug.assert (38,579,750 samples, 0.18%)</title><rect x="231.6" y="261" width="2.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="234.61" y="271.5" ></text>
</g>
<g >
<title>file_ra_state_init (9,998,930 samples, 0.05%)</title><rect x="933.6" y="133" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="936.62" y="143.5" ></text>
</g>
<g >
<title>do_exit (10,394,462 samples, 0.05%)</title><rect x="19.2" y="389" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="22.23" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,761,769,323 samples, 17.60%)</title><rect x="818.5" y="245" width="207.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="821.46" y="255.5" >entry_SYSCALL_64_after_hwfr..</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="117" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1187.17" y="127.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (17,611,578 samples, 0.08%)</title><rect x="831.4" y="165" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="834.40" y="175.5" ></text>
</g>
<g >
<title>inode_to_bdi (9,998,930 samples, 0.05%)</title><rect x="933.6" y="117" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="936.62" y="127.5" ></text>
</g>
<g >
<title>kfree (24,750,841 samples, 0.12%)</title><rect x="651.7" y="197" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="654.67" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (8,366,152,164 samples, 39.15%)</title><rect x="126.8" y="325" width="461.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="129.81" y="335.5" >fs.Dir.Iterator__struct_3782.nextLinux</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7,242,025 samples, 0.03%)</title><rect x="15.9" y="421" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.86" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,761,995 samples, 0.08%)</title><rect x="220.2" y="261" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="223.25" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (56,299,153 samples, 0.26%)</title><rect x="19.8" y="373" width="3.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="22.81" y="383.5" ></text>
</g>
<g >
<title>__memset (148,179,467 samples, 0.69%)</title><rect x="480.8" y="117" width="8.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="483.82" y="127.5" ></text>
</g>
<g >
<title>update_process_times (17,761,995 samples, 0.08%)</title><rect x="220.2" y="181" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="223.25" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (16,788,994 samples, 0.08%)</title><rect x="18.3" y="437" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="21.31" y="447.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (46,868,260 samples, 0.22%)</title><rect x="691.0" y="309" width="2.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="694.04" y="319.5" ></text>
</g>
<g >
<title>rb_next_postorder (12,410,249 samples, 0.06%)</title><rect x="651.0" y="181" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="653.99" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (37,122,644 samples, 0.17%)</title><rect x="16.3" y="437" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="19.26" y="447.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (16,814,872 samples, 0.08%)</title><rect x="865.3" y="53" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="868.34" y="63.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (17,621,925 samples, 0.08%)</title><rect x="58.9" y="309" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="61.89" y="319.5" ></text>
</g>
<g >
<title>debug.inValgrind (70,506,025 samples, 0.33%)</title><rect x="1098.2" y="277" width="3.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1101.16" y="287.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (1,573,620,667 samples, 7.36%)</title><rect x="1103.1" y="341" width="86.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1106.11" y="351.5" >mem.indexO..</text>
</g>
<g >
<title>xas_load (58,036,711 samples, 0.27%)</title><rect x="410.1" y="53" width="3.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="413.06" y="63.5" ></text>
</g>
<g >
<title>__mmput (10,394,462 samples, 0.05%)</title><rect x="19.2" y="373" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="22.23" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="277" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1187.17" y="287.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (33,101,686 samples, 0.15%)</title><rect x="974.5" y="117" width="1.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="977.53" y="127.5" ></text>
</g>
<g >
<title>lookup_fast (88,606,743 samples, 0.41%)</title><rect x="976.4" y="149" width="4.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="979.36" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,027,250 samples, 0.08%)</title><rect x="137.7" y="277" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="140.67" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (9,990,990 samples, 0.05%)</title><rect x="866.8" y="53" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="869.81" y="63.5" ></text>
</g>
<g >
<title>terminate_walk (50,647,920 samples, 0.24%)</title><rect x="989.4" y="149" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="992.38" y="159.5" ></text>
</g>
<g >
<title>__srcu_read_lock (30,551,630 samples, 0.14%)</title><rect x="671.8" y="165" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="674.84" y="175.5" ></text>
</g>
<g >
<title>security_file_permission (48,248,746 samples, 0.23%)</title><rect x="550.7" y="213" width="2.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="553.67" y="223.5" ></text>
</g>
<g >
<title>security_inode_permission (81,433,667 samples, 0.38%)</title><rect x="971.9" y="133" width="4.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="974.87" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (23,752,771 samples, 0.11%)</title><rect x="564.1" y="229" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="567.05" y="239.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,543,595 samples, 0.08%)</title><rect x="21.9" y="325" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="24.95" y="335.5" ></text>
</g>
<g >
<title>vfs_open (29,875,694 samples, 0.14%)</title><rect x="992.2" y="149" width="1.6" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="995.18" y="159.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (4,083,046,976 samples, 19.11%)</title><rect x="815.1" y="261" width="225.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="818.13" y="271.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>posix.errno__anon_7457 (17,766,994 samples, 0.08%)</title><rect x="693.6" y="309" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="696.63" y="319.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (30,807,177 samples, 0.14%)</title><rect x="867.7" y="133" width="1.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="870.69" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (32,806,992 samples, 0.15%)</title><rect x="678.5" y="229" width="1.9" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="681.55" y="239.5" ></text>
</g>
<g >
<title>xhci_irq (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="101" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1026.35" y="111.5" ></text>
</g>
<g >
<title>path_init (119,778,942 samples, 0.56%)</title><rect x="982.4" y="149" width="6.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="985.42" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,761,995 samples, 0.08%)</title><rect x="220.2" y="277" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="223.25" y="287.5" ></text>
</g>
<g >
<title>mem.eqlBytes (7,003,098 samples, 0.03%)</title><rect x="1116.9" y="309" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1119.92" y="319.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (692,690,642 samples, 3.24%)</title><rect x="422.2" y="85" width="38.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="425.20" y="95.5" >ext..</text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (1,569,109,715 samples, 7.34%)</title><rect x="220.2" y="309" width="86.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="223.25" y="319.5" >mem.sliceT..</text>
</g>
<g >
<title>[unknown] (161,092,491 samples, 0.75%)</title><rect x="951.5" y="85" width="8.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="954.54" y="95.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (25,069,605 samples, 0.12%)</title><rect x="962.7" y="85" width="1.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="965.71" y="95.5" ></text>
</g>
<g >
<title>handle_softirqs (17,543,595 samples, 0.08%)</title><rect x="21.9" y="309" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="24.95" y="319.5" ></text>
</g>
<g >
<title>dput (14,917,423 samples, 0.07%)</title><rect x="643.2" y="213" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="646.16" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (31,611,848 samples, 0.15%)</title><rect x="548.9" y="165" width="1.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="551.92" y="175.5" ></text>
</g>
<g >
<title>debug.inValgrind (966,135,108 samples, 4.52%)</title><rect x="233.7" y="261" width="53.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="236.74" y="271.5" >debug..</text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (5,995,386 samples, 0.03%)</title><rect x="861.8" y="101" width="0.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="864.78" y="111.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (512,225,898 samples, 2.40%)</title><rect x="499.6" y="165" width="28.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="502.57" y="175.5" >e..</text>
</g>
<g >
<title>fsnotify (56,215,912 samples, 0.26%)</title><rect x="547.6" y="197" width="3.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="550.56" y="207.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (123,721,250 samples, 0.58%)</title><rect x="460.5" y="101" width="6.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="463.45" y="111.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (148,575,067 samples, 0.70%)</title><rect x="694.6" y="341" width="8.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="697.61" y="351.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (7,907,087 samples, 0.04%)</title><rect x="1098.2" y="245" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1101.16" y="255.5" ></text>
</g>
<g >
<title>rb_next (67,155,751 samples, 0.31%)</title><rect x="540.6" y="197" width="3.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="543.57" y="207.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (32,064,199 samples, 0.15%)</title><rect x="805.9" y="293" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="808.90" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (31,611,848 samples, 0.15%)</title><rect x="548.9" y="181" width="1.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="551.92" y="191.5" ></text>
</g>
<g >
<title>dput (50,647,920 samples, 0.24%)</title><rect x="989.4" y="133" width="2.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="992.38" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,761,995 samples, 0.08%)</title><rect x="220.2" y="293" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="223.25" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,543,595 samples, 0.08%)</title><rect x="21.9" y="357" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.95" y="367.5" ></text>
</g>
<g >
<title>do_sys_openat2 (3,560,147,199 samples, 16.66%)</title><rect x="826.8" y="197" width="196.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="829.77" y="207.5" >do_sys_openat2</text>
</g>
<g >
<title>__memset (6,218,769 samples, 0.03%)</title><rect x="860.0" y="117" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="862.98" y="127.5" ></text>
</g>
<g >
<title>search_name_runner.main (21,193,242,889 samples, 99.17%)</title><rect x="19.8" y="389" width="1170.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.81" y="399.5" >search_name_runner.main</text>
</g>
<g >
<title>__rcu_read_unlock (17,820,008 samples, 0.08%)</title><rect x="860.3" y="117" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="863.32" y="127.5" ></text>
</g>
<g >
<title>strncpy_from_user (219,504,455 samples, 1.03%)</title><rect x="1011.2" y="165" width="12.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1014.23" y="175.5" ></text>
</g>
<g >
<title>fd_install (60,523,001 samples, 0.28%)</title><rect x="993.8" y="181" width="3.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="996.83" y="191.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (78,094,604 samples, 0.37%)</title><rect x="546.4" y="213" width="4.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="549.36" y="223.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (2,711,296,925 samples, 12.69%)</title><rect x="378.1" y="181" width="149.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="381.14" y="191.5" >htree_dirblock_to_t..</text>
</g>
<g >
<title>valgrind.doClientRequest (30,675,455 samples, 0.14%)</title><rect x="1100.4" y="229" width="1.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1103.36" y="239.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (16,814,872 samples, 0.08%)</title><rect x="865.3" y="85" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="868.34" y="95.5" ></text>
</g>
<g >
<title>kmalloc_trace (61,665,601 samples, 0.29%)</title><rect x="537.2" y="197" width="3.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="540.17" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (6,007,468 samples, 0.03%)</title><rect x="588.4" y="309" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="591.42" y="319.5" ></text>
</g>
<g >
<title>array_list.addOrOom (19,701,039 samples, 0.09%)</title><rect x="67.3" y="325" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="70.26" y="335.5" ></text>
</g>
<g >
<title>call_filldir (509,323,504 samples, 2.38%)</title><rect x="346.0" y="197" width="28.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="348.99" y="207.5" >c..</text>
</g>
<g >
<title>do_syscall_64 (10,394,462 samples, 0.05%)</title><rect x="19.2" y="437" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="22.23" y="447.5" ></text>
</g>
<g >
<title>[[x_tables]] (227,442,416 samples, 1.06%)</title><rect x="951.5" y="101" width="12.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="954.54" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,761,995 samples, 0.08%)</title><rect x="220.2" y="229" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="223.25" y="239.5" ></text>
</g>
<g >
<title>rcu_do_batch (31,611,848 samples, 0.15%)</title><rect x="548.9" y="101" width="1.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="551.92" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,853,009 samples, 0.06%)</title><rect x="466.6" y="69" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="469.63" y="79.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (146,206,444 samples, 0.68%)</title><rect x="968.3" y="149" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="971.29" y="159.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (708,045,345 samples, 3.31%)</title><rect x="421.4" y="101" width="39.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="424.36" y="111.5" >__c..</text>
</g>
<g >
<title>free_unref_page_list (10,394,462 samples, 0.05%)</title><rect x="19.2" y="293" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="22.23" y="303.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (7,431,898 samples, 0.03%)</title><rect x="377.7" y="165" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="380.73" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="229" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1187.17" y="239.5" ></text>
</g>
<g >
<title>__brelse (65,825,815 samples, 0.31%)</title><rect x="383.0" y="165" width="3.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="386.00" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (37,099,870 samples, 0.17%)</title><rect x="676.5" y="229" width="2.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="679.50" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (31,300,504 samples, 0.15%)</title><rect x="344.3" y="101" width="1.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="347.26" y="111.5" ></text>
</g>
<g >
<title>try_to_unlazy (30,741,224 samples, 0.14%)</title><rect x="869.4" y="133" width="1.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="872.40" y="143.5" ></text>
</g>
<g >
<title>asm_common_interrupt (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="197" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1026.35" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (8,394,863,892 samples, 39.28%)</title><rect x="126.5" y="341" width="463.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="129.48" y="351.5" >fs.Dir.Iterator__struct_3782.next</text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (1,551,347,720 samples, 7.26%)</title><rect x="221.2" y="293" width="85.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="224.23" y="303.5" >mem.lenSli..</text>
</g>
<g >
<title>rcu_core (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="85" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1026.02" y="95.5" ></text>
</g>
<g >
<title>init_file (209,864,692 samples, 0.98%)</title><rect x="845.8" y="133" width="11.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="848.80" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,565,862,258 samples, 21.36%)</title><rect x="313.3" y="277" width="252.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="316.26" y="287.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>syscall_return_via_sysret (17,773,772 samples, 0.08%)</title><rect x="587.4" y="277" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="590.44" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,254,831 samples, 0.05%)</title><rect x="859.4" y="85" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="862.41" y="95.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (19,701,039 samples, 0.09%)</title><rect x="67.3" y="341" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="70.26" y="351.5" ></text>
</g>
<g >
<title>do_filp_open (2,924,238,167 samples, 13.68%)</title><rect x="832.4" y="181" width="161.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="835.37" y="191.5" >do_filp_open</text>
</g>
<g >
<title>__bpf_prog_enter (35,247,785 samples, 0.16%)</title><rect x="960.4" y="85" width="2.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="963.43" y="95.5" ></text>
</g>
<g >
<title>mntput (30,492,484 samples, 0.14%)</title><rect x="660.3" y="213" width="1.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="663.29" y="223.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (5,091,255,219 samples, 23.82%)</title><rect x="307.3" y="309" width="281.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="310.30" y="319.5" >os.linux.getdents64</text>
</g>
<g >
<title>valgrind.doClientRequest (933,853,880 samples, 4.37%)</title><rect x="235.5" y="213" width="51.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="238.52" y="223.5" >valgr..</text>
</g>
<g >
<title>mem.eql__anon_5137 (47,068,638 samples, 0.22%)</title><rect x="1103.7" y="325" width="2.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1106.65" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (7,230,568,022 samples, 33.83%)</title><rect x="702.8" y="341" width="399.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="705.81" y="351.5" >fs.Dir.openDir</text>
</g>
<g >
<title>entry_SYSCALL_64 (57,803,417 samples, 0.27%)</title><rect x="310.1" y="277" width="3.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="313.07" y="287.5" ></text>
</g>
<g >
<title>pick_file (7,973,765 samples, 0.04%)</title><rect x="669.4" y="213" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="672.38" y="223.5" ></text>
</g>
<g >
<title>fsnotify (37,600,121 samples, 0.18%)</title><rect x="544.3" y="213" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="547.28" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (20,224,300 samples, 0.09%)</title><rect x="121.9" y="341" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="124.89" y="351.5" ></text>
</g>
<g >
<title>debug.assert (39,057,973 samples, 0.18%)</title><rect x="1078.8" y="309" width="2.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1081.79" y="319.5" ></text>
</g>
<g >
<title>__slab_free (17,543,595 samples, 0.08%)</title><rect x="21.9" y="261" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.95" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (6,619,143 samples, 0.03%)</title><rect x="51.5" y="165" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="54.54" y="175.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (364,391,733 samples, 1.71%)</title><rect x="1081.9" y="309" width="20.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1084.93" y="319.5" ></text>
</g>
<g >
<title>__kmalloc (371,880,514 samples, 1.74%)</title><rect x="470.9" y="149" width="20.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="473.94" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,761,995 samples, 0.08%)</title><rect x="220.2" y="245" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="223.25" y="255.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (584,693,435 samples, 2.74%)</title><rect x="467.3" y="165" width="32.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="470.28" y="175.5" >ex..</text>
</g>
<g >
<title>entry_SYSCALL_64 (7,012,874 samples, 0.03%)</title><rect x="810.4" y="245" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="813.38" y="255.5" ></text>
</g>
<g >
<title>release_pages (10,394,462 samples, 0.05%)</title><rect x="19.2" y="309" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="22.23" y="319.5" ></text>
</g>
<g >
<title>dx_probe (7,431,898 samples, 0.03%)</title><rect x="377.7" y="181" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="380.73" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="181" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1187.17" y="191.5" ></text>
</g>
<g >
<title>posix.openatZ (4,218,097,775 samples, 19.74%)</title><rect x="807.7" y="293" width="232.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="810.67" y="303.5" >posix.openatZ</text>
</g>
<g >
<title>__hrtimer_run_queues (6,619,143 samples, 0.03%)</title><rect x="51.5" y="229" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="54.54" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (31,018,479 samples, 0.15%)</title><rect x="26.3" y="357" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="29.34" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (44,673,514 samples, 0.21%)</title><rect x="489.0" y="117" width="2.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="492.00" y="127.5" ></text>
</g>
<g >
<title>exit_mmap (10,394,462 samples, 0.05%)</title><rect x="19.2" y="357" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="22.23" y="367.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (32,281,228 samples, 0.15%)</title><rect x="233.7" y="229" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="236.74" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,619,143 samples, 0.03%)</title><rect x="51.5" y="213" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="54.54" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,439,890 samples, 0.07%)</title><rect x="121.1" y="325" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="124.08" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (113,318,730 samples, 0.53%)</title><rect x="10.0" y="437" width="6.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>do_dentry_open (1,760,326,039 samples, 8.24%)</title><rect x="871.1" y="149" width="97.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="874.09" y="159.5" >do_dentry_o..</text>
</g>
<g >
<title>scheduler_tick (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="149" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1187.17" y="159.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (47,591,333 samples, 0.22%)</title><rect x="853.7" y="101" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="856.73" y="111.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (379,696,791 samples, 1.78%)</title><rect x="198.8" y="293" width="20.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="201.76" y="303.5" ></text>
</g>
<g >
<title>hook_file_open (63,619,774 samples, 0.30%)</title><rect x="964.8" y="117" width="3.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="967.78" y="127.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (396,673,387 samples, 1.86%)</title><rect x="1001.4" y="181" width="21.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1004.44" y="191.5" >g..</text>
</g>
<g >
<title>bpf_lsm_file_free_security (51,578,618 samples, 0.24%)</title><rect x="664.2" y="197" width="2.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="667.23" y="207.5" ></text>
</g>
<g >
<title>rb_insert_color (8,656,530 samples, 0.04%)</title><rect x="499.1" y="149" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="502.09" y="159.5" ></text>
</g>
<g >
<title>start.callMain (21,193,242,889 samples, 99.17%)</title><rect x="19.8" y="405" width="1170.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="22.81" y="415.5" >start.callMain</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,761,995 samples, 0.08%)</title><rect x="220.2" y="133" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="223.25" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="213" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1187.17" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (31,300,504 samples, 0.15%)</title><rect x="344.3" y="149" width="1.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="347.26" y="159.5" ></text>
</g>
<g >
<title>rcu_core (31,611,848 samples, 0.15%)</title><rect x="548.9" y="117" width="1.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="551.92" y="127.5" ></text>
</g>
<g >
<title>[unknown] (56,637,582 samples, 0.27%)</title><rect x="809.4" y="277" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.41" y="287.5" ></text>
</g>
<g >
<title>rcu_core (17,543,595 samples, 0.08%)</title><rect x="21.9" y="293" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="24.95" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,543,595 samples, 0.08%)</title><rect x="21.9" y="341" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="24.95" y="351.5" ></text>
</g>
<g >
<title>__memset (6,465,684 samples, 0.03%)</title><rect x="539.6" y="165" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="542.55" y="175.5" ></text>
</g>
<g >
<title>__kmem_cache_free (65,785,867 samples, 0.31%)</title><rect x="644.8" y="181" width="3.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="647.83" y="191.5" ></text>
</g>
<g >
<title>__fget_light (83,592,283 samples, 0.39%)</title><rect x="320.4" y="213" width="4.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="323.42" y="223.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (6,032,535 samples, 0.03%)</title><rect x="962.4" y="85" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="965.38" y="95.5" ></text>
</g>
<g >
<title>__virt_addr_valid (75,939,084 samples, 0.36%)</title><rect x="1018.1" y="133" width="4.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1021.10" y="143.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (197,433,507 samples, 0.92%)</title><rect x="53.6" y="341" width="10.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="56.64" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (32,100,849 samples, 0.15%)</title><rect x="810.8" y="245" width="1.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="813.77" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (12,611,683 samples, 0.06%)</title><rect x="1078.1" y="309" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1081.09" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,523,859 samples, 0.08%)</title><rect x="809.4" y="245" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="812.41" y="255.5" ></text>
</g>
<g >
<title>xas_start (8,066,669 samples, 0.04%)</title><rect x="412.8" y="37" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="415.82" y="47.5" ></text>
</g>
<g >
<title>__memset (5,925,145 samples, 0.03%)</title><rect x="856.4" y="85" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="859.36" y="95.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (44,200,783 samples, 0.21%)</title><rect x="671.1" y="197" width="2.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="674.09" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (186,673,783 samples, 0.87%)</title><rect x="857.4" y="133" width="10.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="860.39" y="143.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (157,674,551 samples, 0.74%)</title><rect x="519.1" y="133" width="8.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="522.14" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (234,614,227 samples, 1.10%)</title><rect x="782.4" y="325" width="12.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="785.39" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,675,387 samples, 0.06%)</title><rect x="856.7" y="85" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="859.69" y="95.5" ></text>
</g>
<g >
<title>mod_objcg_state (24,806,023 samples, 0.12%)</title><rect x="864.9" y="101" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="867.90" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (37,122,644 samples, 0.17%)</title><rect x="16.3" y="421" width="2.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="19.26" y="431.5" ></text>
</g>
<g >
<title>errseq_sample (26,385,090 samples, 0.12%)</title><rect x="932.2" y="133" width="1.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="935.17" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,729,572,797 samples, 17.45%)</title><rect x="820.2" y="229" width="206.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="823.24" y="239.5" >do_syscall_64</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (32,527,771 samples, 0.15%)</title><rect x="65.5" y="325" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="68.46" y="335.5" ></text>
</g>
<g >
<title>all (21,370,867,719 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>irqtime_account_process_tick (31,300,504 samples, 0.15%)</title><rect x="344.3" y="69" width="1.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="347.26" y="79.5" ></text>
</g>
<g >
<title>ext4_bread (1,299,296,998 samples, 6.08%)</title><rect x="395.5" y="149" width="71.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="398.54" y="159.5" >ext4_bread</text>
</g>
<g >
<title>security_file_open (388,540,874 samples, 1.82%)</title><rect x="946.8" y="133" width="21.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="949.84" y="143.5" >s..</text>
</g>
<g >
<title>mem.indexOf__anon_3903 (1,592,793,278 samples, 7.45%)</title><rect x="1102.1" y="357" width="87.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1105.05" y="367.5" >mem.indexO..</text>
</g>
<g >
<title>fsnotify (43,520,486 samples, 0.20%)</title><rect x="653.0" y="213" width="2.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="656.04" y="223.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (21,136,943,736 samples, 98.91%)</title><rect x="22.9" y="373" width="1167.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="25.92" y="383.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (9,045,953 samples, 0.04%)</title><rect x="64.5" y="341" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="67.54" y="351.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (21,193,242,889 samples, 99.17%)</title><rect x="19.8" y="437" width="1170.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="22.81" y="447.5" >start.posixCallMainAndExit</text>
</g>
<g >
<title>lookup_nulls_elem_raw (38,205,980 samples, 0.18%)</title><rect x="958.3" y="69" width="2.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="961.32" y="79.5" ></text>
</g>
<g >
<title>__check_object_size (117,964,253 samples, 0.55%)</title><rect x="1016.5" y="149" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1019.51" y="159.5" ></text>
</g>
<g >
<title>handle_irq_event (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="133" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1026.35" y="143.5" ></text>
</g>
<g >
<title>close_fd_get_file (15,920,399 samples, 0.07%)</title><rect x="668.9" y="229" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="671.94" y="239.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (161,382,022 samples, 0.76%)</title><rect x="386.6" y="165" width="8.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="389.63" y="175.5" ></text>
</g>
<g >
<title>down_read_killable (46,147,904 samples, 0.22%)</title><rect x="332.2" y="213" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="335.21" y="223.5" ></text>
</g>
<g >
<title>__slab_free (97,993,968 samples, 0.46%)</title><rect x="528.2" y="181" width="5.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="531.23" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (5,091,255,219 samples, 23.82%)</title><rect x="307.3" y="293" width="281.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="310.30" y="303.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,079,083 samples, 0.08%)</title><rect x="1024.7" y="197" width="1.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1027.69" y="207.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (104,970,487 samples, 0.49%)</title><rect x="527.8" y="197" width="5.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="530.85" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (44,782,322 samples, 0.21%)</title><rect x="1023.7" y="213" width="2.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1026.70" y="223.5" ></text>
</g>
<g >
<title>xas_descend (40,076,028 samples, 0.19%)</title><rect x="410.6" y="37" width="2.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="413.60" y="47.5" ></text>
</g>
<g >
<title>posix.close (1,894,491,690 samples, 8.86%)</title><rect x="590.0" y="325" width="104.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="593.01" y="335.5" >posix.close</text>
</g>
<g >
<title>__kmem_cache_alloc_node (29,285,449 samples, 0.14%)</title><rect x="539.0" y="181" width="1.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="541.96" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (4,479,428,171 samples, 20.96%)</title><rect x="316.7" y="245" width="247.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="319.72" y="255.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>complete_walk (30,741,224 samples, 0.14%)</title><rect x="869.4" y="149" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="872.40" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (61,403,934 samples, 0.29%)</title><rect x="48.5" y="325" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="51.52" y="335.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (62,598,938 samples, 0.29%)</title><rect x="1098.6" y="245" width="3.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1101.60" y="255.5" ></text>
</g>
<g >
<title>mem.eqlBytes (1,034,732,756 samples, 4.84%)</title><rect x="141.6" y="293" width="57.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="144.63" y="303.5" >mem.eq..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="261" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1187.17" y="271.5" ></text>
</g>
<g >
<title>ext4_readdir (3,794,564,473 samples, 17.76%)</title><rect x="334.8" y="213" width="209.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="337.76" y="223.5" >ext4_readdir</text>
</g>
<g >
<title>scheduler_tick (17,761,995 samples, 0.08%)</title><rect x="220.2" y="165" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="223.25" y="175.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (10,394,462 samples, 0.05%)</title><rect x="19.2" y="341" width="0.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="22.23" y="351.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (10,394,462 samples, 0.05%)</title><rect x="19.2" y="325" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="22.23" y="335.5" ></text>
</g>
<g >
<title>alloc_fd (48,049,167 samples, 0.22%)</title><rect x="829.7" y="181" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="832.71" y="191.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (2,784,256,867 samples, 13.03%)</title><rect x="374.1" y="197" width="153.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="377.11" y="207.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (158,821,542 samples, 0.74%)</title><rect x="28.0" y="357" width="8.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="31.05" y="367.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (1,534,535,713 samples, 7.18%)</title><rect x="221.2" y="277" width="84.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="224.23" y="287.5" >mem.index..</text>
</g>
<g >
<title>[unknown] (12,299,261 samples, 0.06%)</title><rect x="964.1" y="101" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="967.10" y="111.5" ></text>
</g>
<g >
<title>update_process_times (31,300,504 samples, 0.15%)</title><rect x="344.3" y="85" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="347.26" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,027,250 samples, 0.08%)</title><rect x="137.7" y="293" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="140.67" y="303.5" ></text>
</g>
<g >
<title>__put_user_8 (51,143,413 samples, 0.24%)</title><rect x="327.1" y="229" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="330.11" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (44,187,097 samples, 0.21%)</title><rect x="464.8" y="85" width="2.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="467.84" y="95.5" ></text>
</g>
<g >
<title>ext4_map_blocks (7,431,898 samples, 0.03%)</title><rect x="377.7" y="117" width="0.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="380.73" y="127.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (25,834,513 samples, 0.12%)</title><rect x="866.3" y="117" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="869.27" y="127.5" ></text>
</g>
<g >
<title>verify_dirent_name (92,076,207 samples, 0.43%)</title><rect x="369.0" y="165" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="372.03" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="133" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1026.02" y="143.5" ></text>
</g>
<g >
<title>mutex_unlock (52,571,556 samples, 0.25%)</title><rect x="561.2" y="229" width="2.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="564.15" y="239.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (88,606,743 samples, 0.41%)</title><rect x="976.4" y="133" width="4.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="979.36" y="143.5" ></text>
</g>
<g >
<title>___slab_alloc (10,254,831 samples, 0.05%)</title><rect x="859.4" y="117" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="862.41" y="127.5" ></text>
</g>
<g >
<title>handle_edge_irq (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="149" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1026.35" y="159.5" ></text>
</g>
<g >
<title>__find_get_block (467,530,403 samples, 2.19%)</title><rect x="395.5" y="101" width="25.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="398.54" y="111.5" >_..</text>
</g>
<g >
<title>__fsnotify_parent (5,610,330 samples, 0.03%)</title><rect x="331.9" y="213" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="334.90" y="223.5" ></text>
</g>
<g >
<title>fsnotify (45,046,876 samples, 0.21%)</title><rect x="937.8" y="117" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="940.83" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,503,180,942 samples, 21.07%)</title><rect x="316.7" y="261" width="248.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="319.72" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>migrate_disable (18,606,211 samples, 0.09%)</title><rect x="961.4" y="69" width="1.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="964.35" y="79.5" ></text>
</g>
<g >
<title>up_read (90,401,643 samples, 0.42%)</title><rect x="556.2" y="213" width="5.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="559.16" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,007,838 samples, 0.06%)</title><rect x="539.9" y="165" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="542.91" y="175.5" ></text>
</g>
<g >
<title>rcu_core (17,027,250 samples, 0.08%)</title><rect x="137.7" y="245" width="0.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="140.67" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (71,881,268 samples, 0.34%)</title><rect x="57.2" y="325" width="4.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="60.20" y="335.5" ></text>
</g>
<g >
<title>iterate_dir (4,187,639,815 samples, 19.60%)</title><rect x="329.9" y="229" width="231.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="332.93" y="239.5" >iterate_dir</text>
</g>
<g >
<title>bpf_get_current_cgroup_id (43,612,596 samples, 0.20%)</title><rect x="952.5" y="69" width="2.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="955.52" y="79.5" ></text>
</g>
<g >
<title>ext4_getblk (1,299,296,998 samples, 6.08%)</title><rect x="395.5" y="133" width="71.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="398.54" y="143.5" >ext4_get..</text>
</g>
<g >
<title>fs.Dir.Walker.next (19,292,386,395 samples, 90.27%)</title><rect x="36.8" y="357" width="1065.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="39.82" y="367.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__memcpy (137,942,236 samples, 0.65%)</title><rect x="491.5" y="149" width="7.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="494.47" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,917,423 samples, 0.07%)</title><rect x="643.2" y="197" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="646.16" y="207.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (291,074,401 samples, 1.36%)</title><rect x="289.9" y="261" width="16.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="292.88" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (87,484,579 samples, 0.41%)</title><rect x="675.5" y="245" width="4.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="678.53" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (106,076,705 samples, 0.50%)</title><rect x="10.0" y="421" width="5.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__fget_light (9,184,264 samples, 0.04%)</title><rect x="988.5" y="133" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="991.53" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (10,394,462 samples, 0.05%)</title><rect x="19.2" y="421" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="22.23" y="431.5" ></text>
</g>
<g >
<title>lockref_put_return (50,647,920 samples, 0.24%)</title><rect x="989.4" y="117" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="992.38" y="127.5" ></text>
</g>
<g >
<title>__rcu_read_lock (16,641,574 samples, 0.08%)</title><rect x="960.4" y="69" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="963.43" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="245" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1187.17" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,508,614,973 samples, 7.06%)</title><rect x="592.2" y="245" width="83.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="595.23" y="255.5" >__x64_sys..</text>
</g>
<g >
<title>ext4_es_lookup_extent (7,431,898 samples, 0.03%)</title><rect x="377.7" y="101" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="380.73" y="111.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (4,441,314,095 samples, 20.78%)</title><rect x="795.3" y="325" width="245.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="798.35" y="335.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>perf_event_task_tick (6,619,143 samples, 0.03%)</title><rect x="51.5" y="149" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="54.54" y="159.5" ></text>
</g>
<g >
<title>mntput_no_expire (13,046,034 samples, 0.06%)</title><rect x="662.0" y="213" width="0.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="664.97" y="223.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7460 (44,811,333 samples, 0.21%)</title><rect x="287.4" y="261" width="2.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="290.41" y="271.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (61,552,317 samples, 0.29%)</title><rect x="954.9" y="69" width="3.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="957.93" y="79.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (1,516,797,485 samples, 7.10%)</title><rect x="1106.2" y="325" width="83.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1109.25" y="335.5" >mem.index..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (30,472,773 samples, 0.14%)</title><rect x="61.2" y="325" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="64.17" y="335.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (12,718,429 samples, 0.06%)</title><rect x="589.3" y="325" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="592.30" y="335.5" ></text>
</g>
<g >
<title>mutex_lock (37,580,526 samples, 0.18%)</title><rect x="325.0" y="213" width="2.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="328.03" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (16,814,872 samples, 0.08%)</title><rect x="865.3" y="69" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="868.34" y="79.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="117" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1026.02" y="127.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (75,222,044 samples, 0.35%)</title><rect x="862.1" y="117" width="4.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="865.11" y="127.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (7,567,449 samples, 0.04%)</title><rect x="306.9" y="309" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="309.88" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (39,113,723 samples, 0.18%)</title><rect x="810.4" y="261" width="2.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="813.38" y="271.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (10,035,158 samples, 0.05%)</title><rect x="588.7" y="325" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="591.75" y="335.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8493 (5,936,685 samples, 0.03%)</title><rect x="287.1" y="245" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="290.08" y="255.5" ></text>
</g>
<g >
<title>search_name_run (21,370,867,719 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >search_name_run</text>
</g>
<g >
<title>kmem_cache_free (87,689,188 samples, 0.41%)</title><rect x="655.4" y="213" width="4.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="658.44" y="223.5" ></text>
</g>
<g >
<title>do_group_exit (10,394,462 samples, 0.05%)</title><rect x="19.2" y="405" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="22.23" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (31,300,504 samples, 0.15%)</title><rect x="344.3" y="133" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="347.26" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (106,980,993 samples, 0.50%)</title><rect x="695.3" y="325" width="5.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="698.28" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (16,914,605 samples, 0.08%)</title><rect x="1184.2" y="197" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1187.17" y="207.5" ></text>
</g>
<g >
<title>path_openat (2,739,962,363 samples, 12.82%)</title><rect x="842.5" y="165" width="151.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="845.54" y="175.5" >path_openat</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="149" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1026.02" y="159.5" ></text>
</g>
<g >
<title>inode_query_iversion (30,496,407 samples, 0.14%)</title><rect x="533.6" y="197" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="536.64" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (29,415,888 samples, 0.14%)</title><rect x="701.2" y="325" width="1.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="704.19" y="335.5" ></text>
</g>
<g >
<title>is_dx_dir (33,316,804 samples, 0.16%)</title><rect x="535.3" y="197" width="1.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="538.33" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,543,595 samples, 0.08%)</title><rect x="21.9" y="277" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="24.95" y="287.5" ></text>
</g>
<g >
<title>migrate_enable (6,032,535 samples, 0.03%)</title><rect x="962.4" y="69" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="965.38" y="79.5" ></text>
</g>
<g >
<title>mod_memcg_state (9,990,990 samples, 0.05%)</title><rect x="866.8" y="85" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="869.81" y="95.5" ></text>
</g>
<g >
<title>mem.eqlBytes (1,158,199,884 samples, 5.42%)</title><rect x="1121.2" y="293" width="63.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1124.16" y="303.5" >mem.eql..</text>
</g>
<g >
<title>__mod_memcg_state (9,990,990 samples, 0.05%)</title><rect x="866.8" y="69" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="869.81" y="79.5" ></text>
</g>
<g >
<title>ttwu_do_activate (14,439,890 samples, 0.07%)</title><rect x="121.1" y="245" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="124.08" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,596,099,552 samples, 7.47%)</title><rect x="592.2" y="277" width="88.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="595.23" y="287.5" >entry_SYSC..</text>
</g>
<g >
<title>try_charge_memcg (5,941,830 samples, 0.03%)</title><rect x="867.4" y="101" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="870.37" y="111.5" ></text>
</g>
<g >
<title>locks_remove_posix (36,239,036 samples, 0.17%)</title><rect x="673.5" y="213" width="2.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="676.53" y="223.5" ></text>
</g>
<g >
<title>ext4_bread (7,431,898 samples, 0.03%)</title><rect x="377.7" y="149" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="380.73" y="159.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (16,812,007 samples, 0.08%)</title><rect x="306.0" y="277" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="308.96" y="287.5" ></text>
</g>
<g >
<title>update_process_times (6,619,143 samples, 0.03%)</title><rect x="51.5" y="181" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="54.54" y="191.5" ></text>
</g>
<g >
<title>step_into (6,331,952 samples, 0.03%)</title><rect x="989.0" y="149" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="992.03" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,393,668,803 samples, 6.52%)</title><rect x="705.4" y="325" width="77.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="708.44" y="335.5" >compiler..</text>
</g>
<g >
<title>memcg_account_kmem (9,990,990 samples, 0.05%)</title><rect x="866.8" y="101" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="869.81" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,761,995 samples, 0.08%)</title><rect x="220.2" y="213" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="223.25" y="223.5" ></text>
</g>
<g >
<title>handle_softirqs (17,027,250 samples, 0.08%)</title><rect x="137.7" y="261" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="140.67" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (31,300,504 samples, 0.15%)</title><rect x="344.3" y="197" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="347.26" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (18,600,532 samples, 0.09%)</title><rect x="856.4" y="101" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="859.36" y="111.5" ></text>
</g>
<g >
<title>os.linux.close (1,829,856,436 samples, 8.56%)</title><rect x="590.0" y="309" width="101.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="593.01" y="319.5" >os.linux.close</text>
</g>
<g >
<title>kfree (45,792,846 samples, 0.21%)</title><rect x="648.5" y="181" width="2.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="651.46" y="191.5" ></text>
</g>
<g >
<title>start._start (21,193,242,889 samples, 99.17%)</title><rect x="19.8" y="453" width="1170.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="22.81" y="463.5" >start._start</text>
</g>
<g >
<title>filp_flush (103,396,947 samples, 0.48%)</title><rect x="669.8" y="229" width="5.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="672.82" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (31,300,504 samples, 0.15%)</title><rect x="344.3" y="117" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="347.26" y="127.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,299,296,998 samples, 6.08%)</title><rect x="395.5" y="165" width="71.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="398.54" y="175.5" >__ext4_r..</text>
</g>
<g >
<title>kmem_cache_alloc (108,498,267 samples, 0.51%)</title><rect x="1005.2" y="165" width="6.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1008.24" y="175.5" ></text>
</g>
<g >
<title>rcu_do_batch (5,931,254 samples, 0.03%)</title><rect x="1023.0" y="69" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1026.02" y="79.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (9,381,233 samples, 0.04%)</title><rect x="219.7" y="309" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="222.73" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,989,473 samples, 0.03%)</title><rect x="864.6" y="101" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="867.57" y="111.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (17,919,787 samples, 0.08%)</title><rect x="1080.9" y="309" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1083.94" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (23,752,771 samples, 0.11%)</title><rect x="564.1" y="245" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="567.05" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (399,720,097 samples, 1.87%)</title><rect x="565.4" y="277" width="22.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="568.37" y="287.5" >e..</text>
</g>
<g >
<title>task_work_run (6,976,070 samples, 0.03%)</title><rect x="565.0" y="213" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="567.98" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (4,289,099,774 samples, 20.07%)</title><rect x="803.8" y="309" width="236.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="806.75" y="319.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>syscall_return_via_sysret (52,986,968 samples, 0.25%)</title><rect x="1037.6" y="245" width="3.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1040.65" y="255.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (472,698,705 samples, 2.21%)</title><rect x="501.7" y="149" width="26.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="504.75" y="159.5" >_..</text>
</g>
<g >
<title>__fdget_pos (144,049,836 samples, 0.67%)</title><rect x="319.2" y="229" width="7.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="322.15" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,439,890 samples, 0.07%)</title><rect x="121.1" y="309" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="124.08" y="319.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (17,027,250 samples, 0.08%)</title><rect x="137.7" y="213" width="0.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="140.67" y="223.5" ></text>
</g>
<g >
<title>__common_interrupt (6,358,041 samples, 0.03%)</title><rect x="1023.3" y="165" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1026.35" y="175.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (44,690,001 samples, 0.21%)</title><rect x="997.2" y="181" width="2.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1000.17" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,394,462 samples, 0.05%)</title><rect x="19.2" y="453" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="22.23" y="463.5" ></text>
</g>
<g >
<title>__filemap_get_folio (104,538,732 samples, 0.49%)</title><rect x="407.5" y="85" width="5.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="410.49" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (16,919,249 samples, 0.08%)</title><rect x="670.2" y="197" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="673.15" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (6,619,143 samples, 0.03%)</title><rect x="51.5" y="133" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="54.54" y="143.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (31,320,312 samples, 0.15%)</title><rect x="51.9" y="341" width="1.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="54.91" y="351.5" ></text>
</g>
</g>
</svg>
