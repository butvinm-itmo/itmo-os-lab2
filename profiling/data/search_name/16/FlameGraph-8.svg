<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>mem.sliceTo__anon_7548 (28,909,122 samples, 0.19%)</title><rect x="596.3" y="357" width="2.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="599.33" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,965,827 samples, 0.05%)</title><rect x="543.8" y="181" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="546.80" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="357" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.88" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,935,552 samples, 0.10%)</title><rect x="111.2" y="325" width="1.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="114.24" y="335.5" ></text>
</g>
<g >
<title>update_irq_load_avg (12,186,069 samples, 0.08%)</title><rect x="209.2" y="165" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="212.18" y="175.5" ></text>
</g>
<g >
<title>ext4_map_blocks (293,157,733 samples, 1.93%)</title><rect x="434.7" y="149" width="22.8" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="437.68" y="159.5" >e..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (19,320,809 samples, 0.13%)</title><rect x="698.3" y="341" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="701.27" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (162,841,570 samples, 1.07%)</title><rect x="31.0" y="389" width="12.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="33.97" y="399.5" ></text>
</g>
<g >
<title>do_vmi_munmap (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="69" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.88" y="79.5" ></text>
</g>
<g >
<title>handle_softirqs (6,526,988 samples, 0.04%)</title><rect x="1172.4" y="261" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1175.35" y="271.5" ></text>
</g>
<g >
<title>complete_walk (43,681,021 samples, 0.29%)</title><rect x="863.4" y="181" width="3.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="866.43" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (845,266,251 samples, 5.57%)</title><rect x="608.2" y="293" width="65.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="611.21" y="303.5" >do_sysc..</text>
</g>
<g >
<title>array_list.addOrOom (22,622,567 samples, 0.15%)</title><rect x="109.5" y="357" width="1.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="112.48" y="367.5" ></text>
</g>
<g >
<title>mem.eqlBytes (957,807,035 samples, 6.31%)</title><rect x="1099.5" y="325" width="74.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1102.47" y="335.5" >mem.eqlB..</text>
</g>
<g >
<title>__hrtimer_run_queues (6,965,827 samples, 0.05%)</title><rect x="543.8" y="165" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="546.80" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,919,357 samples, 0.05%)</title><rect x="224.9" y="293" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="227.88" y="303.5" ></text>
</g>
<g >
<title>bpf_lsm_file_free_security (14,798,017 samples, 0.10%)</title><rect x="654.2" y="229" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="657.22" y="239.5" ></text>
</g>
<g >
<title>dnotify_flush (94,892,899 samples, 0.63%)</title><rect x="659.0" y="245" width="7.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="661.98" y="255.5" ></text>
</g>
<g >
<title>__put_user_8 (30,131,885 samples, 0.20%)</title><rect x="312.3" y="261" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="315.32" y="271.5" ></text>
</g>
<g >
<title>mas_walk (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="37" width="1.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.88" y="47.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (44,262,680 samples, 0.29%)</title><rect x="1018.7" y="245" width="3.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1021.69" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,723,680,771 samples, 17.95%)</title><rect x="811.5" y="277" width="211.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="814.47" y="287.5" >entry_SYSCALL_64_after_hwfr..</text>
</g>
<g >
<title>tick_sched_handle (14,935,552 samples, 0.10%)</title><rect x="111.2" y="261" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="114.24" y="271.5" ></text>
</g>
<g >
<title>rb_next (35,483,169 samples, 0.23%)</title><rect x="535.2" y="229" width="2.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="538.21" y="239.5" ></text>
</g>
<g >
<title>may_open (30,595,534 samples, 0.20%)</title><rect x="947.1" y="181" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="950.06" y="191.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (21,333,806 samples, 0.14%)</title><rect x="835.7" y="133" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="838.69" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,186,069 samples, 0.08%)</title><rect x="209.2" y="277" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="212.18" y="287.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (20,711,640 samples, 0.14%)</title><rect x="286.5" y="309" width="1.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="289.51" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,473,748 samples, 0.13%)</title><rect x="1172.4" y="293" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1175.35" y="303.5" ></text>
</g>
<g >
<title>search_name_runner.main (15,000,602,266 samples, 98.85%)</title><rect x="23.6" y="421" width="1166.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.63" y="431.5" >search_name_runner.main</text>
</g>
<g >
<title>__hrtimer_run_queues (7,577,345 samples, 0.05%)</title><rect x="331.8" y="165" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="334.76" y="175.5" ></text>
</g>
<g >
<title>x64_sys_call (6,323,851 samples, 0.04%)</title><rect x="673.4" y="277" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="676.45" y="287.5" ></text>
</g>
<g >
<title>search_name.searchName (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="405" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.88" y="415.5" ></text>
</g>
<g >
<title>update_process_times (7,577,345 samples, 0.05%)</title><rect x="331.8" y="117" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="334.76" y="127.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (76,716,493 samples, 0.51%)</title><rect x="102.0" y="373" width="6.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="105.01" y="383.5" ></text>
</g>
<g >
<title>hook_file_open (51,546,960 samples, 0.34%)</title><rect x="922.5" y="149" width="4.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="925.49" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,280,189 samples, 0.05%)</title><rect x="414.5" y="85" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="417.52" y="95.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (113,388,431 samples, 0.75%)</title><rect x="926.5" y="181" width="8.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="929.50" y="191.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (13,954,697 samples, 0.09%)</title><rect x="965.5" y="213" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="968.52" y="223.5" ></text>
</g>
<g >
<title>os.linux.close (1,039,294,787 samples, 6.85%)</title><rect x="602.3" y="341" width="80.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="605.26" y="351.5" >os.linux...</text>
</g>
<g >
<title>free_rb_tree_fname (71,628,361 samples, 0.47%)</title><rect x="521.5" y="229" width="5.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="524.55" y="239.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (9,421,978 samples, 0.06%)</title><rect x="616.2" y="245" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="619.19" y="255.5" ></text>
</g>
<g >
<title>__memset (21,756,818 samples, 0.14%)</title><rect x="848.0" y="149" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="851.01" y="159.5" ></text>
</g>
<g >
<title>__kmem_cache_free (20,484,688 samples, 0.13%)</title><rect x="625.4" y="229" width="1.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="628.38" y="239.5" ></text>
</g>
<g >
<title>update_process_times (12,186,069 samples, 0.08%)</title><rect x="209.2" y="213" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="212.18" y="223.5" ></text>
</g>
<g >
<title>inode_permission (26,392,474 samples, 0.17%)</title><rect x="931.7" y="165" width="2.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="934.65" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="165" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1093.32" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,777,751 samples, 0.08%)</title><rect x="533.1" y="197" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="536.14" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,238,231 samples, 0.09%)</title><rect x="921.4" y="101" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="924.38" y="111.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (7,805,378 samples, 0.05%)</title><rect x="881.9" y="101" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="884.89" y="111.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (99,075,192 samples, 0.65%)</title><rect x="237.1" y="277" width="7.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="240.14" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (143,971,548 samples, 0.95%)</title><rect x="1006.1" y="165" width="11.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1009.09" y="175.5" ></text>
</g>
<g >
<title>rcu_core (6,939,695 samples, 0.05%)</title><rect x="957.0" y="101" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="960.03" y="111.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (22,596,349 samples, 0.15%)</title><rect x="846.3" y="133" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="849.26" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,919,357 samples, 0.05%)</title><rect x="224.9" y="229" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="227.88" y="239.5" ></text>
</g>
<g >
<title>os.linux.mmap (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="181" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1191.88" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (3,477,560,260 samples, 22.92%)</title><rect x="770.0" y="357" width="270.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="773.01" y="367.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>___slab_alloc (7,736,464 samples, 0.05%)</title><rect x="476.5" y="149" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="479.47" y="159.5" ></text>
</g>
<g >
<title>update_process_times (6,943,259 samples, 0.05%)</title><rect x="777.5" y="229" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="780.46" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (48,927,476 samples, 0.32%)</title><rect x="857.4" y="149" width="3.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="860.40" y="159.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (59,668,661 samples, 0.39%)</title><rect x="529.5" y="213" width="4.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="532.49" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (44,554,615 samples, 0.29%)</title><rect x="241.4" y="245" width="3.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="244.38" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,919,357 samples, 0.05%)</title><rect x="224.9" y="245" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="227.88" y="255.5" ></text>
</g>
<g >
<title>update_process_times (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="197" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1175.86" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (6,919,357 samples, 0.05%)</title><rect x="224.9" y="149" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="227.88" y="159.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (24,591,198 samples, 0.16%)</title><rect x="519.6" y="197" width="1.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="522.63" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (6,943,259 samples, 0.05%)</title><rect x="777.5" y="181" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="780.46" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="133" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1191.88" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (229,201,699 samples, 1.51%)</title><rect x="752.2" y="357" width="17.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="755.18" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,971,556 samples, 0.04%)</title><rect x="533.7" y="181" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="536.66" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,577,345 samples, 0.05%)</title><rect x="331.8" y="133" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="334.76" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (56,976,664 samples, 0.38%)</title><rect x="571.8" y="261" width="4.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="574.76" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (248,820,731 samples, 1.64%)</title><rect x="467.5" y="165" width="19.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="470.50" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="293" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1093.32" y="303.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (5,604,097 samples, 0.04%)</title><rect x="1077.2" y="261" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1080.20" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13,754,551 samples, 0.09%)</title><rect x="456.4" y="101" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="459.40" y="111.5" ></text>
</g>
<g >
<title>debug.assert (7,809,142 samples, 0.05%)</title><rect x="101.4" y="341" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="104.40" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.close (1,134,380,498 samples, 7.47%)</title><rect x="598.6" y="373" width="88.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="601.58" y="383.5" >fs.Dir.close</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (25,090,167 samples, 0.17%)</title><rect x="594.4" y="341" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="597.38" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (41,928,642 samples, 0.28%)</title><rect x="699.8" y="373" width="3.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="702.77" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,039,294,787 samples, 6.85%)</title><rect x="602.3" y="325" width="80.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="605.26" y="335.5" >os.linux...</text>
</g>
<g >
<title>task_tick_fair (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="197" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1093.32" y="207.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (195,752,999 samples, 1.29%)</title><rect x="442.3" y="133" width="15.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="445.25" y="143.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,930,803 samples, 0.04%)</title><rect x="856.3" y="117" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="859.35" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,683,313,341 samples, 17.68%)</title><rect x="814.6" y="261" width="208.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="817.61" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,388,498 samples, 0.08%)</title><rect x="1017.8" y="245" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1020.81" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,186,069 samples, 0.08%)</title><rect x="209.2" y="309" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="212.18" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="245" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1093.32" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (51,353,639 samples, 0.34%)</title><rect x="1041.5" y="341" width="4.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1044.53" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (1,382,882,511 samples, 9.11%)</title><rect x="1081.4" y="357" width="107.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1084.36" y="367.5" >mem.indexOfPo..</text>
</g>
<g >
<title>note_gp_changes (14,316,431 samples, 0.09%)</title><rect x="606.6" y="229" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="609.57" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,316,431 samples, 0.09%)</title><rect x="606.6" y="309" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="609.57" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6,943,259 samples, 0.05%)</title><rect x="777.5" y="197" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="780.46" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (2,974,084,585 samples, 19.60%)</title><rect x="809.2" y="293" width="231.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="812.15" y="303.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>__find_get_block (654,407,310 samples, 4.31%)</title><rect x="383.8" y="133" width="50.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="386.79" y="143.5" >__fin..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (61,778,053 samples, 0.41%)</title><rect x="668.6" y="277" width="4.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="671.64" y="287.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (36,661,039 samples, 0.24%)</title><rect x="454.6" y="117" width="2.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="457.62" y="127.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (44,375,141 samples, 0.29%)</title><rect x="890.2" y="101" width="3.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="893.23" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,965,827 samples, 0.05%)</title><rect x="543.8" y="133" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="546.80" y="143.5" ></text>
</g>
<g >
<title>start.callMain (15,000,602,266 samples, 98.85%)</title><rect x="23.6" y="437" width="1166.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="26.63" y="447.5" >start.callMain</text>
</g>
<g >
<title>__rcu_read_lock (8,784,489 samples, 0.06%)</title><rect x="960.3" y="149" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="963.31" y="159.5" ></text>
</g>
<g >
<title>do_dentry_open (767,450,348 samples, 5.06%)</title><rect x="866.8" y="181" width="59.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="869.82" y="191.5" >do_den..</text>
</g>
<g >
<title>mem.indexOf__anon_3903 (1,416,736,440 samples, 9.34%)</title><rect x="1078.7" y="389" width="110.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1081.73" y="399.5" >mem.indexOf__..</text>
</g>
<g >
<title>mutex_lock (9,080,131 samples, 0.06%)</title><rect x="311.6" y="245" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="314.61" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,965,827 samples, 0.05%)</title><rect x="543.8" y="229" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="546.80" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,316,431 samples, 0.09%)</title><rect x="606.6" y="293" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="609.57" y="303.5" ></text>
</g>
<g >
<title>update_process_times (14,935,552 samples, 0.10%)</title><rect x="111.2" y="245" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="114.24" y="255.5" ></text>
</g>
<g >
<title>[unknown] (161,481,125 samples, 1.06%)</title><rect x="881.1" y="117" width="12.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="884.12" y="127.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (91,543,305 samples, 0.60%)</title><rect x="10.0" y="469" width="7.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>xas_load (172,232,264 samples, 1.13%)</title><rect x="415.1" y="85" width="13.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="418.09" y="95.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (250,429,986 samples, 1.65%)</title><rect x="788.0" y="293" width="19.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="790.95" y="303.5" ></text>
</g>
<g >
<title>generic_permission (26,392,474 samples, 0.17%)</title><rect x="931.7" y="149" width="2.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="934.65" y="159.5" ></text>
</g>
<g >
<title>dx_probe (12,884,703 samples, 0.08%)</title><rect x="364.3" y="213" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="367.27" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (6,526,988 samples, 0.04%)</title><rect x="1172.4" y="245" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1175.35" y="255.5" ></text>
</g>
<g >
<title>mntput (25,830,190 samples, 0.17%)</title><rect x="648.0" y="245" width="2.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="651.02" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (39,734,063 samples, 0.26%)</title><rect x="85.6" y="357" width="3.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="88.57" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,943,259 samples, 0.05%)</title><rect x="777.5" y="245" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="780.46" y="255.5" ></text>
</g>
<g >
<title>put_cpu_partial (7,244,221 samples, 0.05%)</title><rect x="638.0" y="213" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="640.97" y="223.5" ></text>
</g>
<g >
<title>debug.assert (6,998,549 samples, 0.05%)</title><rect x="107.4" y="357" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="110.43" y="367.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (298,859,298 samples, 1.97%)</title><rect x="496.4" y="181" width="23.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="499.40" y="191.5" >_..</text>
</g>
<g >
<title>os.linux.getdents64 (3,918,405,734 samples, 25.82%)</title><rect x="289.7" y="341" width="304.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="292.70" y="351.5" >os.linux.getdents64</text>
</g>
<g >
<title>__ext4_read_dirblock (12,884,703 samples, 0.08%)</title><rect x="364.3" y="197" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="367.27" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (14,935,552 samples, 0.10%)</title><rect x="111.2" y="277" width="1.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="114.24" y="287.5" ></text>
</g>
<g >
<title>inode_permission (14,855,913 samples, 0.10%)</title><rect x="947.1" y="165" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="950.06" y="175.5" ></text>
</g>
<g >
<title>__check_object_size (166,444,032 samples, 1.10%)</title><rect x="1004.3" y="181" width="13.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1007.34" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,935,552 samples, 0.10%)</title><rect x="111.2" y="309" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="114.24" y="319.5" ></text>
</g>
<g >
<title>make_vfsuid (20,621,188 samples, 0.14%)</title><rect x="563.6" y="213" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="566.62" y="223.5" ></text>
</g>
<g >
<title>strncpy_from_user (280,219,948 samples, 1.85%)</title><rect x="995.5" y="197" width="21.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="998.50" y="207.5" >s..</text>
</g>
<g >
<title>touch_atime (56,023,922 samples, 0.37%)</title><rect x="560.9" y="245" width="4.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="563.87" y="255.5" ></text>
</g>
<g >
<title>debug.assert (6,833,552 samples, 0.05%)</title><rect x="179.1" y="373" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="182.11" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,255,972 samples, 0.03%)</title><rect x="302.0" y="309" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="304.98" y="319.5" ></text>
</g>
<g >
<title>lockref_put_return (16,777,415 samples, 0.11%)</title><rect x="619.1" y="229" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="622.12" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (6,899,801 samples, 0.05%)</title><rect x="81.8" y="341" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="84.80" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (5,387,947,849 samples, 35.50%)</title><rect x="179.6" y="373" width="419.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="182.64" y="383.5" >fs.Dir.Iterator__struct_3782.next</text>
</g>
<g >
<title>tick_sched_timer (5,255,972 samples, 0.03%)</title><rect x="302.0" y="229" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="304.98" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="325" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1093.32" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (354,479,001 samples, 2.34%)</title><rect x="967.9" y="197" width="27.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="970.93" y="207.5" >k..</text>
</g>
<g >
<title>start.callMainWithArgs (15,000,602,266 samples, 98.85%)</title><rect x="23.6" y="453" width="1166.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="26.63" y="463.5" >start.callMainWithArgs</text>
</g>
<g >
<title>fsnotify (7,686,231 samples, 0.05%)</title><rect x="879.3" y="149" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="882.33" y="159.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (36,458,878 samples, 0.24%)</title><rect x="919.7" y="117" width="2.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="922.65" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,939,695 samples, 0.05%)</title><rect x="957.0" y="149" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="960.03" y="159.5" ></text>
</g>
<g >
<title>[[x_tables]] (531,999,223 samples, 3.51%)</title><rect x="881.1" y="133" width="41.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="884.12" y="143.5" >[[x..</text>
</g>
<g >
<title>__hrtimer_run_queues (6,943,259 samples, 0.05%)</title><rect x="777.5" y="277" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="780.46" y="287.5" ></text>
</g>
<g >
<title>memchr (33,080,561 samples, 0.22%)</title><rect x="355.3" y="181" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="358.26" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,943,259 samples, 0.05%)</title><rect x="777.5" y="261" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="780.46" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,965,827 samples, 0.05%)</title><rect x="543.8" y="149" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="546.80" y="159.5" ></text>
</g>
<g >
<title>putname (6,698,481 samples, 0.04%)</title><rect x="1017.3" y="213" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1020.29" y="223.5" ></text>
</g>
<g >
<title>ext4_getblk (969,825,276 samples, 6.39%)</title><rect x="382.1" y="165" width="75.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="385.06" y="175.5" >ext4_get..</text>
</g>
<g >
<title>update_process_times (6,919,357 samples, 0.05%)</title><rect x="224.9" y="197" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="227.88" y="207.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (7,670,763 samples, 0.05%)</title><rect x="524.7" y="197" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="527.73" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (808,580,451 samples, 5.33%)</title><rect x="113.9" y="373" width="62.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="116.95" y="383.5" >compil..</text>
</g>
<g >
<title>tick_sched_timer (7,577,345 samples, 0.05%)</title><rect x="331.8" y="149" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="334.76" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (44,224,154 samples, 0.29%)</title><rect x="23.6" y="405" width="3.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="26.63" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,146,312 samples, 0.05%)</title><rect x="956.5" y="165" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="959.48" y="175.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (14,265,048 samples, 0.09%)</title><rect x="861.2" y="149" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="864.20" y="159.5" ></text>
</g>
<g >
<title>mem.isAligned (6,880,003 samples, 0.05%)</title><rect x="246.0" y="293" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="248.98" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (10,651,050 samples, 0.07%)</title><rect x="683.1" y="341" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="686.07" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (5,255,972 samples, 0.03%)</title><rect x="302.0" y="245" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="304.98" y="255.5" ></text>
</g>
<g >
<title>debug.assert (26,758,558 samples, 0.18%)</title><rect x="235.1" y="293" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="238.06" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="213" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1093.32" y="223.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (144,093,944 samples, 0.95%)</title><rect x="369.7" y="197" width="11.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="372.75" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (13,369,661 samples, 0.09%)</title><rect x="43.6" y="389" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="46.64" y="399.5" ></text>
</g>
<g >
<title>ext4_bread (969,825,276 samples, 6.39%)</title><rect x="382.1" y="181" width="75.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="385.06" y="191.5" >ext4_bread</text>
</g>
<g >
<title>do_sys_openat2 (2,532,497,755 samples, 16.69%)</title><rect x="820.9" y="229" width="196.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="823.89" y="239.5" >do_sys_openat2</text>
</g>
<g >
<title>fsnotify_perm.part.0 (124,932,653 samples, 0.82%)</title><rect x="544.3" y="245" width="9.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="547.34" y="255.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (80,304,532 samples, 0.53%)</title><rect x="660.1" y="229" width="6.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="663.11" y="239.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (38,555,011 samples, 0.25%)</title><rect x="882.5" y="101" width="3.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="885.49" y="111.5" ></text>
</g>
<g >
<title>___slab_alloc (37,438,702 samples, 0.25%)</title><rect x="845.1" y="149" width="2.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="848.10" y="159.5" ></text>
</g>
<g >
<title>rb_first (13,956,356 samples, 0.09%)</title><rect x="534.1" y="229" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="537.13" y="239.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (14,934,631,691 samples, 98.41%)</title><rect x="27.6" y="405" width="1161.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="30.64" y="415.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>update_rt_rq_load_avg (6,526,988 samples, 0.04%)</title><rect x="1172.4" y="213" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1175.35" y="223.5" ></text>
</g>
<g >
<title>posix.close (1,064,566,025 samples, 7.01%)</title><rect x="602.3" y="357" width="82.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="605.26" y="367.5" >posix.close</text>
</g>
<g >
<title>valgrind.runningOnValgrind (5,604,097 samples, 0.04%)</title><rect x="1077.2" y="293" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1080.20" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27,312,757 samples, 0.18%)</title><rect x="15.0" y="453" width="2.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="17.99" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,577,345 samples, 0.05%)</title><rect x="331.8" y="229" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="334.76" y="239.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (157,991,590 samples, 1.04%)</title><rect x="627.0" y="229" width="12.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="629.97" y="239.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (7,926,607 samples, 0.05%)</title><rect x="224.3" y="325" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="227.27" y="335.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (135,917,687 samples, 0.90%)</title><rect x="509.1" y="165" width="10.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="512.07" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,919,357 samples, 0.05%)</title><rect x="224.9" y="277" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="227.88" y="287.5" ></text>
</g>
<g >
<title>iterate_dir (3,267,055,825 samples, 21.53%)</title><rect x="314.7" y="261" width="254.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="317.66" y="271.5" >iterate_dir</text>
</g>
<g >
<title>fs.Dir.openDir (4,831,768,165 samples, 31.84%)</title><rect x="703.0" y="373" width="375.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="706.03" y="383.5" >fs.Dir.openDir</text>
</g>
<g >
<title>filp_flush (124,286,542 samples, 0.82%)</title><rect x="659.0" y="261" width="9.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="661.98" y="271.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (8,081,414 samples, 0.05%)</title><rect x="560.2" y="229" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="563.24" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (5,255,972 samples, 0.03%)</title><rect x="302.0" y="261" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="304.98" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="229" width="1.0" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1175.86" y="239.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8551 (6,880,003 samples, 0.05%)</title><rect x="246.0" y="277" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="248.98" y="287.5" ></text>
</g>
<g >
<title>legitimize_links (14,521,933 samples, 0.10%)</title><rect x="865.7" y="149" width="1.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="868.69" y="159.5" ></text>
</g>
<g >
<title>update_process_times (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="229" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1093.32" y="239.5" ></text>
</g>
<g >
<title>do_mmap (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="101" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.88" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,558,578 samples, 0.07%)</title><rect x="484.3" y="149" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="487.30" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (96,523,690 samples, 0.64%)</title><rect x="91.7" y="357" width="7.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="94.68" y="367.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (14,876,435 samples, 0.10%)</title><rect x="846.9" y="117" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="849.86" y="127.5" ></text>
</g>
<g >
<title>try_to_unlazy (32,872,253 samples, 0.22%)</title><rect x="864.3" y="165" width="2.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="867.27" y="175.5" ></text>
</g>
<g >
<title>alloc_fd (22,080,826 samples, 0.15%)</title><rect x="820.9" y="213" width="1.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="823.89" y="223.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (21,869,362 samples, 0.14%)</title><rect x="633.5" y="197" width="1.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="636.48" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_8707 (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="293" width="1.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1191.88" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,186,069 samples, 0.08%)</title><rect x="209.2" y="261" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="212.18" y="271.5" ></text>
</g>
<g >
<title>terminate_walk (65,841,362 samples, 0.43%)</title><rect x="957.6" y="181" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="960.57" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,965,827 samples, 0.05%)</title><rect x="543.8" y="197" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="546.80" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (6,965,827 samples, 0.05%)</title><rect x="543.8" y="69" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="546.80" y="79.5" ></text>
</g>
<g >
<title>build_open_flags (27,488,849 samples, 0.18%)</title><rect x="822.6" y="213" width="2.1" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="825.61" y="223.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (60,930,908 samples, 0.40%)</title><rect x="885.5" y="101" width="4.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="888.49" y="111.5" ></text>
</g>
<g >
<title>_raw_read_lock (118,550,151 samples, 0.78%)</title><rect x="445.4" y="117" width="9.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="448.40" y="127.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (19,320,809 samples, 0.13%)</title><rect x="698.3" y="357" width="1.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="701.27" y="367.5" ></text>
</g>
<g >
<title>ext4_readdir (2,772,202,065 samples, 18.27%)</title><rect x="322.4" y="245" width="215.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="325.42" y="255.5" >ext4_readdir</text>
</g>
<g >
<title>htab_map_hash (7,805,378 samples, 0.05%)</title><rect x="881.9" y="85" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="884.89" y="95.5" ></text>
</g>
<g >
<title>fsnotify (59,822,401 samples, 0.39%)</title><rect x="549.4" y="229" width="4.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="552.40" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,577,345 samples, 0.05%)</title><rect x="331.8" y="181" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="334.76" y="191.5" ></text>
</g>
<g >
<title>update_rq_clock (7,577,345 samples, 0.05%)</title><rect x="331.8" y="85" width="0.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="334.76" y="95.5" ></text>
</g>
<g >
<title>psi_account_irqtime (14,935,552 samples, 0.10%)</title><rect x="111.2" y="213" width="1.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="114.24" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (67,934,336 samples, 0.45%)</title><rect x="83.4" y="373" width="5.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="86.38" y="383.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (412,404,431 samples, 2.72%)</title><rect x="1046.7" y="325" width="32.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1049.66" y="335.5" >me..</text>
</g>
<g >
<title>__call_rcu_common (71,486,207 samples, 0.47%)</title><rect x="611.4" y="261" width="5.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="614.36" y="271.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="389" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.88" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.walk (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1191.88" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (48,237,885 samples, 0.32%)</title><rect x="78.6" y="357" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="81.58" y="367.5" ></text>
</g>
<g >
<title>[unknown] (175,247,499 samples, 1.15%)</title><rect x="10.0" y="485" width="13.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (3,374,709,135 samples, 22.24%)</title><rect x="778.0" y="341" width="262.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="781.00" y="351.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>__hrtimer_run_queues (14,935,552 samples, 0.10%)</title><rect x="111.2" y="293" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="114.24" y="303.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (83,300,902 samples, 0.55%)</title><rect x="850.3" y="133" width="6.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="853.33" y="143.5" ></text>
</g>
<g >
<title>update_process_times (6,965,827 samples, 0.05%)</title><rect x="543.8" y="117" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="546.80" y="127.5" ></text>
</g>
<g >
<title>handle_softirqs (14,316,431 samples, 0.09%)</title><rect x="606.6" y="261" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="609.57" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,186,069 samples, 0.08%)</title><rect x="209.2" y="293" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="212.18" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (15,235,436 samples, 0.10%)</title><rect x="841.8" y="117" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="844.78" y="127.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (1,403,613,922 samples, 9.25%)</title><rect x="1079.7" y="373" width="109.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1082.75" y="383.5" >mem.indexOfPo..</text>
</g>
<g >
<title>path_init (104,549,784 samples, 0.69%)</title><rect x="949.4" y="181" width="8.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="952.44" y="191.5" ></text>
</g>
<g >
<title>os.linux.openat (2,996,293,586 samples, 19.74%)</title><rect x="807.4" y="309" width="233.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="810.43" y="319.5" >os.linux.openat</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (22,165,892 samples, 0.15%)</title><rect x="485.1" y="149" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="488.12" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,675,447 samples, 0.05%)</title><rect x="302.4" y="309" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="305.39" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="261" width="0.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1093.32" y="271.5" ></text>
</g>
<g >
<title>__srcu_read_lock (44,040,806 samples, 0.29%)</title><rect x="662.3" y="197" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="665.33" y="207.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (14,620,188 samples, 0.10%)</title><rect x="683.9" y="341" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="686.90" y="351.5" ></text>
</g>
<g >
<title>[[x_tables]] (29,780,554 samples, 0.20%)</title><rect x="809.2" y="277" width="2.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="812.15" y="287.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (6,572,524 samples, 0.04%)</title><rect x="948.9" y="149" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="951.93" y="159.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (5,604,097 samples, 0.04%)</title><rect x="1077.2" y="277" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1080.20" y="287.5" ></text>
</g>
<g >
<title>getname (17,077,748 samples, 0.11%)</title><rect x="966.6" y="213" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="969.61" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (6,965,827 samples, 0.05%)</title><rect x="543.8" y="101" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="546.80" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (3,427,248,630 samples, 22.58%)</title><rect x="305.3" y="277" width="266.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="308.27" y="287.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>__irq_exit_rcu (6,939,695 samples, 0.05%)</title><rect x="957.0" y="133" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="960.03" y="143.5" ></text>
</g>
<g >
<title>__fget_light (51,657,152 samples, 0.34%)</title><rect x="307.6" y="245" width="4.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="310.60" y="255.5" ></text>
</g>
<g >
<title>ext4_release_dir (249,265,348 samples, 1.64%)</title><rect x="620.4" y="245" width="19.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="623.42" y="255.5" ></text>
</g>
<g >
<title>security_inode_permission (15,739,621 samples, 0.10%)</title><rect x="948.2" y="165" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="951.22" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,971,556 samples, 0.04%)</title><rect x="533.7" y="165" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="536.66" y="175.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (167,029,647 samples, 1.10%)</title><rect x="686.8" y="373" width="13.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="689.78" y="383.5" ></text>
</g>
<g >
<title>inode_to_bdi (15,562,105 samples, 0.10%)</title><rect x="875.6" y="149" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="878.62" y="159.5" ></text>
</g>
<g >
<title>__memset (14,562,748 samples, 0.10%)</title><rect x="532.0" y="197" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="535.00" y="207.5" ></text>
</g>
<g >
<title>update_process_times (5,255,972 samples, 0.03%)</title><rect x="302.0" y="197" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="304.98" y="207.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (484,120,064 samples, 3.19%)</title><rect x="457.5" y="197" width="37.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="460.47" y="207.5" >ext..</text>
</g>
<g >
<title>kmem_cache_alloc (15,235,436 samples, 0.10%)</title><rect x="841.8" y="133" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="844.78" y="143.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (198,667,873 samples, 1.31%)</title><rect x="577.9" y="309" width="15.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="580.91" y="319.5" ></text>
</g>
<g >
<title>__getblk_gfp (654,407,310 samples, 4.31%)</title><rect x="383.8" y="149" width="50.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="386.79" y="159.5" >__get..</text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (5,451,273 samples, 0.04%)</title><rect x="1079.3" y="373" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1082.32" y="383.5" ></text>
</g>
<g >
<title>posix.openatZ (3,307,421,283 samples, 21.79%)</title><rect x="783.2" y="325" width="257.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="786.23" y="335.5" >posix.openatZ</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (124,778,245 samples, 0.82%)</title><rect x="89.5" y="373" width="9.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="92.48" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="341" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.88" y="351.5" ></text>
</g>
<g >
<title>up_read (44,602,636 samples, 0.29%)</title><rect x="565.2" y="245" width="3.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="568.22" y="255.5" ></text>
</g>
<g >
<title>__filemap_get_folio (12,884,703 samples, 0.08%)</title><rect x="364.3" y="117" width="1.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="367.27" y="127.5" ></text>
</g>
<g >
<title>verify_dirent_name (78,212,725 samples, 0.52%)</title><rect x="351.8" y="197" width="6.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="354.75" y="207.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (215,381,254 samples, 1.42%)</title><rect x="206.4" y="341" width="16.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="209.37" y="351.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (98,933,733 samples, 0.65%)</title><rect x="849.7" y="149" width="7.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="852.71" y="159.5" ></text>
</g>
<g >
<title>update_rq_clock (12,186,069 samples, 0.08%)</title><rect x="209.2" y="181" width="0.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="212.18" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (36,361,538 samples, 0.24%)</title><rect x="99.2" y="373" width="2.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="102.18" y="383.5" ></text>
</g>
<g >
<title>ext4_bread (12,884,703 samples, 0.08%)</title><rect x="364.3" y="181" width="1.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="367.27" y="191.5" ></text>
</g>
<g >
<title>filldir64 (298,077,754 samples, 1.96%)</title><rect x="334.7" y="213" width="23.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="337.66" y="223.5" >f..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,535,728,172 samples, 23.30%)</title><rect x="303.0" y="309" width="274.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="305.99" y="319.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>ext4_htree_fill_tree (2,105,494,280 samples, 13.87%)</title><rect x="357.8" y="229" width="163.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="360.83" y="239.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>fd_install (30,918,596 samples, 0.20%)</title><rect x="963.1" y="213" width="2.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="966.12" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (852,160,038 samples, 5.62%)</title><rect x="607.7" y="309" width="66.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="610.68" y="319.5" >entry_S..</text>
</g>
<g >
<title>ext4fs_dirhash (315,333,703 samples, 2.08%)</title><rect x="495.1" y="197" width="24.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="498.11" y="207.5" >e..</text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (514,354,382 samples, 3.39%)</title><rect x="246.5" y="293" width="40.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="249.51" y="303.5" >sim..</text>
</g>
<g >
<title>percpu_counter_add_batch (14,357,820 samples, 0.09%)</title><rect x="862.3" y="165" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="865.31" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (79,687,472 samples, 0.53%)</title><rect x="428.5" y="117" width="6.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="431.48" y="127.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (6,883,770 samples, 0.05%)</title><rect x="23.1" y="469" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="26.09" y="479.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (117,469,245 samples, 0.77%)</title><rect x="673.9" y="309" width="9.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="676.94" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (19,956,961 samples, 0.13%)</title><rect x="112.4" y="373" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="115.40" y="383.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (151,099,237 samples, 1.00%)</title><rect x="935.3" y="165" width="11.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="938.31" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,943,259 samples, 0.05%)</title><rect x="777.5" y="309" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="780.46" y="319.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (52,353,756 samples, 0.34%)</title><rect x="240.8" y="261" width="4.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="243.77" y="271.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (14,153,575 samples, 0.09%)</title><rect x="782.1" y="325" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="785.13" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="341" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1093.32" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,919,357 samples, 0.05%)</title><rect x="224.9" y="213" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="227.88" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,883,770 samples, 0.05%)</title><rect x="23.1" y="453" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.09" y="463.5" ></text>
</g>
<g >
<title>lookup_fast (151,099,237 samples, 1.00%)</title><rect x="935.3" y="181" width="11.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="938.31" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (56,862,947 samples, 0.37%)</title><rect x="108.0" y="373" width="4.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="110.98" y="383.5" ></text>
</g>
<g >
<title>__fget_light (48,601,647 samples, 0.32%)</title><rect x="952.7" y="165" width="3.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="955.70" y="175.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (41,220,256 samples, 0.27%)</title><rect x="219.9" y="325" width="3.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="222.91" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="309" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.88" y="319.5" ></text>
</g>
<g >
<title>start._start (15,000,602,266 samples, 98.85%)</title><rect x="23.6" y="485" width="1166.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="26.63" y="495.5" >start._start</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,496,126 samples, 0.14%)</title><rect x="1172.3" y="309" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1175.35" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2,568,236,332 samples, 16.92%)</title><rect x="818.1" y="245" width="199.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="821.11" y="255.5" >__x64_sys_openat</text>
</g>
<g >
<title>entry_SYSCALL_64 (250,429,986 samples, 1.65%)</title><rect x="788.0" y="277" width="19.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="790.95" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,935,552 samples, 0.10%)</title><rect x="111.2" y="341" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="114.24" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,943,259 samples, 0.05%)</title><rect x="777.5" y="325" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="780.46" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,919,357 samples, 0.05%)</title><rect x="224.9" y="261" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="227.88" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (595,477,202 samples, 3.92%)</title><rect x="705.9" y="357" width="46.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="708.88" y="367.5" >comp..</text>
</g>
<g >
<title>mem.eqlBytes (12,413,072 samples, 0.08%)</title><rect x="1091.1" y="341" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1094.11" y="351.5" ></text>
</g>
<g >
<title>__filemap_get_folio (313,125,762 samples, 2.06%)</title><rect x="404.1" y="117" width="24.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="407.13" y="127.5" >_..</text>
</g>
<g >
<title>__irq_exit_rcu (6,526,988 samples, 0.04%)</title><rect x="1172.4" y="277" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1175.35" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (6,526,988 samples, 0.04%)</title><rect x="1172.4" y="229" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1175.35" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (23,558,818 samples, 0.16%)</title><rect x="655.4" y="245" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="658.37" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (13,298,805,776 samples, 87.63%)</title><rect x="44.7" y="389" width="1034.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="47.68" y="399.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__bpf_prog_exit (334,059,220 samples, 2.20%)</title><rect x="893.7" y="117" width="26.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="896.68" y="127.5" >_..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (32,893,430 samples, 0.22%)</title><rect x="186.2" y="357" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="189.22" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,943,259 samples, 0.05%)</title><rect x="777.5" y="293" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="780.46" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,943,259 samples, 0.05%)</title><rect x="777.5" y="341" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="780.46" y="351.5" ></text>
</g>
<g >
<title>path_openat (1,720,732,030 samples, 11.34%)</title><rect x="829.3" y="197" width="133.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="832.32" y="207.5" >path_openat</text>
</g>
<g >
<title>mntput_no_expire (32,434,115 samples, 0.21%)</title><rect x="650.0" y="245" width="2.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="653.03" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (12,186,069 samples, 0.08%)</title><rect x="209.2" y="197" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="212.18" y="207.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (1,220,989,053 samples, 8.05%)</title><rect x="1092.1" y="341" width="94.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1095.07" y="351.5" >mem.eql__an..</text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="277" width="1.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.88" y="287.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (97,404,734 samples, 0.64%)</title><rect x="434.7" y="117" width="7.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="437.68" y="127.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (14,702,923 samples, 0.10%)</title><rect x="205.2" y="341" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="208.23" y="351.5" ></text>
</g>
<g >
<title>mas_find (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="53" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1191.88" y="63.5" ></text>
</g>
<g >
<title>__legitimize_path (6,788,974 samples, 0.04%)</title><rect x="865.2" y="149" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="868.17" y="159.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="117" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.88" y="127.5" ></text>
</g>
<g >
<title>kmalloc_trace (59,668,661 samples, 0.39%)</title><rect x="529.5" y="229" width="4.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="532.49" y="239.5" ></text>
</g>
<g >
<title>generic_permission (14,855,913 samples, 0.10%)</title><rect x="947.1" y="149" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="950.06" y="159.5" ></text>
</g>
<g >
<title>__memcpy (20,027,336 samples, 0.13%)</title><rect x="487.4" y="181" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="490.43" y="191.5" ></text>
</g>
<g >
<title>amd_clear_divider (6,248,544 samples, 0.04%)</title><rect x="670.7" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="673.75" y="271.5" ></text>
</g>
<g >
<title>alloc_empty_file (386,611,280 samples, 2.55%)</title><rect x="833.4" y="181" width="30.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="836.37" y="191.5" >al..</text>
</g>
<g >
<title>fsnotify (40,526,971 samples, 0.27%)</title><rect x="639.8" y="245" width="3.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="642.81" y="255.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="213" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.88" y="223.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (785,627,449 samples, 5.18%)</title><rect x="225.4" y="309" width="61.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="228.42" y="319.5" >mem.in..</text>
</g>
<g >
<title>kmem_cache_alloc (248,839,769 samples, 1.64%)</title><rect x="843.0" y="165" width="19.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="845.96" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,577,345 samples, 0.05%)</title><rect x="331.8" y="197" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="334.76" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,186,069 samples, 0.08%)</title><rect x="209.2" y="325" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="212.18" y="335.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6,965,827 samples, 0.05%)</title><rect x="543.8" y="85" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="546.80" y="95.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (7,805,047 samples, 0.05%)</title><rect x="652.6" y="245" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="655.55" y="255.5" ></text>
</g>
<g >
<title>kfree (7,087,549 samples, 0.05%)</title><rect x="639.3" y="229" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="642.26" y="239.5" ></text>
</g>
<g >
<title>fsnotify (81,877,625 samples, 0.54%)</title><rect x="538.0" y="245" width="6.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="540.97" y="255.5" ></text>
</g>
<g >
<title>all (15,175,849,765 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>scheduler_tick (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="181" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1175.86" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,939,695 samples, 0.05%)</title><rect x="957.0" y="165" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="960.03" y="175.5" ></text>
</g>
<g >
<title>rb_next_postorder (9,318,392 samples, 0.06%)</title><rect x="638.5" y="213" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="641.53" y="223.5" ></text>
</g>
<g >
<title>security_file_alloc (113,548,286 samples, 0.75%)</title><rect x="834.1" y="149" width="8.9" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="837.13" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (7,607,156 samples, 0.05%)</title><rect x="856.8" y="133" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="859.81" y="143.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,971,556 samples, 0.04%)</title><rect x="533.7" y="149" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="536.66" y="159.5" ></text>
</g>
<g >
<title>handle_softirqs (6,939,695 samples, 0.05%)</title><rect x="957.0" y="117" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="960.03" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,506,343,183 samples, 23.10%)</title><rect x="305.3" y="293" width="272.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="308.27" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>x64_sys_call (22,117,889 samples, 0.15%)</title><rect x="576.2" y="277" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="579.19" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,919,357 samples, 0.05%)</title><rect x="224.9" y="309" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="227.88" y="319.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (984,123,879 samples, 6.48%)</title><rect x="381.0" y="197" width="76.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="383.95" y="207.5" >__ext4_r..</text>
</g>
<g >
<title>tick_sched_handle (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="213" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1175.86" y="223.5" ></text>
</g>
<g >
<title>posix.toPosixPath (492,851,327 samples, 3.25%)</title><rect x="1040.4" y="357" width="38.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1043.40" y="367.5" >pos..</text>
</g>
<g >
<title>mem.eqlBytes (125,916,931 samples, 0.83%)</title><rect x="210.1" y="325" width="9.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="213.12" y="335.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5,971,556 samples, 0.04%)</title><rect x="533.7" y="117" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="536.66" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (5,255,972 samples, 0.03%)</title><rect x="302.0" y="277" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="304.98" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (13,430,022 samples, 0.09%)</title><rect x="82.3" y="357" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="85.33" y="367.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3954 (14,606,184 samples, 0.10%)</title><rect x="244.8" y="293" width="1.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="247.84" y="303.5" ></text>
</g>
<g >
<title>[unknown] (250,429,986 samples, 1.65%)</title><rect x="788.0" y="309" width="19.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="790.95" y="319.5" ></text>
</g>
<g >
<title>__schedule (10,558,578 samples, 0.07%)</title><rect x="484.3" y="117" width="0.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="487.30" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,186,069 samples, 0.08%)</title><rect x="209.2" y="245" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="212.18" y="255.5" ></text>
</g>
<g >
<title>security_file_free (28,396,425 samples, 0.19%)</title><rect x="653.2" y="245" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="656.16" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (6,919,357 samples, 0.05%)</title><rect x="224.9" y="181" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="227.88" y="191.5" ></text>
</g>
<g >
<title>__memset (92,999,890 samples, 0.61%)</title><rect x="477.1" y="149" width="7.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="480.07" y="159.5" ></text>
</g>
<g >
<title>atime_needs_update (49,340,799 samples, 0.33%)</title><rect x="561.4" y="229" width="3.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="564.39" y="239.5" ></text>
</g>
<g >
<title>security_file_open (598,930,308 samples, 3.95%)</title><rect x="879.9" y="165" width="46.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="882.93" y="175.5" >secu..</text>
</g>
<g >
<title>__check_block_validity.constprop.0 (97,404,734 samples, 0.64%)</title><rect x="434.7" y="133" width="7.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="437.68" y="143.5" ></text>
</g>
<g >
<title>x64_sys_call (14,369,008 samples, 0.09%)</title><rect x="1022.1" y="245" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1025.13" y="255.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (10,558,578 samples, 0.07%)</title><rect x="484.3" y="133" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="487.30" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock (15,140,416 samples, 0.10%)</title><rect x="821.4" y="197" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="824.43" y="207.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (22,456,004 samples, 0.15%)</title><rect x="685.0" y="357" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="688.04" y="367.5" ></text>
</g>
<g >
<title>rb_insert_color (78,855,727 samples, 0.52%)</title><rect x="489.0" y="181" width="6.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="491.98" y="191.5" ></text>
</g>
<g >
<title>make_vfsuid (18,170,759 samples, 0.12%)</title><rect x="932.3" y="133" width="1.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="935.29" y="143.5" ></text>
</g>
<g >
<title>kmem_cache_free (65,125,245 samples, 0.43%)</title><rect x="643.0" y="245" width="5.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="645.96" y="255.5" ></text>
</g>
<g >
<title>xas_start (61,222,530 samples, 0.40%)</title><rect x="423.7" y="69" width="4.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="426.72" y="79.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (147,708,838 samples, 0.97%)</title><rect x="686.8" y="357" width="11.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="689.78" y="367.5" ></text>
</g>
<g >
<title>vfs_open (5,488,961 samples, 0.04%)</title><rect x="962.7" y="181" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="965.69" y="191.5" ></text>
</g>
<g >
<title>down_read_killable (42,323,481 samples, 0.28%)</title><rect x="319.1" y="245" width="3.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="322.13" y="255.5" ></text>
</g>
<g >
<title>file_ra_state_init (23,344,963 samples, 0.15%)</title><rect x="875.0" y="165" width="1.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="878.01" y="175.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (24,067,622 samples, 0.16%)</title><rect x="1187.0" y="341" width="1.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1190.01" y="351.5" ></text>
</g>
<g >
<title>filemap_get_entry (12,884,703 samples, 0.08%)</title><rect x="364.3" y="101" width="1.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="367.27" y="111.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="165" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.88" y="175.5" ></text>
</g>
<g >
<title>task_tick_fair (6,919,357 samples, 0.05%)</title><rect x="224.9" y="165" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="227.88" y="175.5" ></text>
</g>
<g >
<title>__slab_free (44,488,329 samples, 0.29%)</title><rect x="631.7" y="213" width="3.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="634.72" y="223.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (427,057,901 samples, 2.81%)</title><rect x="1045.5" y="341" width="33.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1048.52" y="351.5" >me..</text>
</g>
<g >
<title>entry_SYSCALL_64 (76,820,424 samples, 0.51%)</title><rect x="17.1" y="453" width="6.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="20.12" y="463.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (14,004,054 samples, 0.09%)</title><rect x="1077.6" y="309" width="1.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1080.64" y="319.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (7,631,414 samples, 0.05%)</title><rect x="1080.8" y="357" width="0.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1083.76" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (70,354,519 samples, 0.46%)</title><rect x="77.9" y="373" width="5.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="80.91" y="383.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="229" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.88" y="239.5" ></text>
</g>
<g >
<title>dput (58,883,758 samples, 0.39%)</title><rect x="958.1" y="165" width="4.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="961.11" y="175.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (7,020,819 samples, 0.05%)</title><rect x="1186.5" y="325" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1189.47" y="335.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9015 (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="261" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.88" y="271.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (813,258,446 samples, 5.36%)</title><rect x="224.9" y="325" width="63.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="227.88" y="335.5" >mem.le..</text>
</g>
<g >
<title>perf_event_task_tick (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="165" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1175.86" y="175.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (60,930,908 samples, 0.40%)</title><rect x="885.5" y="85" width="4.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="888.49" y="95.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (13,178,715 samples, 0.09%)</title><rect x="593.4" y="309" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="596.36" y="319.5" ></text>
</g>
<g >
<title>__check_heap_object (14,602,502 samples, 0.10%)</title><rect x="1005.0" y="165" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1007.96" y="175.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (7,711,534 samples, 0.05%)</title><rect x="665.8" y="197" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="668.76" y="207.5" ></text>
</g>
<g >
<title>mmap_region (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="85" width="1.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1191.88" y="95.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (835,927,371 samples, 5.51%)</title><rect x="223.1" y="341" width="65.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="226.12" y="351.5" >mem.sli..</text>
</g>
<g >
<title>__x64_sys_close (756,100,927 samples, 4.98%)</title><rect x="609.9" y="277" width="58.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="612.85" y="287.5" >__x64_..</text>
</g>
<g >
<title>rb_first_postorder (22,998,863 samples, 0.15%)</title><rect x="525.3" y="213" width="1.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="528.33" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (22,025,974 samples, 0.15%)</title><rect x="105.7" y="357" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="108.72" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (22,111,192 samples, 0.15%)</title><rect x="993.8" y="181" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="996.78" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (5,255,972 samples, 0.03%)</title><rect x="302.0" y="213" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="304.98" y="223.5" ></text>
</g>
<g >
<title>debug.assert (21,736,757 samples, 0.14%)</title><rect x="97.5" y="325" width="1.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="100.49" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,965,827 samples, 0.05%)</title><rect x="543.8" y="213" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="546.80" y="223.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (14,653,470 samples, 0.10%)</title><rect x="1045.5" y="325" width="1.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1048.52" y="335.5" ></text>
</g>
<g >
<title>call_filldir (327,725,262 samples, 2.16%)</title><rect x="332.4" y="229" width="25.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="335.35" y="239.5" >c..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (10,546,587 samples, 0.07%)</title><rect x="88.7" y="373" width="0.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="91.66" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (5,255,972 samples, 0.03%)</title><rect x="302.0" y="181" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="304.98" y="191.5" ></text>
</g>
<g >
<title>lockref_put_return (21,834,080 samples, 0.14%)</title><rect x="961.0" y="149" width="1.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="963.99" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (21,650,723 samples, 0.14%)</title><rect x="100.3" y="357" width="1.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="103.33" y="367.5" ></text>
</g>
<g >
<title>ext4_getblk (12,884,703 samples, 0.08%)</title><rect x="364.3" y="165" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="367.27" y="175.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (2,009,805,726 samples, 13.24%)</title><rect x="365.3" y="213" width="156.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="368.27" y="223.5" >htree_dirblock_to_tree</text>
</g>
<g >
<title>filemap_get_entry (313,125,762 samples, 2.06%)</title><rect x="404.1" y="101" width="24.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="407.13" y="111.5" >f..</text>
</g>
<g >
<title>kfree (35,899,403 samples, 0.24%)</title><rect x="635.2" y="213" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="638.18" y="223.5" ></text>
</g>
<g >
<title>__slab_free (29,234,276 samples, 0.19%)</title><rect x="523.1" y="213" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="526.05" y="223.5" ></text>
</g>
<g >
<title>__fput (494,475,646 samples, 3.26%)</title><rect x="616.9" y="261" width="38.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="619.92" y="271.5" >__f..</text>
</g>
<g >
<title>handle_softirqs (5,971,556 samples, 0.04%)</title><rect x="533.7" y="133" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="536.66" y="143.5" ></text>
</g>
<g >
<title>kmalloc_slab (7,496,940 samples, 0.05%)</title><rect x="486.8" y="165" width="0.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="489.84" y="175.5" ></text>
</g>
<g >
<title>fsnotify (22,201,944 samples, 0.15%)</title><rect x="876.8" y="165" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="879.83" y="175.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="149" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1175.86" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (6,943,259 samples, 0.05%)</title><rect x="777.5" y="213" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="780.46" y="223.5" ></text>
</g>
<g >
<title>xas_descend (35,099,230 samples, 0.23%)</title><rect x="421.0" y="69" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="423.99" y="79.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="261" width="1.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1175.86" y="271.5" ></text>
</g>
<g >
<title>__fdget_pos (75,428,098 samples, 0.50%)</title><rect x="306.5" y="261" width="5.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="309.45" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (161,057,728 samples, 1.06%)</title><rect x="1173.9" y="325" width="12.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1176.94" y="335.5" ></text>
</g>
<g >
<title>is_dx_dir (30,542,503 samples, 0.20%)</title><rect x="527.1" y="229" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="530.11" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="277" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1093.32" y="287.5" ></text>
</g>
<g >
<title>rcu_do_batch (6,939,695 samples, 0.05%)</title><rect x="957.0" y="85" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="960.03" y="95.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,186,069 samples, 0.08%)</title><rect x="209.2" y="229" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="212.18" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (80,754,824 samples, 0.53%)</title><rect x="92.9" y="341" width="6.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="95.90" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,255,972 samples, 0.03%)</title><rect x="302.0" y="293" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="304.98" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (36,685,091 samples, 0.24%)</title><rect x="1019.3" y="229" width="2.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1022.28" y="239.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_3903 (7,391,241 samples, 0.05%)</title><rect x="27.1" y="405" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="30.07" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="181" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1093.32" y="191.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (539,780,458 samples, 3.56%)</title><rect x="880.5" y="149" width="42.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="883.52" y="159.5" >bpf..</text>
</g>
<g >
<title>posix.mmap (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="197" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.88" y="207.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (13,130,816 samples, 0.09%)</title><rect x="433.7" y="101" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="436.66" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="245" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1175.86" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (213,388,015 samples, 1.41%)</title><rect x="1023.3" y="277" width="16.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1026.25" y="287.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (15,000,602,266 samples, 98.85%)</title><rect x="23.6" y="469" width="1166.4" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="26.63" y="479.5" >start.posixCallMainAndExit</text>
</g>
<g >
<title>migrate_enable (334,059,220 samples, 2.20%)</title><rect x="893.7" y="101" width="26.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="896.68" y="111.5" >m..</text>
</g>
<g >
<title>syscall_return_via_sysret (7,216,757 samples, 0.05%)</title><rect x="1039.8" y="277" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1042.84" y="287.5" ></text>
</g>
<g >
<title>make_vfsgid (7,033,857 samples, 0.05%)</title><rect x="563.1" y="213" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="566.07" y="223.5" ></text>
</g>
<g >
<title>close_fd_get_file (46,457,011 samples, 0.31%)</title><rect x="655.4" y="261" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="658.37" y="271.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (28,599,874 samples, 0.19%)</title><rect x="238.5" y="261" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="241.55" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,946,760 samples, 0.09%)</title><rect x="1172.9" y="277" width="1.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1175.86" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (48,660,056 samples, 0.32%)</title><rect x="627.9" y="213" width="3.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="630.93" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (28,464,030 samples, 0.19%)</title><rect x="671.2" y="261" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="674.23" y="271.5" ></text>
</g>
<g >
<title>__find_get_block (12,884,703 samples, 0.08%)</title><rect x="364.3" y="133" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="367.27" y="143.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (3,918,405,734 samples, 25.82%)</title><rect x="289.7" y="325" width="304.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="292.70" y="335.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>__legitimize_mnt (6,788,974 samples, 0.04%)</title><rect x="865.2" y="133" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="868.17" y="143.5" ></text>
</g>
<g >
<title>kfree (9,691,596 samples, 0.06%)</title><rect x="520.8" y="181" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="523.79" y="191.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (634,698,949 samples, 4.18%)</title><rect x="967.9" y="213" width="49.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="970.93" y="223.5" >getn..</text>
</g>
<g >
<title>security_inode_permission (20,689,136 samples, 0.14%)</title><rect x="933.7" y="165" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="936.71" y="175.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7461 (14,606,184 samples, 0.10%)</title><rect x="244.8" y="277" width="1.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="247.84" y="287.5" ></text>
</g>
<g >
<title>__memset (213,626,117 samples, 1.41%)</title><rect x="977.2" y="181" width="16.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="980.17" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (14,935,552 samples, 0.10%)</title><rect x="111.2" y="229" width="1.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="114.24" y="239.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (11,668,756 samples, 0.08%)</title><rect x="615.3" y="245" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="618.28" y="255.5" ></text>
</g>
<g >
<title>debug.inValgrind (5,604,097 samples, 0.04%)</title><rect x="1077.2" y="309" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1080.20" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,203,511 samples, 0.07%)</title><rect x="1090.3" y="309" width="0.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1093.32" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="325" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.88" y="335.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,316,431 samples, 0.09%)</title><rect x="606.6" y="277" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="609.57" y="287.5" ></text>
</g>
<g >
<title>search_name_run (15,175,849,765 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >search_name_run</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (5,241,545,342 samples, 34.54%)</title><rect x="188.8" y="357" width="407.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="191.77" y="367.5" >fs.Dir.Iterator__struct_3782.nextLinux</text>
</g>
<g >
<title>security_file_permission (87,633,230 samples, 0.58%)</title><rect x="554.1" y="245" width="6.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="557.05" y="255.5" ></text>
</g>
<g >
<title>errseq_sample (14,385,795 samples, 0.09%)</title><rect x="873.9" y="165" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="876.90" y="175.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (17,634,569 samples, 0.12%)</title><rect x="878.6" y="165" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="881.56" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,577,345 samples, 0.05%)</title><rect x="331.8" y="213" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="334.76" y="223.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (56,926,903 samples, 0.38%)</title><rect x="837.4" y="133" width="4.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="840.35" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (29,410,340 samples, 0.19%)</title><rect x="176.8" y="373" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="179.82" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (64,230,548 samples, 0.42%)</title><rect x="10.0" y="453" width="5.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="149" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.88" y="159.5" ></text>
</g>
<g >
<title>dput (16,777,415 samples, 0.11%)</title><rect x="619.1" y="245" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="622.12" y="255.5" ></text>
</g>
<g >
<title>debug.assert (7,265,257 samples, 0.05%)</title><rect x="781.6" y="325" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="784.57" y="335.5" ></text>
</g>
<g >
<title>init_file (123,413,691 samples, 0.81%)</title><rect x="833.4" y="165" width="9.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="836.37" y="175.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (80,304,532 samples, 0.53%)</title><rect x="660.1" y="213" width="6.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="663.11" y="223.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7942 (14,355,180 samples, 0.09%)</title><rect x="1188.9" y="245" width="1.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.88" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (56,976,664 samples, 0.38%)</title><rect x="571.8" y="277" width="4.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="574.76" y="287.5" ></text>
</g>
<g >
<title>locks_remove_posix (29,393,643 samples, 0.19%)</title><rect x="666.4" y="245" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="669.36" y="255.5" ></text>
</g>
<g >
<title>debug.inValgrind (99,075,192 samples, 0.65%)</title><rect x="237.1" y="293" width="7.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="240.14" y="303.5" ></text>
</g>
<g >
<title>__getblk_gfp (12,884,703 samples, 0.08%)</title><rect x="364.3" y="149" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="367.27" y="159.5" ></text>
</g>
<g >
<title>rcu_core (14,316,431 samples, 0.09%)</title><rect x="606.6" y="245" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="609.57" y="255.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (20,418,517 samples, 0.13%)</title><rect x="288.1" y="341" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="291.12" y="351.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (76,820,424 samples, 0.51%)</title><rect x="17.1" y="469" width="6.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="20.12" y="479.5" ></text>
</g>
<g >
<title>pick_file (22,898,193 samples, 0.15%)</title><rect x="657.2" y="245" width="1.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="660.20" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (7,577,345 samples, 0.05%)</title><rect x="331.8" y="101" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="334.76" y="111.5" ></text>
</g>
<g >
<title>do_filp_open (1,779,579,609 samples, 11.73%)</title><rect x="824.7" y="213" width="138.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="827.75" y="223.5" >do_filp_open</text>
</g>
<g >
<title>__kmalloc (277,609,088 samples, 1.83%)</title><rect x="465.8" y="181" width="21.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="468.84" y="191.5" >_..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,935,552 samples, 0.10%)</title><rect x="111.2" y="357" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="114.24" y="367.5" ></text>
</g>
<g >
<title>mutex_unlock (39,432,218 samples, 0.26%)</title><rect x="568.7" y="261" width="3.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="571.69" y="271.5" ></text>
</g>
</g>
</svg>
