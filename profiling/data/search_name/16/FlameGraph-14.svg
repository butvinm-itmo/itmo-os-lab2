<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>folio_mark_accessed (28,779,386 samples, 0.12%)</title><rect x="387.1" y="165" width="1.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="390.14" y="175.5" ></text>
</g>
<g >
<title>task_tick_fair (11,622,345 samples, 0.05%)</title><rect x="155.8" y="277" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="158.79" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="389" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.60" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (28,058,545 samples, 0.11%)</title><rect x="679.3" y="437" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="682.30" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,920,436 samples, 0.08%)</title><rect x="181.7" y="389" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="184.73" y="399.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (18,580,397 samples, 0.08%)</title><rect x="485.1" y="261" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="488.10" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,962,022 samples, 0.06%)</title><rect x="19.9" y="517" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="22.87" y="527.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (701,643,911 samples, 2.83%)</title><rect x="183.3" y="405" width="33.4" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="186.32" y="415.5" >me..</text>
</g>
<g >
<title>__memset (44,721,636 samples, 0.18%)</title><rect x="822.4" y="181" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="825.45" y="191.5" ></text>
</g>
<g >
<title>__put_user_8 (33,713,642 samples, 0.14%)</title><rect x="289.0" y="325" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="292.04" y="335.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (123,823,030 samples, 0.50%)</title><rect x="629.9" y="293" width="5.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="632.85" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.rawResize (6,867,006 samples, 0.03%)</title><rect x="75.2" y="373" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="78.22" y="383.5" ></text>
</g>
<g >
<title>irqtime_account_irq (13,690,007 samples, 0.06%)</title><rect x="853.5" y="213" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="856.47" y="223.5" ></text>
</g>
<g >
<title>memchr (53,348,029 samples, 0.22%)</title><rect x="333.5" y="245" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="336.46" y="255.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (52,878,578 samples, 0.21%)</title><rect x="433.2" y="213" width="2.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="436.23" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (39,183,438 samples, 0.16%)</title><rect x="745.0" y="421" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="748.03" y="431.5" ></text>
</g>
<g >
<title>rb_next_postorder (36,365,604 samples, 0.15%)</title><rect x="610.7" y="277" width="1.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="613.70" y="287.5" ></text>
</g>
<g >
<title>update_process_times (7,019,366 samples, 0.03%)</title><rect x="833.1" y="85" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="836.10" y="95.5" ></text>
</g>
<g >
<title>__fput (744,948,214 samples, 3.01%)</title><rect x="590.7" y="325" width="35.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="593.73" y="335.5" >__f..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="373" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1160.47" y="383.5" ></text>
</g>
<g >
<title>mem.eqlBytes (14,395,703 samples, 0.06%)</title><rect x="182.6" y="405" width="0.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="185.63" y="415.5" ></text>
</g>
<g >
<title>__memset (52,841,407 samples, 0.21%)</title><rect x="830.9" y="213" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="833.92" y="223.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8551 (20,763,345 samples, 0.08%)</title><rect x="237.1" y="325" width="1.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="240.08" y="335.5" ></text>
</g>
<g >
<title>do_anonymous_page (14,845,140 samples, 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1192.29" y="223.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (318,317,947 samples, 1.29%)</title><rect x="1158.1" y="389" width="15.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1161.14" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (14,885,825 samples, 0.06%)</title><rect x="824.6" y="181" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="827.58" y="191.5" ></text>
</g>
<g >
<title>debug.inValgrind (137,707,311 samples, 0.56%)</title><rect x="228.6" y="357" width="6.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="231.62" y="367.5" ></text>
</g>
<g >
<title>__call_rcu_common (185,555,101 samples, 0.75%)</title><rect x="581.9" y="325" width="8.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="584.89" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="261" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1051.98" y="271.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (6,116,251 samples, 0.02%)</title><rect x="590.4" y="309" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="593.44" y="319.5" ></text>
</g>
<g >
<title>__unfreeze_partials (4,908,741 samples, 0.02%)</title><rect x="607.3" y="277" width="0.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="610.28" y="287.5" ></text>
</g>
<g >
<title>terminate_walk (137,870,587 samples, 0.56%)</title><rect x="938.9" y="245" width="6.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="941.91" y="255.5" ></text>
</g>
<g >
<title>_raw_read_lock (62,639,764 samples, 0.25%)</title><rect x="407.7" y="181" width="3.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="410.75" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (153,854,215 samples, 0.62%)</title><rect x="388.5" y="181" width="7.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="391.51" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (82,871,943 samples, 0.33%)</title><rect x="15.9" y="517" width="4.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="18.92" y="527.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8615 (806,056,665 samples, 3.25%)</title><rect x="220.4" y="373" width="38.4" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="223.42" y="383.5" >mem..</text>
</g>
<g >
<title>mod_memcg_lruvec_state (12,921,645 samples, 0.05%)</title><rect x="849.8" y="181" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="852.80" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (38,577,528 samples, 0.16%)</title><rect x="156.3" y="437" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="159.34" y="447.5" ></text>
</g>
<g >
<title>lookup_fast (263,041,534 samples, 1.06%)</title><rect x="915.2" y="245" width="12.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="918.22" y="255.5" ></text>
</g>
<g >
<title>fsnotify (38,416,746 samples, 0.16%)</title><rect x="613.1" y="309" width="1.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="616.13" y="319.5" ></text>
</g>
<g >
<title>is_dx_dir (418,128,553 samples, 1.69%)</title><rect x="493.4" y="293" width="19.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="496.37" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,620,855 samples, 0.05%)</title><rect x="488.4" y="261" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="491.44" y="271.5" ></text>
</g>
<g >
<title>alloc_empty_file (891,553,126 samples, 3.60%)</title><rect x="811.0" y="245" width="42.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="814.00" y="255.5" >all..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,019,366 samples, 0.03%)</title><rect x="833.1" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="836.10" y="191.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (22,573,013 samples, 0.09%)</title><rect x="878.7" y="165" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="881.74" y="175.5" ></text>
</g>
<g >
<title>security_file_alloc (208,169,203 samples, 0.84%)</title><rect x="815.4" y="213" width="9.9" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="818.37" y="223.5" ></text>
</g>
<g >
<title>__mutex_init (7,045,930 samples, 0.03%)</title><rect x="815.0" y="213" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="818.04" y="223.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (201,006,308 samples, 0.81%)</title><rect x="833.8" y="213" width="9.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="836.83" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (109,847,922 samples, 0.44%)</title><rect x="10.7" y="517" width="5.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.69" y="527.5" ></text>
</g>
<g >
<title>mem.eqlBytes (1,783,136,142 samples, 7.20%)</title><rect x="1073.2" y="389" width="84.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1076.19" y="399.5" >mem.eqlBy..</text>
</g>
<g >
<title>handle_softirqs (6,956,668 samples, 0.03%)</title><rect x="181.0" y="357" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="184.05" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (37,030,829 samples, 0.15%)</title><rect x="70.9" y="437" width="1.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="73.87" y="447.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (89,437,154 samples, 0.36%)</title><rect x="887.1" y="149" width="4.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="890.06" y="159.5" ></text>
</g>
<g >
<title>update_process_times (13,620,855 samples, 0.05%)</title><rect x="488.4" y="149" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="491.44" y="159.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9010 (6,069,345 samples, 0.02%)</title><rect x="237.8" y="293" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="240.78" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,784,215 samples, 0.03%)</title><rect x="580.3" y="373" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="583.28" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (13,962,022 samples, 0.06%)</title><rect x="19.9" y="533" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="22.87" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,254,622,222 samples, 5.07%)</title><rect x="581.9" y="357" width="59.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="584.89" y="367.5" >do_sys..</text>
</g>
<g >
<title>hook_file_alloc_security (39,112,936 samples, 0.16%)</title><rect x="819.2" y="197" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="822.19" y="207.5" ></text>
</g>
<g >
<title>__fget_light (49,359,898 samples, 0.20%)</title><rect x="284.1" y="309" width="2.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="287.07" y="319.5" ></text>
</g>
<g >
<title>__memcpy (107,105,275 samples, 0.43%)</title><rect x="438.9" y="245" width="5.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="441.92" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,956,668 samples, 0.03%)</title><rect x="181.0" y="309" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="184.05" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (7,374,857 samples, 0.03%)</title><rect x="1019.9" y="373" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1022.89" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (13,618,670 samples, 0.05%)</title><rect x="70.2" y="421" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="73.22" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="325" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1043.79" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,690,007 samples, 0.06%)</title><rect x="853.5" y="245" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="856.47" y="255.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (7,192,536 samples, 0.03%)</title><rect x="1041.2" y="357" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1044.16" y="367.5" ></text>
</g>
<g >
<title>start.callMain (24,548,463,623 samples, 99.11%)</title><rect x="20.5" y="501" width="1169.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="23.54" y="511.5" >start.callMain</text>
</g>
<g >
<title>os.linux.close (1,548,310,974 samples, 6.25%)</title><rect x="579.4" y="405" width="73.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="582.38" y="415.5" >os.linux..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="405" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.60" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,620,855 samples, 0.05%)</title><rect x="488.4" y="197" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="491.44" y="207.5" ></text>
</g>
<g >
<title>dnotify_flush (170,978,991 samples, 0.69%)</title><rect x="627.6" y="309" width="8.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="630.61" y="319.5" ></text>
</g>
<g >
<title>rcu_core (6,793,421 samples, 0.03%)</title><rect x="770.9" y="309" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="773.86" y="319.5" ></text>
</g>
<g >
<title>ext4_map_blocks (362,166,825 samples, 1.46%)</title><rect x="396.5" y="213" width="17.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="399.55" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1051.98" y="335.5" ></text>
</g>
<g >
<title>verify_dirent_name (60,111,798 samples, 0.24%)</title><rect x="333.1" y="261" width="2.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="336.14" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (6,884,631 samples, 0.03%)</title><rect x="1002.7" y="293" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1005.74" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,784,215 samples, 0.03%)</title><rect x="580.3" y="325" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="583.28" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (112,002,622 samples, 0.45%)</title><rect x="58.1" y="437" width="5.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="61.13" y="447.5" ></text>
</g>
<g >
<title>complete_walk (61,002,442 samples, 0.25%)</title><rect x="854.1" y="245" width="2.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="857.12" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (26,746,522 samples, 0.11%)</title><rect x="634.5" y="261" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="637.48" y="271.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (24,548,463,623 samples, 99.11%)</title><rect x="20.5" y="533" width="1169.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="23.54" y="543.5" >start.posixCallMainAndExit</text>
</g>
<g >
<title>__x64_sys_close (1,234,697,907 samples, 4.98%)</title><rect x="581.9" y="341" width="58.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="584.89" y="351.5" >__x64_..</text>
</g>
<g >
<title>search_name.searchName (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="469" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.60" y="479.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (2,346,344,268 samples, 9.47%)</title><rect x="1061.9" y="405" width="111.7" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1064.85" y="415.5" >mem.eql__anon..</text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (23,358,067 samples, 0.09%)</title><rect x="34.8" y="453" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="37.80" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (14,493,767 samples, 0.06%)</title><rect x="10.0" y="517" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>[unknown] (22,977,261 samples, 0.09%)</title><rect x="899.4" y="197" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="902.37" y="207.5" ></text>
</g>
<g >
<title>step_into (15,654,395 samples, 0.06%)</title><rect x="938.2" y="245" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="941.17" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,920,436 samples, 0.08%)</title><rect x="181.7" y="325" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="184.73" y="335.5" ></text>
</g>
<g >
<title>dput (60,051,982 samples, 0.24%)</title><rect x="594.3" y="309" width="2.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="597.31" y="319.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (14,555,924 samples, 0.06%)</title><rect x="937.5" y="149" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="940.48" y="159.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (7,168,356 samples, 0.03%)</title><rect x="851.1" y="149" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="854.12" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,731,752,630 samples, 23.14%)</title><rect x="275.3" y="373" width="273.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="278.32" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>security_inode_permission (46,241,741 samples, 0.19%)</title><rect x="913.0" y="229" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="916.02" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (75,678,707 samples, 0.31%)</title><rect x="162.6" y="421" width="3.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="165.58" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="373" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.60" y="383.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (6,542,759,111 samples, 26.41%)</title><rect x="260.0" y="405" width="311.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="262.95" y="415.5" >os.linux.getdents64</text>
</g>
<g >
<title>perf_event_task_tick (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="277" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1051.98" y="287.5" ></text>
</g>
<g >
<title>do_filp_open (3,088,427,565 samples, 12.47%)</title><rect x="799.8" y="277" width="147.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="802.76" y="287.5" >do_filp_open</text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (5,570,293,343 samples, 22.49%)</title><rect x="754.9" y="405" width="265.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="757.88" y="415.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>exit_to_user_mode_prepare (13,343,589 samples, 0.05%)</title><rect x="778.5" y="309" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="781.46" y="319.5" ></text>
</g>
<g >
<title>kmalloc_trace (133,186,755 samples, 0.54%)</title><rect x="513.3" y="293" width="6.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="516.29" y="303.5" ></text>
</g>
<g >
<title>__legitimize_mnt (11,275,328 samples, 0.05%)</title><rect x="854.8" y="197" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="857.76" y="207.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (12,594,638 samples, 0.05%)</title><rect x="1020.2" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1023.24" y="431.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="293" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1191.60" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,342,227 samples, 0.03%)</title><rect x="982.6" y="197" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="985.57" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_8707 (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="357" width="1.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1191.60" y="367.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (12,922,277 samples, 0.05%)</title><rect x="1046.0" y="437" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1049.01" y="447.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (299,548,875 samples, 1.21%)</title><rect x="1003.1" y="341" width="14.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1006.07" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (970,100,146 samples, 3.92%)</title><rect x="681.7" y="421" width="46.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="684.67" y="431.5" >comp..</text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (43,332,640 samples, 0.17%)</title><rect x="573.4" y="421" width="2.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="576.42" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (15,478,352 samples, 0.06%)</title><rect x="593.6" y="309" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="596.57" y="319.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (91,285,162 samples, 0.37%)</title><rect x="230.8" y="309" width="4.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="233.83" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (109,847,922 samples, 0.44%)</title><rect x="10.7" y="533" width="5.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.69" y="543.5" ></text>
</g>
<g >
<title>__find_get_block (937,572,046 samples, 3.79%)</title><rect x="351.9" y="197" width="44.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="354.88" y="207.5" >__fi..</text>
</g>
<g >
<title>bpf_lsm_file_free_security (21,906,556 samples, 0.09%)</title><rect x="625.2" y="293" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="628.18" y="303.5" ></text>
</g>
<g >
<title>search_name_run (24,769,639,277 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >search_name_run</text>
</g>
<g >
<title>exc_page_fault (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="277" width="1.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1191.60" y="287.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (3,148,244,818 samples, 12.71%)</title><rect x="336.0" y="293" width="150.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="339.00" y="303.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>valgrind.runningOnValgrind (13,906,470 samples, 0.06%)</title><rect x="258.8" y="373" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="261.82" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (18,913,092 samples, 0.08%)</title><rect x="20.5" y="469" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="23.54" y="479.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (756,479,139 samples, 3.05%)</title><rect x="449.1" y="245" width="36.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="452.06" y="255.5" >__e..</text>
</g>
<g >
<title>fsnotify (85,260,667 samples, 0.34%)</title><rect x="870.0" y="213" width="4.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="873.02" y="223.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (126,325,426 samples, 0.51%)</title><rect x="398.9" y="181" width="6.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="401.89" y="191.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (35,903,844 samples, 0.14%)</title><rect x="855.3" y="197" width="1.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="858.30" y="207.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8499 (835,209,052 samples, 3.37%)</title><rect x="219.7" y="389" width="39.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="222.70" y="399.5" >mem..</text>
</g>
<g >
<title>fs.Dir.close (8,041,199 samples, 0.03%)</title><rect x="1042.2" y="453" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1045.20" y="463.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7460 (7,572,420 samples, 0.03%)</title><rect x="236.7" y="341" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="239.72" y="351.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (24,689,234 samples, 0.10%)</title><rect x="63.5" y="437" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="66.47" y="447.5" ></text>
</g>
<g >
<title>__slab_free (6,996,097 samples, 0.03%)</title><rect x="606.9" y="277" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="609.94" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,851,857 samples, 0.06%)</title><rect x="538.0" y="261" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="541.02" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,548,310,974 samples, 6.25%)</title><rect x="579.4" y="389" width="73.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="582.38" y="399.5" >os.linux..</text>
</g>
<g >
<title>filp_flush (275,141,786 samples, 1.11%)</title><rect x="627.6" y="325" width="13.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="630.61" y="335.5" ></text>
</g>
<g >
<title>kfree (66,901,436 samples, 0.27%)</title><rect x="607.5" y="277" width="3.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="610.51" y="287.5" ></text>
</g>
<g >
<title>rb_next_postorder (7,893,508 samples, 0.03%)</title><rect x="491.0" y="277" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="494.04" y="287.5" ></text>
</g>
<g >
<title>update_curr (6,445,894 samples, 0.03%)</title><rect x="593.6" y="133" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="596.57" y="143.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,879,085 samples, 0.03%)</title><rect x="899.0" y="181" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="902.05" y="191.5" ></text>
</g>
<g >
<title>fsnotify (76,801,178 samples, 0.31%)</title><rect x="522.0" y="309" width="3.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="525.01" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,445,894 samples, 0.03%)</title><rect x="593.6" y="277" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="596.57" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,343,589 samples, 0.05%)</title><rect x="778.5" y="341" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="781.46" y="351.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (113,974,295 samples, 0.46%)</title><rect x="486.0" y="293" width="5.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="488.98" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (84,329,280 samples, 0.34%)</title><rect x="675.3" y="405" width="4.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="678.28" y="415.5" ></text>
</g>
<g >
<title>__kmem_cache_free (22,006,612 samples, 0.09%)</title><rect x="599.7" y="293" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="602.72" y="303.5" ></text>
</g>
<g >
<title>mem.isAligned (20,763,345 samples, 0.08%)</title><rect x="237.1" y="357" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="240.08" y="367.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (20,021,105 samples, 0.08%)</title><rect x="216.7" y="405" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="219.75" y="415.5" ></text>
</g>
<g >
<title>build_open_flags (25,991,736 samples, 0.10%)</title><rect x="798.5" y="277" width="1.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="801.52" y="287.5" ></text>
</g>
<g >
<title>fsnotify (59,212,659 samples, 0.24%)</title><rect x="866.1" y="229" width="2.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="869.11" y="239.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (9,801,114 samples, 0.04%)</title><rect x="259.5" y="405" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="262.49" y="415.5" ></text>
</g>
<g >
<title>try_module_get (14,717,348 samples, 0.06%)</title><rect x="907.0" y="229" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="910.02" y="239.5" ></text>
</g>
<g >
<title>inode_permission (20,721,377 samples, 0.08%)</title><rect x="912.0" y="229" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="915.03" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,784,215 samples, 0.03%)</title><rect x="580.3" y="341" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="583.28" y="351.5" ></text>
</g>
<g >
<title>mntput (13,821,955 samples, 0.06%)</title><rect x="944.5" y="229" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="947.49" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (34,083,859 samples, 0.14%)</title><rect x="412.2" y="181" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="415.18" y="191.5" ></text>
</g>
<g >
<title>heap.PageAllocator.resize (6,867,006 samples, 0.03%)</title><rect x="75.2" y="357" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="78.22" y="367.5" ></text>
</g>
<g >
<title>__kmem_cache_free (78,420,022 samples, 0.32%)</title><rect x="603.2" y="277" width="3.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="606.21" y="287.5" ></text>
</g>
<g >
<title>putname (14,335,379 samples, 0.06%)</title><rect x="1001.0" y="277" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1003.95" y="287.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7,765,093 samples, 0.03%)</title><rect x="571.3" y="373" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="574.27" y="383.5" ></text>
</g>
<g >
<title>psi_account_irqtime (7,342,227 samples, 0.03%)</title><rect x="982.6" y="85" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="985.57" y="95.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (43,208,665 samples, 0.17%)</title><rect x="889.3" y="133" width="2.0" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="892.26" y="143.5" ></text>
</g>
<g >
<title>array_list.addOrOom (31,052,257 samples, 0.13%)</title><rect x="75.5" y="421" width="1.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="78.55" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,622,345 samples, 0.05%)</title><rect x="155.8" y="421" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="158.79" y="431.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (29,899,114 samples, 0.12%)</title><rect x="893.5" y="181" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="896.52" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (145,325,162 samples, 0.59%)</title><rect x="763.9" y="357" width="7.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="766.94" y="367.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (3,052,986,286 samples, 12.33%)</title><rect x="340.5" y="277" width="145.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="343.54" y="287.5" >htree_dirblock_to_..</text>
</g>
<g >
<title>entry_SYSCALL_64 (76,439,705 samples, 0.31%)</title><rect x="271.7" y="373" width="3.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="274.68" y="383.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (160,207,985 samples, 0.65%)</title><rect x="397.3" y="197" width="7.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="400.28" y="207.5" ></text>
</g>
<g >
<title>alloc_fd (110,905,527 samples, 0.45%)</title><rect x="793.2" y="277" width="5.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="796.24" y="287.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (16,321,278 samples, 0.07%)</title><rect x="894.9" y="181" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="897.95" y="191.5" ></text>
</g>
<g >
<title>timerqueue_add (14,555,924 samples, 0.06%)</title><rect x="937.5" y="133" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="940.48" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,872,847 samples, 0.06%)</title><rect x="538.0" y="277" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="541.02" y="287.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (113,103,231 samples, 0.46%)</title><rect x="229.8" y="325" width="5.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="232.79" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,920,436 samples, 0.08%)</title><rect x="181.7" y="293" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="184.73" y="303.5" ></text>
</g>
<g >
<title>iterate_dir (5,301,498,459 samples, 21.40%)</title><rect x="290.6" y="325" width="252.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="293.65" y="335.5" >iterate_dir</text>
</g>
<g >
<title>update_process_times (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="261" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1043.79" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (27,535,539 samples, 0.11%)</title><rect x="884.8" y="149" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="887.81" y="159.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (7,589,679,823 samples, 30.64%)</title><rect x="680.6" y="437" width="361.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="683.64" y="447.5" >fs.Dir.openDir</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (29,708,303 samples, 0.12%)</title><rect x="71.2" y="421" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="74.21" y="431.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (157,544,641 samples, 0.64%)</title><rect x="907.7" y="245" width="7.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="910.72" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (71,933,312 samples, 0.29%)</title><rect x="1042.6" y="453" width="3.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1045.58" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,784,215 samples, 0.03%)</title><rect x="580.3" y="357" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="583.28" y="367.5" ></text>
</g>
<g >
<title>update_process_times (6,445,894 samples, 0.03%)</title><rect x="593.6" y="181" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="596.57" y="191.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (15,119,884 samples, 0.06%)</title><rect x="759.1" y="389" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="762.09" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,493,767 samples, 0.06%)</title><rect x="10.0" y="501" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>hook_file_open (137,435,017 samples, 0.55%)</title><rect x="900.5" y="213" width="6.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="903.47" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (33,054,868 samples, 0.13%)</title><rect x="545.8" y="325" width="1.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="548.77" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="277" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1043.79" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (6,445,894 samples, 0.03%)</title><rect x="593.6" y="149" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="596.57" y="159.5" ></text>
</g>
<g >
<title>mod_objcg_state (55,346,509 samples, 0.22%)</title><rect x="847.8" y="197" width="2.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="850.78" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (11,622,345 samples, 0.05%)</title><rect x="155.8" y="293" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="158.79" y="303.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (21,961,137 samples, 0.09%)</title><rect x="850.4" y="213" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="853.42" y="223.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (132,525,408 samples, 0.54%)</title><rect x="879.8" y="165" width="6.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="882.81" y="175.5" ></text>
</g>
<g >
<title>memcg_account_kmem (7,168,356 samples, 0.03%)</title><rect x="851.1" y="197" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="854.12" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="325" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1160.47" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,353,601 samples, 0.03%)</title><rect x="621.6" y="293" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="624.61" y="303.5" ></text>
</g>
<g >
<title>locks_remove_file (12,611,584 samples, 0.05%)</title><rect x="617.8" y="309" width="0.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="620.76" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (52,341,303 samples, 0.21%)</title><rect x="74.5" y="437" width="2.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="77.53" y="447.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4,429,427,814 samples, 17.88%)</title><rect x="790.6" y="293" width="211.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="793.62" y="303.5" >do_sys_openat2</text>
</g>
<g >
<title>ext4_release_dir (335,024,869 samples, 1.35%)</title><rect x="597.2" y="309" width="15.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="600.17" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_free (33,647,550 samples, 0.14%)</title><rect x="999.4" y="277" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1002.35" y="287.5" ></text>
</g>
<g >
<title>schedule (13,343,589 samples, 0.05%)</title><rect x="778.5" y="293" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="781.46" y="303.5" ></text>
</g>
<g >
<title>generic_permission (20,721,377 samples, 0.08%)</title><rect x="912.0" y="213" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="915.03" y="223.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (106,617,949 samples, 0.43%)</title><rect x="525.7" y="309" width="5.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="528.67" y="319.5" ></text>
</g>
<g >
<title>make_vfsuid (8,445,945 samples, 0.03%)</title><rect x="538.7" y="277" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="541.68" y="287.5" ></text>
</g>
<g >
<title>housekeeping_test_cpu (14,751,257 samples, 0.06%)</title><rect x="395.8" y="181" width="0.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="398.84" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1043.79" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,920,436 samples, 0.08%)</title><rect x="181.7" y="341" width="0.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="184.73" y="351.5" ></text>
</g>
<g >
<title>mem.Allocator.resize__anon_8561 (6,867,006 samples, 0.03%)</title><rect x="75.2" y="389" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="78.22" y="399.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8146 (15,245,917 samples, 0.06%)</title><rect x="219.7" y="373" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="222.70" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (145,325,162 samples, 0.59%)</title><rect x="763.9" y="341" width="7.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="766.94" y="351.5" ></text>
</g>
<g >
<title>__memset (114,160,369 samples, 0.46%)</title><rect x="427.8" y="213" width="5.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="430.79" y="223.5" ></text>
</g>
<g >
<title>debug.assert (13,445,369 samples, 0.05%)</title><rect x="62.8" y="389" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="65.82" y="399.5" ></text>
</g>
<g >
<title>debug.assert (8,536,033 samples, 0.03%)</title><rect x="74.1" y="421" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="77.13" y="431.5" ></text>
</g>
<g >
<title>try_to_unlazy (61,002,442 samples, 0.25%)</title><rect x="854.1" y="229" width="2.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="857.12" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="357" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1051.98" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (7,342,227 samples, 0.03%)</title><rect x="982.6" y="69" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="985.57" y="79.5" ></text>
</g>
<g >
<title>fs.Dir.close (1,658,506,630 samples, 6.70%)</title><rect x="576.2" y="437" width="79.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="579.19" y="447.5" >fs.Dir.cl..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,622,345 samples, 0.05%)</title><rect x="155.8" y="389" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="158.79" y="399.5" ></text>
</g>
<g >
<title>expand_files (14,285,337 samples, 0.06%)</title><rect x="797.8" y="261" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="800.84" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,022,821 samples, 0.06%)</title><rect x="413.0" y="165" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="416.04" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (12,921,645 samples, 0.05%)</title><rect x="849.8" y="165" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="852.80" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (204,281,616 samples, 0.82%)</title><rect x="25.1" y="453" width="9.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="28.07" y="463.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (6,297,849 samples, 0.03%)</title><rect x="547.3" y="325" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="550.35" y="335.5" ></text>
</g>
<g >
<title>[unknown] (221,175,654 samples, 0.89%)</title><rect x="10.0" y="549" width="10.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>inode_permission (12,384,443 samples, 0.05%)</title><rect x="931.0" y="229" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="933.97" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,793,421 samples, 0.03%)</title><rect x="770.9" y="373" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="773.86" y="383.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (42,121,416 samples, 0.17%)</title><rect x="851.5" y="229" width="2.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="854.46" y="239.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (24,548,463,623 samples, 99.11%)</title><rect x="20.5" y="517" width="1169.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="23.54" y="527.5" >start.callMainWithArgs</text>
</g>
<g >
<title>syscall_return_via_sysret (6,380,443 samples, 0.03%)</title><rect x="652.8" y="373" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="655.83" y="383.5" ></text>
</g>
<g >
<title>xas_load (234,792,325 samples, 0.95%)</title><rect x="376.0" y="149" width="11.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="378.96" y="159.5" ></text>
</g>
<g >
<title>update_process_times (18,920,436 samples, 0.08%)</title><rect x="181.7" y="277" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="184.73" y="287.5" ></text>
</g>
<g >
<title>rcu_core (6,956,668 samples, 0.03%)</title><rect x="181.0" y="341" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="184.05" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_7770 (2,903,856,097 samples, 11.72%)</title><rect x="1050.3" y="421" width="138.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1053.26" y="431.5" >mem.indexOfPosLin..</text>
</g>
<g >
<title>x64_sys_call (12,912,783 samples, 0.05%)</title><rect x="641.0" y="341" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="644.05" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,342,227 samples, 0.03%)</title><rect x="982.6" y="165" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="985.57" y="175.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (480,637,586 samples, 1.94%)</title><rect x="548.4" y="373" width="22.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="551.38" y="383.5" >e..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (23,219,259 samples, 0.09%)</title><rect x="1001.6" y="293" width="1.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1004.64" y="303.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (6,900,860 samples, 0.03%)</title><rect x="795.7" y="261" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="798.65" y="271.5" ></text>
</g>
<g >
<title>__calc_delta.constprop.0 (6,445,894 samples, 0.03%)</title><rect x="593.6" y="117" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="596.57" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="245" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.60" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,342,227 samples, 0.03%)</title><rect x="982.6" y="133" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="985.57" y="143.5" ></text>
</g>
<g >
<title>put_cpu_partial (7,670,941 samples, 0.03%)</title><rect x="427.4" y="181" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="430.42" y="191.5" ></text>
</g>
<g >
<title>path_openat (3,022,607,350 samples, 12.20%)</title><rect x="802.9" y="261" width="144.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="805.90" y="271.5" >path_openat</text>
</g>
<g >
<title>__slab_free (6,793,421 samples, 0.03%)</title><rect x="770.9" y="277" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="773.86" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (13,620,855 samples, 0.05%)</title><rect x="488.4" y="165" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="491.44" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,664,878,568 samples, 6.72%)</title><rect x="77.0" y="437" width="79.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="80.03" y="447.5" >compiler_..</text>
</g>
<g >
<title>__memset (471,270,718 samples, 1.90%)</title><rect x="960.5" y="245" width="22.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="963.47" y="255.5" >_..</text>
</g>
<g >
<title>hrtimer_interrupt (11,622,345 samples, 0.05%)</title><rect x="155.8" y="373" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="158.79" y="383.5" ></text>
</g>
<g >
<title>file_ra_state_init (45,995,733 samples, 0.19%)</title><rect x="863.9" y="229" width="2.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="866.92" y="239.5" ></text>
</g>
<g >
<title>down_read_killable (29,877,450 samples, 0.12%)</title><rect x="293.1" y="309" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="296.07" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (13,620,855 samples, 0.05%)</title><rect x="488.4" y="181" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="491.44" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="245" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1043.79" y="255.5" ></text>
</g>
<g >
<title>do_dentry_open (1,064,080,959 samples, 4.30%)</title><rect x="857.0" y="245" width="50.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="860.03" y="255.5" >do_de..</text>
</g>
<g >
<title>cache_from_obj (6,956,668 samples, 0.03%)</title><rect x="181.0" y="293" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="184.05" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,555,924 samples, 0.06%)</title><rect x="937.5" y="181" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="940.48" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,956,668 samples, 0.03%)</title><rect x="181.0" y="405" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="184.05" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,632,659,011 samples, 18.70%)</title><rect x="782.4" y="325" width="220.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="785.38" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>getname_flags.part.0 (956,495,977 samples, 3.86%)</title><rect x="953.8" y="277" width="45.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="956.78" y="287.5" >getn..</text>
</g>
<g >
<title>compiler_rt.memset.memset (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="309" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.60" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,555,924 samples, 0.06%)</title><rect x="937.5" y="197" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="940.48" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (16,321,278 samples, 0.07%)</title><rect x="894.9" y="165" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="897.95" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,445,894 samples, 0.03%)</title><rect x="593.6" y="197" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="596.57" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (78,159,627 samples, 0.32%)</title><rect x="1022.5" y="405" width="3.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1025.53" y="415.5" ></text>
</g>
<g >
<title>mntput_no_expire (60,771,798 samples, 0.25%)</title><rect x="619.1" y="309" width="2.9" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="622.07" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="373" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1051.98" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (7,040,711 samples, 0.03%)</title><rect x="375.6" y="149" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="378.62" y="159.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (813,854,101 samples, 3.29%)</title><rect x="446.3" y="261" width="38.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="449.33" y="271.5" >ext..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,920,436 samples, 0.08%)</title><rect x="181.7" y="357" width="0.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="184.73" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,622,345 samples, 0.05%)</title><rect x="155.8" y="357" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="158.79" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,920,436 samples, 0.08%)</title><rect x="181.7" y="245" width="0.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="184.73" y="255.5" ></text>
</g>
<g >
<title>[[x_tables]] (7,502,458 samples, 0.03%)</title><rect x="778.1" y="341" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="781.11" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="389" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1051.98" y="399.5" ></text>
</g>
<g >
<title>kmalloc_slab (66,621,822 samples, 0.27%)</title><rect x="435.7" y="229" width="3.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="438.75" y="239.5" ></text>
</g>
<g >
<title>update_process_times (7,342,227 samples, 0.03%)</title><rect x="982.6" y="117" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="985.57" y="127.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (14,585,130 samples, 0.06%)</title><rect x="1041.5" y="389" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1044.51" y="399.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3954 (40,029,531 samples, 0.16%)</title><rect x="235.2" y="357" width="1.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="238.18" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,622,345 samples, 0.05%)</title><rect x="155.8" y="341" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="158.79" y="351.5" ></text>
</g>
<g >
<title>[[x_tables]] (441,571,136 samples, 1.78%)</title><rect x="878.3" y="197" width="21.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="881.34" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (21,123,246,883 samples, 85.28%)</title><rect x="35.9" y="453" width="1006.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="38.91" y="463.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="213" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1043.79" y="223.5" ></text>
</g>
<g >
<title>htab_map_hash (14,709,974 samples, 0.06%)</title><rect x="879.1" y="149" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="882.11" y="159.5" ></text>
</g>
<g >
<title>cache_from_obj (14,920,686 samples, 0.06%)</title><rect x="617.0" y="293" width="0.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="620.05" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="357" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1043.79" y="367.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (244,865,721 samples, 0.99%)</title><rect x="600.8" y="293" width="11.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="603.77" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,555,924 samples, 0.06%)</title><rect x="937.5" y="165" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="940.48" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (103,811,851 samples, 0.42%)</title><rect x="65.3" y="421" width="4.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="68.27" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (6,867,006 samples, 0.03%)</title><rect x="75.2" y="421" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="78.22" y="431.5" ></text>
</g>
<g >
<title>try_charge_memcg (14,845,140 samples, 0.06%)</title><rect x="1189.3" y="165" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.29" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (7,342,227 samples, 0.03%)</title><rect x="982.6" y="101" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="985.57" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="293" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1043.79" y="303.5" ></text>
</g>
<g >
<title>mntget (6,948,372 samples, 0.03%)</title><rect x="875.1" y="213" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="878.12" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,622,345 samples, 0.05%)</title><rect x="155.8" y="325" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="158.79" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (8,328,321 samples, 0.03%)</title><rect x="69.8" y="405" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="72.82" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="421" width="1.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.60" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (39,973,525 samples, 0.16%)</title><rect x="72.6" y="437" width="1.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="75.63" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,342,227 samples, 0.03%)</title><rect x="982.6" y="213" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="985.57" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (359,994,185 samples, 1.45%)</title><rect x="727.9" y="421" width="17.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="730.88" y="431.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (40,807,755 samples, 0.16%)</title><rect x="489.1" y="261" width="1.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="492.09" y="271.5" ></text>
</g>
<g >
<title>update_irq_load_avg (13,620,855 samples, 0.05%)</title><rect x="488.4" y="101" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="491.44" y="111.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (8,136,064 samples, 0.03%)</title><rect x="590.1" y="309" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="593.05" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,445,894 samples, 0.03%)</title><rect x="593.6" y="213" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="596.57" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (395,784,478 samples, 1.60%)</title><rect x="655.7" y="421" width="18.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="658.75" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,620,855 samples, 0.05%)</title><rect x="488.4" y="229" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="491.44" y="239.5" ></text>
</g>
<g >
<title>rcu_do_batch (6,956,668 samples, 0.03%)</title><rect x="181.0" y="325" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="184.05" y="335.5" ></text>
</g>
<g >
<title>dput (97,522,299 samples, 0.39%)</title><rect x="939.8" y="229" width="4.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="942.84" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,956,668 samples, 0.03%)</title><rect x="181.0" y="389" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="184.05" y="399.5" ></text>
</g>
<g >
<title>__fput_sync (14,632,873 samples, 0.06%)</title><rect x="626.2" y="325" width="0.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="629.22" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,555,924 samples, 0.06%)</title><rect x="937.5" y="229" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="940.48" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="309" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1160.47" y="319.5" ></text>
</g>
<g >
<title>fs.Dir.walk (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="437" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1191.60" y="447.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (108,993,340 samples, 0.44%)</title><rect x="886.1" y="165" width="5.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="889.13" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (38,745,992 samples, 0.16%)</title><rect x="158.2" y="437" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="161.18" y="447.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (6,956,668 samples, 0.03%)</title><rect x="181.0" y="373" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="184.05" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (25,197,177 samples, 0.10%)</title><rect x="796.0" y="261" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="798.98" y="271.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (6,996,097 samples, 0.03%)</title><rect x="606.9" y="261" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="609.94" y="271.5" ></text>
</g>
<g >
<title>___slab_alloc (21,963,697 samples, 0.09%)</title><rect x="426.7" y="213" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="429.74" y="223.5" ></text>
</g>
<g >
<title>may_open (79,969,663 samples, 0.32%)</title><rect x="927.8" y="245" width="3.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="930.75" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (24,604,080 samples, 0.10%)</title><rect x="228.6" y="325" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="231.62" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (8,317,734 samples, 0.03%)</title><rect x="833.4" y="213" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="836.44" y="223.5" ></text>
</g>
<g >
<title>close_fd_get_file (14,419,933 samples, 0.06%)</title><rect x="626.9" y="325" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="629.92" y="335.5" ></text>
</g>
<g >
<title>x64_sys_call (15,334,312 samples, 0.06%)</title><rect x="547.6" y="341" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="550.65" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (625,295,139 samples, 2.52%)</title><rect x="953.8" y="261" width="29.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="956.78" y="271.5" >km..</text>
</g>
<g >
<title>lockref_get_not_zero (9,032,458 samples, 0.04%)</title><rect x="593.9" y="277" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="596.88" y="287.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="453" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.60" y="463.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.next (8,721,055,881 samples, 35.21%)</title><rect x="160.0" y="437" width="415.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="163.02" y="447.5" >fs.Dir.Iterator__struct_3782.next</text>
</g>
<g >
<title>posix.openatZ (5,466,723,830 samples, 22.07%)</title><rect x="759.8" y="389" width="260.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="762.81" y="399.5" >posix.openatZ</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,701,429,625 samples, 18.98%)</title><rect x="779.1" y="341" width="224.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="782.10" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__legitimize_path (47,179,172 samples, 0.19%)</title><rect x="854.8" y="213" width="2.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="857.76" y="223.5" ></text>
</g>
<g >
<title>strncpy_from_user (331,200,838 samples, 1.34%)</title><rect x="983.6" y="261" width="15.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="986.57" y="271.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,354,707,059 samples, 5.47%)</title><rect x="349.3" y="261" width="64.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="352.26" y="271.5" >__ext4_..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="341" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1043.79" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1051.98" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,342,227 samples, 0.03%)</title><rect x="982.6" y="229" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="985.57" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_free (9,363,399 samples, 0.04%)</title><rect x="487.0" y="277" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="489.98" y="287.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (69,405,403 samples, 0.28%)</title><rect x="392.5" y="165" width="3.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="395.54" y="175.5" ></text>
</g>
<g >
<title>debug.inValgrind (7,192,536 samples, 0.03%)</title><rect x="1041.2" y="373" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1044.16" y="383.5" ></text>
</g>
<g >
<title>[unknown] (145,325,162 samples, 0.59%)</title><rect x="763.9" y="373" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="766.94" y="383.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (147,058,643 samples, 0.59%)</title><rect x="843.4" y="213" width="7.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="846.41" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (62,268,197 samples, 0.25%)</title><rect x="544.7" y="341" width="2.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="547.68" y="351.5" ></text>
</g>
<g >
<title>all (24,769,639,277 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (13,343,589 samples, 0.05%)</title><rect x="778.5" y="325" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="781.46" y="335.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (478,219,391 samples, 1.93%)</title><rect x="877.7" y="213" width="22.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="880.69" y="223.5" >b..</text>
</g>
<g >
<title>update_load_avg (13,343,589 samples, 0.05%)</title><rect x="778.5" y="229" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="781.46" y="239.5" ></text>
</g>
<g >
<title>charge_memcg (14,845,140 samples, 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1192.29" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (18,920,436 samples, 0.08%)</title><rect x="181.7" y="261" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="184.73" y="271.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (14,714,154 samples, 0.06%)</title><rect x="575.5" y="437" width="0.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="578.49" y="447.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_3782.nextLinux (8,511,029,961 samples, 34.36%)</title><rect x="166.2" y="421" width="405.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="169.19" y="431.5" >fs.Dir.Iterator__struct_3782.nextLinux</text>
</g>
<g >
<title>meta.hasUniqueRepresentation (6,765,537 samples, 0.03%)</title><rect x="1173.3" y="389" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1176.31" y="399.5" ></text>
</g>
<g >
<title>mutex_unlock (30,874,927 samples, 0.12%)</title><rect x="543.2" y="325" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="546.21" y="335.5" ></text>
</g>
<g >
<title>__filemap_get_folio (407,385,630 samples, 1.64%)</title><rect x="369.1" y="181" width="19.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="372.11" y="191.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (50,421,218 samples, 0.20%)</title><rect x="532.6" y="293" width="2.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="535.62" y="303.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7261 (305,168,738 samples, 1.23%)</title><rect x="1027.0" y="389" width="14.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1029.97" y="399.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_7754 (20,763,345 samples, 0.08%)</title><rect x="237.1" y="341" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="240.08" y="351.5" ></text>
</g>
<g >
<title>native_sched_clock (7,342,227 samples, 0.03%)</title><rect x="982.6" y="37" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="985.57" y="47.5" ></text>
</g>
<g >
<title>mod_memcg_state (7,168,356 samples, 0.03%)</title><rect x="851.1" y="181" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="854.12" y="191.5" ></text>
</g>
<g >
<title>__srcu_read_lock (47,389,446 samples, 0.19%)</title><rect x="632.2" y="261" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="635.22" y="271.5" ></text>
</g>
<g >
<title>__f_unlock_pos (14,694,169 samples, 0.06%)</title><rect x="281.2" y="325" width="0.7" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="284.24" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (69,292,708 samples, 0.28%)</title><rect x="60.2" y="421" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="63.16" y="431.5" ></text>
</g>
<g >
<title>mntput_no_expire (7,109,632 samples, 0.03%)</title><rect x="945.1" y="229" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="948.14" y="239.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (7,670,941 samples, 0.03%)</title><rect x="427.4" y="197" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="430.42" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (193,404,445 samples, 0.78%)</title><rect x="990.1" y="245" width="9.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="993.14" y="255.5" ></text>
</g>
<g >
<title>pick_next_task_fair (13,343,589 samples, 0.05%)</title><rect x="778.5" y="261" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="781.46" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="229" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1043.79" y="239.5" ></text>
</g>
<g >
<title>lapic_next_deadline (6,784,215 samples, 0.03%)</title><rect x="580.3" y="293" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="583.28" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (53,465,352 samples, 0.22%)</title><rect x="1017.3" y="341" width="2.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1020.34" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,019,366 samples, 0.03%)</title><rect x="833.1" y="197" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="836.10" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,445,894 samples, 0.03%)</title><rect x="593.6" y="293" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="596.57" y="303.5" ></text>
</g>
<g >
<title>init_file (285,198,670 samples, 1.15%)</title><rect x="811.7" y="229" width="13.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="814.70" y="239.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (314,202,388 samples, 1.27%)</title><rect x="1173.6" y="405" width="15.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1176.63" y="415.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_8703 (6,069,345 samples, 0.02%)</title><rect x="237.8" y="309" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="240.78" y="319.5" ></text>
</g>
<g >
<title>sched_clock (7,342,227 samples, 0.03%)</title><rect x="982.6" y="53" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="985.57" y="63.5" ></text>
</g>
<g >
<title>__virt_addr_valid (112,152,264 samples, 0.45%)</title><rect x="992.5" y="229" width="5.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="995.51" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="341" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1160.47" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (321,411,233 samples, 1.30%)</title><rect x="420.4" y="229" width="15.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="423.43" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (6,542,759,111 samples, 26.41%)</title><rect x="260.0" y="389" width="311.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="262.95" y="399.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,690,007 samples, 0.06%)</title><rect x="853.5" y="229" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="856.47" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1051.98" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_lock (15,202,877 samples, 0.06%)</title><rect x="939.8" y="213" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="942.84" y="223.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (69,731,510 samples, 0.28%)</title><rect x="895.7" y="181" width="3.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="898.72" y="191.5" ></text>
</g>
<g >
<title>update_process_times (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="261" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1160.47" y="271.5" ></text>
</g>
<g >
<title>inode_to_bdi (15,000,402 samples, 0.06%)</title><rect x="865.4" y="213" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="868.40" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,445,894 samples, 0.03%)</title><rect x="593.6" y="229" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="596.57" y="239.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7548 (877,144,972 samples, 3.54%)</title><rect x="217.7" y="405" width="41.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="220.70" y="415.5" >mem..</text>
</g>
<g >
<title>rb_insert_color (48,393,896 samples, 0.20%)</title><rect x="444.0" y="245" width="2.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="447.02" y="255.5" ></text>
</g>
<g >
<title>lockref_put_return (40,639,719 samples, 0.16%)</title><rect x="595.2" y="293" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="598.23" y="303.5" ></text>
</g>
<g >
<title>kfree (6,969,230 samples, 0.03%)</title><rect x="485.7" y="245" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="488.65" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (88,867,456 samples, 0.36%)</title><rect x="821.1" y="197" width="4.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="824.06" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (26,381,292 samples, 0.11%)</title><rect x="181.4" y="405" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="184.38" y="415.5" ></text>
</g>
<g >
<title>update_process_times (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="309" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1051.98" y="319.5" ></text>
</g>
<g >
<title>security_file_free (89,447,583 samples, 0.36%)</title><rect x="622.0" y="309" width="4.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="624.96" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacityPrecise (6,867,006 samples, 0.03%)</title><rect x="75.2" y="405" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="78.22" y="415.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (70,184,509 samples, 0.28%)</title><rect x="949.7" y="277" width="3.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="952.68" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,281,794,869 samples, 5.17%)</title><rect x="580.6" y="373" width="61.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="583.60" y="383.5" >entry_..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1051.98" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,445,894 samples, 0.03%)</title><rect x="593.6" y="245" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="596.57" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="357" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1160.47" y="367.5" ></text>
</g>
<g >
<title>start._start (24,548,463,623 samples, 99.11%)</title><rect x="20.5" y="549" width="1169.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="23.54" y="559.5" >start._start</text>
</g>
<g >
<title>ext4_htree_store_dirent (682,795,044 samples, 2.76%)</title><rect x="413.8" y="261" width="32.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="416.80" y="271.5" >ex..</text>
</g>
<g >
<title>call_filldir (638,687,576 samples, 2.58%)</title><rect x="305.6" y="293" width="30.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="308.58" y="303.5" >ca..</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (82,871,943 samples, 0.33%)</title><rect x="15.9" y="533" width="4.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.92" y="543.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (14,845,140 samples, 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1192.29" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (7,766,942 samples, 0.03%)</title><rect x="24.7" y="453" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="27.70" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (13,858,683 samples, 0.06%)</title><rect x="797.2" y="261" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="800.18" y="271.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (19,448,313 samples, 0.08%)</title><rect x="1049.3" y="421" width="1.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1052.33" y="431.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7461 (9,975,035 samples, 0.04%)</title><rect x="236.2" y="341" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="239.25" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (58,741,663 samples, 0.24%)</title><rect x="615.0" y="309" width="2.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="617.96" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (13,620,855 samples, 0.05%)</title><rect x="488.4" y="133" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="491.44" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,920,436 samples, 0.08%)</title><rect x="181.7" y="309" width="0.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="184.73" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,676,012,751 samples, 22.92%)</title><rect x="278.0" y="357" width="270.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="280.98" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>__d_lookup_rcu (232,506,117 samples, 0.94%)</title><rect x="916.7" y="229" width="11.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="919.68" y="239.5" ></text>
</g>
<g >
<title>kfree (14,716,225 samples, 0.06%)</title><rect x="612.4" y="293" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="615.43" y="303.5" ></text>
</g>
<g >
<title>generic_permission (12,384,443 samples, 0.05%)</title><rect x="931.0" y="213" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="933.97" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (14,419,933 samples, 0.06%)</title><rect x="626.9" y="309" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="629.92" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,622,345 samples, 0.05%)</title><rect x="155.8" y="405" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="158.79" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,019,366 samples, 0.03%)</title><rect x="833.1" y="149" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="836.10" y="159.5" ></text>
</g>
<g >
<title>locks_remove_posix (104,162,795 samples, 0.42%)</title><rect x="635.8" y="309" width="4.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="638.75" y="319.5" ></text>
</g>
<g >
<title>getname (16,029,347 samples, 0.06%)</title><rect x="953.0" y="277" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="956.02" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,019,366 samples, 0.03%)</title><rect x="833.1" y="133" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="836.10" y="143.5" ></text>
</g>
<g >
<title>__mod_memcg_state (7,168,356 samples, 0.03%)</title><rect x="851.1" y="165" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="854.12" y="175.5" ></text>
</g>
<g >
<title>touch_atime (85,184,265 samples, 0.34%)</title><rect x="535.0" y="309" width="4.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="538.02" y="319.5" ></text>
</g>
<g >
<title>__brelse (14,673,461 samples, 0.06%)</title><rect x="343.1" y="261" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="346.07" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (234,521,706 samples, 0.95%)</title><rect x="641.7" y="373" width="11.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="644.66" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,620,855 samples, 0.05%)</title><rect x="488.4" y="213" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="491.44" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (6,861,566 samples, 0.03%)</title><rect x="579.1" y="421" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="582.05" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (65,689,977 samples, 0.27%)</title><rect x="66.7" y="405" width="3.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="69.69" y="415.5" ></text>
</g>
<g >
<title>ext4_readdir (4,775,893,311 samples, 19.28%)</title><rect x="294.5" y="309" width="227.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="297.49" y="319.5" >ext4_readdir</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,555,924 samples, 0.06%)</title><rect x="937.5" y="213" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="940.48" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,851,857 samples, 0.06%)</title><rect x="538.0" y="245" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="541.02" y="255.5" ></text>
</g>
<g >
<title>__fdget_pos (149,207,179 samples, 0.60%)</title><rect x="281.9" y="325" width="7.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="284.94" y="335.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (108,110,144 samples, 0.44%)</title><rect x="868.9" y="229" width="5.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="871.93" y="239.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9015 (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="325" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.60" y="335.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (46,285,461 samples, 0.19%)</title><rect x="891.3" y="165" width="2.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="894.32" y="175.5" ></text>
</g>
<g >
<title>ext4_bread (1,348,046,934 samples, 5.44%)</title><rect x="349.6" y="245" width="64.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="352.58" y="255.5" >ext4_br..</text>
</g>
<g >
<title>__ext4_check_dir_entry (115,395,593 samples, 0.47%)</title><rect x="343.8" y="261" width="5.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="346.77" y="271.5" ></text>
</g>
<g >
<title>rb_next (49,791,452 samples, 0.20%)</title><rect x="519.6" y="293" width="2.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="522.64" y="303.5" ></text>
</g>
<g >
<title>security_file_permission (89,727,182 samples, 0.36%)</title><rect x="530.7" y="309" width="4.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="533.75" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (5,174,710,574 samples, 20.89%)</title><rect x="773.4" y="357" width="246.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="776.37" y="367.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>dget_parent (9,032,458 samples, 0.04%)</title><rect x="593.9" y="293" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="596.88" y="303.5" ></text>
</g>
<g >
<title>filemap_get_entry (373,608,018 samples, 1.51%)</title><rect x="369.3" y="165" width="17.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="372.35" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="293" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1160.47" y="303.5" ></text>
</g>
<g >
<title>update_curr (11,622,345 samples, 0.05%)</title><rect x="155.8" y="261" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="158.79" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (30,103,890 samples, 0.12%)</title><rect x="1001.6" y="309" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1004.64" y="319.5" ></text>
</g>
<g >
<title>inode_query_iversion (41,144,774 samples, 0.17%)</title><rect x="491.4" y="293" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="494.41" y="303.5" ></text>
</g>
<g >
<title>__memset (56,462,006 samples, 0.23%)</title><rect x="516.9" y="261" width="2.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="519.95" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (7,019,366 samples, 0.03%)</title><rect x="833.1" y="69" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="836.10" y="79.5" ></text>
</g>
<g >
<title>lockref_get (21,700,236 samples, 0.09%)</title><rect x="874.1" y="229" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="877.08" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (17,176,882 samples, 0.07%)</title><rect x="63.8" y="421" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="66.82" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,019,366 samples, 0.03%)</title><rect x="833.1" y="101" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="836.10" y="111.5" ></text>
</g>
<g >
<title>lockref_put_return (82,319,422 samples, 0.33%)</title><rect x="940.6" y="213" width="3.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="943.56" y="223.5" ></text>
</g>
<g >
<title>__schedule (13,343,589 samples, 0.05%)</title><rect x="778.5" y="277" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="781.46" y="287.5" ></text>
</g>
<g >
<title>__kmalloc (438,166,003 samples, 1.77%)</title><rect x="418.0" y="245" width="20.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="421.05" y="255.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (137,707,311 samples, 0.56%)</title><rect x="228.6" y="341" width="6.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="231.62" y="351.5" ></text>
</g>
<g >
<title>psi_account_irqtime (7,019,366 samples, 0.03%)</title><rect x="833.1" y="53" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="836.10" y="63.5" ></text>
</g>
<g >
<title>xas_descend (107,632,771 samples, 0.43%)</title><rect x="380.1" y="133" width="5.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="383.11" y="143.5" ></text>
</g>
<g >
<title>vfs_open (29,586,906 samples, 0.12%)</title><rect x="945.5" y="245" width="1.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="948.48" y="255.5" ></text>
</g>
<g >
<title>handle_softirqs (6,793,421 samples, 0.03%)</title><rect x="770.9" y="325" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="773.86" y="335.5" ></text>
</g>
<g >
<title>posix.toPosixPath (448,390,153 samples, 1.81%)</title><rect x="1020.8" y="421" width="21.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1023.84" y="431.5" >p..</text>
</g>
<g >
<title>os.linux.openat (5,220,507,153 samples, 21.08%)</title><rect x="771.2" y="373" width="248.7" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="774.19" y="383.5" >os.linux.openat</text>
</g>
<g >
<title>is_vmalloc_addr (31,457,793 samples, 0.13%)</title><rect x="997.9" y="229" width="1.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1000.85" y="239.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (133,705,294 samples, 0.54%)</title><rect x="836.4" y="197" width="6.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="839.37" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,920,436 samples, 0.08%)</title><rect x="181.7" y="229" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="184.73" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (549,383,372 samples, 2.22%)</title><rect x="825.3" y="229" width="26.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="828.29" y="239.5" >k..</text>
</g>
<g >
<title>__getblk_gfp (964,761,026 samples, 3.89%)</title><rect x="350.6" y="213" width="45.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="353.59" y="223.5" >__ge..</text>
</g>
<g >
<title>mntput (14,794,503 samples, 0.06%)</title><rect x="618.4" y="309" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="621.36" y="319.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,011,532 samples, 0.03%)</title><rect x="640.7" y="341" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="643.71" y="351.5" ></text>
</g>
<g >
<title>atime_needs_update (85,184,265 samples, 0.34%)</title><rect x="535.0" y="293" width="4.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="538.02" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,378,663 samples, 0.03%)</title><rect x="1049.0" y="341" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1051.98" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,793,421 samples, 0.03%)</title><rect x="770.9" y="357" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="773.86" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,342,227 samples, 0.03%)</title><rect x="982.6" y="149" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="985.57" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="309" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1043.79" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,342,227 samples, 0.03%)</title><rect x="982.6" y="181" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="985.57" y="191.5" ></text>
</g>
<g >
<title>__fget_light (37,286,040 samples, 0.15%)</title><rect x="934.6" y="229" width="1.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="937.63" y="239.5" ></text>
</g>
<g >
<title>[unknown] (318,740,149 samples, 1.29%)</title><rect x="878.3" y="181" width="15.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="881.34" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="277" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1160.47" y="287.5" ></text>
</g>
<g >
<title>search_name_runner.main (24,548,463,623 samples, 99.11%)</title><rect x="20.5" y="485" width="1169.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="23.54" y="495.5" >search_name_runner.main</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (8,681,462 samples, 0.04%)</title><rect x="73.7" y="421" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="76.71" y="431.5" ></text>
</g>
<g >
<title>mem.eql__anon_5137 (37,352,648 samples, 0.15%)</title><rect x="571.6" y="421" width="1.8" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="574.64" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="261" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1191.60" y="271.5" ></text>
</g>
<g >
<title>_raw_read_unlock (30,285,728 samples, 0.12%)</title><rect x="410.7" y="181" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="413.73" y="191.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7187 (334,641,015 samples, 1.35%)</title><rect x="1026.3" y="405" width="15.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1029.26" y="415.5" ></text>
</g>
<g >
<title>ext4_getblk (1,348,046,934 samples, 5.44%)</title><rect x="349.6" y="229" width="64.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="352.58" y="239.5" >ext4_ge..</text>
</g>
<g >
<title>[unknown] (14,493,767 samples, 0.06%)</title><rect x="10.0" y="533" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>path_init (138,653,018 samples, 0.56%)</title><rect x="931.6" y="245" width="6.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="934.56" y="255.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (8,392,103 samples, 0.03%)</title><rect x="818.8" y="197" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="821.79" y="207.5" ></text>
</g>
<g >
<title>__slab_free (75,726,816 samples, 0.31%)</title><rect x="487.4" y="277" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="490.43" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (133,186,755 samples, 0.54%)</title><rect x="513.3" y="277" width="6.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="516.29" y="287.5" ></text>
</g>
<g >
<title>posix.close (1,591,515,541 samples, 6.43%)</title><rect x="579.4" y="421" width="75.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="582.38" y="431.5" >posix.cl..</text>
</g>
<g >
<title>up_read (86,647,382 samples, 0.35%)</title><rect x="539.1" y="309" width="4.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="542.08" y="319.5" ></text>
</g>
<g >
<title>set_next_entity (13,343,589 samples, 0.05%)</title><rect x="778.5" y="245" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="781.46" y="255.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (24,500,084,273 samples, 98.91%)</title><rect x="21.4" y="469" width="1167.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="24.44" y="479.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>fd_install (58,456,910 samples, 0.24%)</title><rect x="946.9" y="277" width="2.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="949.89" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,019,366 samples, 0.03%)</title><rect x="833.1" y="117" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="836.10" y="127.5" ></text>
</g>
<g >
<title>filldir64 (608,174,769 samples, 2.46%)</title><rect x="307.0" y="277" width="29.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="310.03" y="287.5" >fi..</text>
</g>
<g >
<title>trigger_load_balance (14,063,784 samples, 0.06%)</title><rect x="1157.5" y="245" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1160.47" y="255.5" ></text>
</g>
<g >
<title>__update_load_avg_se (13,343,589 samples, 0.05%)</title><rect x="778.5" y="213" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="781.46" y="223.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8148 (435,583,780 samples, 1.76%)</title><rect x="238.1" y="357" width="20.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="241.07" y="367.5" ></text>
</g>
<g >
<title>migrate_disable (29,899,114 samples, 0.12%)</title><rect x="893.5" y="165" width="1.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="896.52" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (5,559,160,649 samples, 22.44%)</title><rect x="279.8" y="341" width="264.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="282.85" y="351.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>__rcu_read_lock (12,442,217 samples, 0.05%)</title><rect x="898.5" y="165" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="901.45" y="175.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (6,793,421 samples, 0.03%)</title><rect x="770.9" y="341" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="773.86" y="351.5" ></text>
</g>
<g >
<title>clockevents_program_event (6,784,215 samples, 0.03%)</title><rect x="580.3" y="309" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="583.28" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (14,013,603 samples, 0.06%)</title><rect x="842.7" y="197" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="845.74" y="207.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (19,900,985 samples, 0.08%)</title><rect x="914.3" y="213" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="917.28" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14,845,140 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.29" y="239.5" ></text>
</g>
<g >
<title>update_rq_clock (13,620,855 samples, 0.05%)</title><rect x="488.4" y="117" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="491.44" y="127.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (98,590,581 samples, 0.40%)</title><rect x="674.6" y="421" width="4.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="677.60" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,490,983,465 samples, 18.13%)</title><rect x="787.7" y="309" width="213.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="790.69" y="319.5" >__x64_sys_openat</text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7771 (374,884,418 samples, 1.51%)</title><rect x="198.9" y="389" width="17.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="201.89" y="399.5" ></text>
</g>
<g >
<title>mutex_lock (55,005,068 samples, 0.22%)</title><rect x="286.4" y="309" width="2.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="289.42" y="319.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (29,466,258 samples, 0.12%)</title><rect x="1188.6" y="341" width="1.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.60" y="351.5" ></text>
</g>
<g >
<title>mem.eqlBytes (293,823,203 samples, 1.19%)</title><rect x="184.9" y="389" width="14.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="187.89" y="399.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (116,957,417 samples, 0.47%)</title><rect x="630.2" y="277" width="5.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="633.18" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,851,857 samples, 0.06%)</title><rect x="538.0" y="229" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="541.02" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,620,855 samples, 0.05%)</title><rect x="488.4" y="245" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="491.44" y="255.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (318,774,535 samples, 1.29%)</title><rect x="469.9" y="229" width="15.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="472.91" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,019,366 samples, 0.03%)</title><rect x="833.1" y="165" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="836.10" y="175.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (186,585,855 samples, 0.75%)</title><rect x="404.9" y="197" width="8.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="407.91" y="207.5" ></text>
</g>
<g >
<title>path_get (6,948,372 samples, 0.03%)</title><rect x="875.1" y="229" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="878.12" y="239.5" ></text>
</g>
<g >
<title>perf_swevent_start (7,904,876 samples, 0.03%)</title><rect x="1040.8" y="197" width="0.4" height="15.0" fill="rgb(228,105,25)" rx="2" ry="2" />
<text  x="1043.79" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (22,525,670 samples, 0.09%)</title><rect x="936.4" y="229" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="939.40" y="239.5" ></text>
</g>
<g >
<title>rcu_do_batch (6,793,421 samples, 0.03%)</title><rect x="770.9" y="293" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="773.86" y="303.5" ></text>
</g>
<g >
<title>security_file_open (662,702,835 samples, 2.68%)</title><rect x="875.4" y="229" width="31.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="878.45" y="239.5" >se..</text>
</g>
<g >
<title>mem.indexOf__anon_3903 (2,993,057,229 samples, 12.08%)</title><rect x="1046.0" y="453" width="142.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1049.01" y="463.5" >mem.indexOf__anon_..</text>
</g>
<g >
<title>xas_start (40,108,367 samples, 0.16%)</title><rect x="385.2" y="133" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="388.23" y="143.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,117,818 samples, 0.03%)</title><rect x="594.9" y="293" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="597.90" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (505,932,748 samples, 2.04%)</title><rect x="655.2" y="437" width="24.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="658.20" y="447.5" >f..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (130,654,902 samples, 0.53%)</title><rect x="64.6" y="437" width="6.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="67.64" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,920,436 samples, 0.08%)</title><rect x="181.7" y="373" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="184.73" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,445,894 samples, 0.03%)</title><rect x="593.6" y="261" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="596.57" y="271.5" ></text>
</g>
<g >
<title>___slab_alloc (9,213,301 samples, 0.04%)</title><rect x="830.5" y="213" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="833.48" y="223.5" ></text>
</g>
<g >
<title>update_process_times (11,622,345 samples, 0.05%)</title><rect x="155.8" y="309" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="158.79" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (20,835,225 samples, 0.08%)</title><rect x="62.5" y="405" width="1.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="65.47" y="415.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (13,691,825 samples, 0.06%)</title><rect x="982.9" y="245" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="985.92" y="255.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_4210 (2,980,134,952 samples, 12.03%)</title><rect x="1046.6" y="437" width="142.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1049.63" y="447.5" >mem.indexOfPos__an..</text>
</g>
<g >
<title>fsnotify (66,469,075 samples, 0.27%)</title><rect x="527.6" y="293" width="3.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="530.58" y="303.5" ></text>
</g>
<g >
<title>errseq_sample (27,900,769 samples, 0.11%)</title><rect x="862.6" y="229" width="1.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="865.59" y="239.5" ></text>
</g>
<g >
<title>posix.errno__anon_7457 (43,204,567 samples, 0.17%)</title><rect x="653.1" y="405" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="656.14" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (6,445,894 samples, 0.03%)</title><rect x="593.6" y="165" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="596.57" y="175.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (5,737,708,567 samples, 23.16%)</title><rect x="746.9" y="421" width="273.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="749.90" y="431.5" >fs.Dir.openDirZ</text>
</g>
</g>
</svg>
