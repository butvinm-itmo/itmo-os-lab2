<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>math.isPowerOfTwo__anon_8450 (11,226,865 samples, 0.04%)</title><rect x="297.7" y="293" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="300.65" y="303.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (34,326,540 samples, 0.11%)</title><rect x="270.7" y="373" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="273.69" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (8,700,154,215 samples, 27.16%)</title><rect x="323.5" y="357" width="320.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="326.54" y="367.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (39,639,214 samples, 0.12%)</title><rect x="78.8" y="437" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="81.82" y="447.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,213,616,451 samples, 3.79%)</title><rect x="423.6" y="181" width="44.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="426.64" y="191.5" >__ge..</text>
</g>
<g >
<title>mmap_region (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="117" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.61" y="127.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (15,687,038 samples, 0.05%)</title><rect x="320.3" y="341" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="323.32" y="351.5" ></text>
</g>
<g >
<title>mem.isAligned (17,732,023 samples, 0.06%)</title><rect x="1189.0" y="229" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1191.95" y="239.5" ></text>
</g>
<g >
<title>handle_softirqs (22,480,770 samples, 0.07%)</title><rect x="1164.6" y="293" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1167.58" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (92,168,187 samples, 0.29%)</title><rect x="144.7" y="405" width="3.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="147.68" y="415.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (24,232,747 samples, 0.08%)</title><rect x="913.6" y="101" width="0.9" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="916.57" y="111.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (16,997,540 samples, 0.05%)</title><rect x="276.6" y="341" width="0.6" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="279.57" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,984,950 samples, 0.03%)</title><rect x="802.9" y="277" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="805.88" y="287.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (44,272,754 samples, 0.14%)</title><rect x="645.8" y="389" width="1.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="648.83" y="399.5" ></text>
</g>
<g >
<title>handle_softirqs (17,485,538 samples, 0.05%)</title><rect x="369.2" y="197" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="372.15" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.walk (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="405" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1191.95" y="415.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (4,340,795,666 samples, 13.55%)</title><rect x="1029.1" y="421" width="159.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1032.07" y="431.5" >mem.indexOf__anon_8672</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (46,840,484 samples, 0.15%)</title><rect x="213.6" y="357" width="1.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="216.58" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,245,842,970 samples, 25.74%)</title><rect x="336.1" y="325" width="303.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="339.12" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>__getblk_gfp (42,118,833 samples, 0.13%)</title><rect x="400.1" y="181" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="403.12" y="191.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="277" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1065.52" y="287.5" ></text>
</g>
<g >
<title>rcu_core (17,476,513 samples, 0.05%)</title><rect x="146.8" y="309" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="149.78" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4,432,867,746 samples, 13.84%)</title><rect x="827.9" y="261" width="163.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="830.89" y="271.5" >do_sys_openat2</text>
</g>
<g >
<title>update_process_times (11,145,414 samples, 0.03%)</title><rect x="150.3" y="277" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="153.34" y="287.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (40,922,843 samples, 0.13%)</title><rect x="711.8" y="245" width="1.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="714.85" y="255.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (552,160,136 samples, 1.72%)</title><rect x="1165.4" y="357" width="20.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1168.41" y="367.5" ></text>
</g>
<g >
<title>sched_clock_cpu (11,145,414 samples, 0.03%)</title><rect x="150.3" y="229" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="153.34" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,313,396 samples, 0.06%)</title><rect x="142.3" y="373" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="145.29" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,145,414 samples, 0.03%)</title><rect x="150.3" y="357" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="153.34" y="367.5" ></text>
</g>
<g >
<title>__find_get_block (42,118,833 samples, 0.13%)</title><rect x="400.1" y="165" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="403.12" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,308,156 samples, 0.04%)</title><rect x="473.1" y="117" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="476.06" y="127.5" ></text>
</g>
<g >
<title>down_read_killable (75,906,162 samples, 0.24%)</title><rect x="356.1" y="277" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="359.06" y="287.5" ></text>
</g>
<g >
<title>debug.inValgrind (173,523,418 samples, 0.54%)</title><rect x="288.2" y="325" width="6.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="291.23" y="335.5" ></text>
</g>
<g >
<title>__srcu_read_lock (22,378,933 samples, 0.07%)</title><rect x="711.8" y="229" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="714.85" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,984,950 samples, 0.03%)</title><rect x="802.9" y="309" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="805.88" y="319.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (1,562,839,202 samples, 4.88%)</title><rect x="21.3" y="469" width="57.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="24.25" y="479.5" >Thread..</text>
</g>
<g >
<title>mem.eql__anon_4894 (10,256,288 samples, 0.03%)</title><rect x="1031.5" y="389" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1034.48" y="399.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (81,012,007 samples, 0.25%)</title><rect x="291.6" y="277" width="3.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="294.64" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,156,860 samples, 0.06%)</title><rect x="348.0" y="213" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="351.03" y="223.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (1,328,816,002 samples, 4.15%)</title><rect x="272.0" y="373" width="48.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="274.96" y="383.5" >mem...</text>
</g>
<g >
<title>__srcu_read_unlock (18,543,910 samples, 0.06%)</title><rect x="712.7" y="229" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="715.67" y="239.5" ></text>
</g>
<g >
<title>close_fd_get_file (124,342,973 samples, 0.39%)</title><rect x="706.1" y="293" width="4.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="709.07" y="303.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.61" y="159.5" ></text>
</g>
<g >
<title>__fsnotify_parent (25,920,688 samples, 0.08%)</title><rect x="355.1" y="277" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="358.11" y="287.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="245" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.95" y="255.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (296,101,572 samples, 0.92%)</title><rect x="410.9" y="229" width="10.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="413.87" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (13,875,281 samples, 0.04%)</title><rect x="345.8" y="261" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="348.84" y="271.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (21,537,305 samples, 0.07%)</title><rect x="961.0" y="245" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="963.99" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (15,691,069 samples, 0.05%)</title><rect x="920.4" y="149" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="923.41" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,473,660 samples, 0.05%)</title><rect x="639.2" y="277" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="642.20" y="287.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (33,863,871 samples, 0.11%)</title><rect x="1185.8" y="357" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1188.75" y="367.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (34,986,077 samples, 0.11%)</title><rect x="906.4" y="133" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="909.37" y="143.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,082,363,605 samples, 3.38%)</title><rect x="480.7" y="229" width="39.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="483.72" y="239.5" >ext..</text>
</g>
<g >
<title>bpf_lsm_file_permission (10,817,138 samples, 0.03%)</title><rect x="605.9" y="261" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="608.92" y="271.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (88,922,749 samples, 0.28%)</title><rect x="881.1" y="197" width="3.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="884.12" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (158,890,445 samples, 0.50%)</title><rect x="15.4" y="469" width="5.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="18.40" y="479.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (941,672,766 samples, 2.94%)</title><rect x="40.0" y="437" width="34.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="42.96" y="447.5" >li..</text>
</g>
<g >
<title>debug.inValgrind (27,527,295 samples, 0.09%)</title><rect x="1027.6" y="341" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1030.62" y="351.5" ></text>
</g>
<g >
<title>__mmdrop (15,700,977 samples, 0.05%)</title><rect x="143.4" y="277" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="146.37" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (30,699,806 samples, 0.10%)</title><rect x="880.0" y="117" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="882.99" y="127.5" ></text>
</g>
<g >
<title>xas_descend (137,620,851 samples, 0.43%)</title><rect x="456.6" y="101" width="5.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="459.58" y="111.5" ></text>
</g>
<g >
<title>getname (35,458,512 samples, 0.11%)</title><rect x="961.8" y="245" width="1.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="964.78" y="255.5" ></text>
</g>
<g >
<title>posix.toPosixPath (684,729,885 samples, 2.14%)</title><rect x="1003.4" y="389" width="25.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1006.41" y="399.5" >p..</text>
</g>
<g >
<title>mem.eqlBytes (17,472,656 samples, 0.05%)</title><rect x="1052.6" y="373" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1055.60" y="383.5" ></text>
</g>
<g >
<title>native_sched_clock (18,313,396 samples, 0.06%)</title><rect x="142.3" y="245" width="0.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="145.29" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (70,128,881 samples, 0.22%)</title><rect x="991.9" y="277" width="2.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="994.89" y="287.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (97,490,380 samples, 0.30%)</title><rect x="872.0" y="181" width="3.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="875.04" y="191.5" ></text>
</g>
<g >
<title>dnotify_flush (40,922,843 samples, 0.13%)</title><rect x="711.8" y="277" width="1.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="714.85" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (137,466,168 samples, 0.43%)</title><rect x="463.3" y="149" width="5.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="466.28" y="159.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (17,732,023 samples, 0.06%)</title><rect x="1189.0" y="213" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1191.95" y="223.5" ></text>
</g>
<g >
<title>debug.assert (17,567,644 samples, 0.05%)</title><rect x="147.4" y="373" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="150.43" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (8,013,336,933 samples, 25.01%)</title><rect x="336.1" y="309" width="295.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="339.12" y="319.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>mas_preallocate (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="85" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1192.61" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,311,413,734 samples, 25.94%)</title><rect x="333.7" y="341" width="306.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="336.71" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>lookup_fast (395,650,564 samples, 1.24%)</title><rect x="926.4" y="213" width="14.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="929.37" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,984,950 samples, 0.03%)</title><rect x="802.9" y="357" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="805.88" y="367.5" ></text>
</g>
<g >
<title>htab_map_hash (34,986,077 samples, 0.11%)</title><rect x="906.4" y="117" width="1.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="909.37" y="127.5" ></text>
</g>
<g >
<title>kmalloc_trace (527,292,415 samples, 1.65%)</title><rect x="572.6" y="261" width="19.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="575.64" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,473,660 samples, 0.05%)</title><rect x="639.2" y="293" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="642.20" y="303.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (53,055,547 samples, 0.17%)</title><rect x="1187.0" y="373" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1190.00" y="383.5" ></text>
</g>
<g >
<title>lockref_put_return (38,831,031 samples, 0.12%)</title><rect x="954.8" y="181" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="957.83" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (289,391,335 samples, 0.90%)</title><rect x="725.0" y="405" width="10.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="728.04" y="415.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1191.95" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (10,743,106 samples, 0.03%)</title><rect x="128.5" y="389" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="131.46" y="399.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,480,770 samples, 0.07%)</title><rect x="1164.6" y="309" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1167.58" y="319.5" ></text>
</g>
<g >
<title>native_sched_clock (11,145,414 samples, 0.03%)</title><rect x="150.3" y="197" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="153.34" y="207.5" ></text>
</g>
<g >
<title>fsnotify (32,454,909 samples, 0.10%)</title><rect x="698.9" y="277" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="701.86" y="287.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (49,482,410 samples, 0.15%)</title><rect x="916.7" y="149" width="1.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="919.74" y="159.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (146,452,768 samples, 0.46%)</title><rect x="899.0" y="197" width="5.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="901.97" y="207.5" ></text>
</g>
<g >
<title>make_vfsuid (63,625,766 samples, 0.20%)</title><rect x="626.3" y="245" width="2.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="629.28" y="255.5" ></text>
</g>
<g >
<title>handle_softirqs (10,877,809 samples, 0.03%)</title><rect x="676.7" y="229" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="679.69" y="239.5" ></text>
</g>
<g >
<title>inode_to_bdi (9,717,114 samples, 0.03%)</title><rect x="895.6" y="181" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="898.61" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,930,373 samples, 0.06%)</title><rect x="871.4" y="117" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="874.38" y="127.5" ></text>
</g>
<g >
<title>file_free_rcu (17,485,538 samples, 0.05%)</title><rect x="369.2" y="149" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="372.15" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (27,045,740 samples, 0.08%)</title><rect x="215.3" y="405" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="218.30" y="415.5" ></text>
</g>
<g >
<title>debug.assert (9,560,603 samples, 0.03%)</title><rect x="803.3" y="357" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="806.29" y="367.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (80,585,987 samples, 0.25%)</title><rect x="911.5" y="117" width="3.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="914.49" y="127.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (23,487,468 samples, 0.07%)</title><rect x="723.0" y="341" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="725.97" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,877,809 samples, 0.03%)</title><rect x="676.7" y="277" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="679.69" y="287.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (87,457,471 samples, 0.27%)</title><rect x="907.7" y="133" width="3.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="910.66" y="143.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (477,740,866 samples, 1.49%)</title><rect x="1011.0" y="373" width="17.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1014.04" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,916,565,246 samples, 5.98%)</title><rect x="653.2" y="357" width="70.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="656.24" y="367.5" >os.linu..</text>
</g>
<g >
<title>ext4_htree_fill_tree (4,300,432,516 samples, 13.42%)</title><rect x="398.5" y="261" width="158.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="401.45" y="271.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>inode_query_iversion (45,222,698 samples, 0.14%)</title><rect x="563.9" y="261" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="566.94" y="271.5" ></text>
</g>
<g >
<title>rebalance_domains (10,877,809 samples, 0.03%)</title><rect x="676.7" y="213" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="679.69" y="223.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (21,824,569 samples, 0.07%)</title><rect x="297.3" y="309" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="300.26" y="319.5" ></text>
</g>
<g >
<title>__mutex_init (11,054,093 samples, 0.03%)</title><rect x="853.8" y="181" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="856.83" y="191.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (32,412,201 samples, 0.10%)</title><rect x="677.1" y="277" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="680.09" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (46,840,484 samples, 0.15%)</title><rect x="213.6" y="325" width="1.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="216.58" y="335.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (30,167,666,307 samples, 94.17%)</title><rect x="78.8" y="453" width="1111.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="81.82" y="463.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,677,542 samples, 0.04%)</title><rect x="545.9" y="181" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="548.94" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,066,625,352 samples, 3.33%)</title><rect x="735.7" y="389" width="39.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="738.70" y="399.5" >com..</text>
</g>
<g >
<title>file_ra_state_init (36,969,006 samples, 0.12%)</title><rect x="894.6" y="197" width="1.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="897.60" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.61" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,710,861 samples, 0.06%)</title><rect x="718.1" y="293" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="721.10" y="303.5" ></text>
</g>
<g >
<title>__brelse (42,441,052 samples, 0.13%)</title><rect x="409.3" y="229" width="1.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="412.31" y="239.5" ></text>
</g>
<g >
<title>step_into (10,353,080 samples, 0.03%)</title><rect x="950.7" y="213" width="0.4" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="953.72" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,145,414 samples, 0.03%)</title><rect x="150.3" y="325" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="153.34" y="335.5" ></text>
</g>
<g >
<title>generic_permission (66,011,911 samples, 0.21%)</title><rect x="943.5" y="181" width="2.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="946.46" y="191.5" ></text>
</g>
<g >
<title>kfree (78,615,414 samples, 0.25%)</title><rect x="694.9" y="245" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="697.88" y="255.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,600,309,537 samples, 5.00%)</title><rect x="421.8" y="229" width="58.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="424.78" y="239.5" >__ext4..</text>
</g>
<g >
<title>__x64_sys_close (1,670,077,136 samples, 5.21%)</title><rect x="656.1" y="309" width="61.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="659.09" y="319.5" >__x64_..</text>
</g>
<g >
<title>__ext4fs_dirhash (825,692,687 samples, 2.58%)</title><rect x="525.3" y="213" width="30.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="528.34" y="223.5" >__..</text>
</g>
<g >
<title>bpf_lsm_file_open (454,467,664 samples, 1.42%)</title><rect x="905.1" y="181" width="16.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="908.13" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (479,366,768 samples, 1.50%)</title><rect x="84.6" y="421" width="17.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="87.57" y="431.5" ></text>
</g>
<g >
<title>rcu_core (10,075,664 samples, 0.03%)</title><rect x="1164.6" y="277" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1167.58" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,877,809 samples, 0.03%)</title><rect x="676.7" y="245" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="679.69" y="255.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (1,484,696,262 samples, 4.63%)</title><rect x="21.3" y="453" width="54.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="24.25" y="463.5" >combi..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (81,437,930 samples, 0.25%)</title><rect x="145.1" y="389" width="3.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="148.08" y="399.5" ></text>
</g>
<g >
<title>os.linux.openat (5,141,227,508 samples, 16.05%)</title><rect x="811.2" y="341" width="189.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="814.22" y="351.5" >os.linux.openat</text>
</g>
<g >
<title>lapic_next_deadline (17,930,373 samples, 0.06%)</title><rect x="871.4" y="85" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="874.38" y="95.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (59,118,318 samples, 0.18%)</title><rect x="130.7" y="389" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="133.68" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (25,468,807 samples, 0.08%)</title><rect x="909.9" y="117" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="912.94" y="127.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (40,922,843 samples, 0.13%)</title><rect x="711.8" y="261" width="1.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="714.85" y="271.5" ></text>
</g>
<g >
<title>do_dentry_open (956,083,259 samples, 2.98%)</title><rect x="887.0" y="213" width="35.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="890.04" y="223.5" >do..</text>
</g>
<g >
<title>__memset (22,800,468 samples, 0.07%)</title><rect x="861.1" y="149" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="864.10" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,930,373 samples, 0.06%)</title><rect x="871.4" y="165" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="874.38" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (17,507,877 samples, 0.05%)</title><rect x="480.1" y="133" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="483.08" y="143.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (23,872,111 samples, 0.07%)</title><rect x="921.0" y="149" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="923.99" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,473,660 samples, 0.05%)</title><rect x="639.2" y="245" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="642.20" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (91,391,352 samples, 0.29%)</title><rect x="148.1" y="405" width="3.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="151.07" y="415.5" ></text>
</g>
<g >
<title>___slab_alloc (58,126,929 samples, 0.18%)</title><rect x="868.3" y="181" width="2.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="871.31" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (11,446,964 samples, 0.04%)</title><rect x="957.6" y="181" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="960.57" y="191.5" ></text>
</g>
<g >
<title>posix.openatZ (5,413,002,741 samples, 16.90%)</title><rect x="804.0" y="357" width="199.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="807.03" y="367.5" >posix.openatZ</text>
</g>
<g >
<title>folio_mark_accessed (12,141,368 samples, 0.04%)</title><rect x="462.8" y="133" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="465.83" y="143.5" ></text>
</g>
<g >
<title>debug.assert (17,137,711 samples, 0.05%)</title><rect x="127.8" y="373" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="130.83" y="383.5" ></text>
</g>
<g >
<title>schedule (15,700,977 samples, 0.05%)</title><rect x="143.4" y="325" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="146.37" y="335.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (954,615,196 samples, 2.98%)</title><rect x="520.6" y="229" width="35.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="523.59" y="239.5" >ex..</text>
</g>
<g >
<title>__kmalloc (661,930,483 samples, 2.07%)</title><rect x="489.9" y="213" width="24.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="492.95" y="223.5" >_..</text>
</g>
<g >
<title>pick_file (13,893,537 samples, 0.04%)</title><rect x="710.1" y="277" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="713.14" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,677,542 samples, 0.04%)</title><rect x="545.9" y="101" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="548.94" y="111.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (26,607,137 samples, 0.08%)</title><rect x="143.0" y="389" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="145.97" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,156,860 samples, 0.06%)</title><rect x="348.0" y="261" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="351.03" y="271.5" ></text>
</g>
<g >
<title>atime_needs_update (276,224,772 samples, 0.86%)</title><rect x="618.4" y="261" width="10.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="621.44" y="271.5" ></text>
</g>
<g >
<title>c.clone (31,730,505,509 samples, 99.05%)</title><rect x="21.3" y="501" width="1168.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.25" y="511.5" >c.clone</text>
</g>
<g >
<title>obj_cgroup_charge (78,370,132 samples, 0.24%)</title><rect x="878.2" y="181" width="2.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="881.23" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (228,289,648 samples, 0.71%)</title><rect x="121.4" y="405" width="8.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="124.44" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,491,315 samples, 0.07%)</title><rect x="1164.6" y="341" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1167.58" y="351.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (96,911,755 samples, 0.30%)</title><rect x="634.3" y="293" width="3.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="637.29" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,627,713,851 samples, 5.08%)</title><rect x="155.3" y="405" width="60.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="158.35" y="415.5" >compil..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (155,445,277 samples, 0.49%)</title><rect x="122.7" y="389" width="5.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="125.73" y="399.5" ></text>
</g>
<g >
<title>mutex_lock (63,636,915 samples, 0.20%)</title><rect x="346.4" y="277" width="2.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="349.35" y="287.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (15,740,047 samples, 0.05%)</title><rect x="645.2" y="389" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="648.25" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (59,293,289 samples, 0.19%)</title><rect x="790.3" y="389" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="793.27" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (17,930,373 samples, 0.06%)</title><rect x="871.4" y="69" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="874.38" y="79.5" ></text>
</g>
<g >
<title>debug.assert (54,745,162 samples, 0.17%)</title><rect x="294.6" y="309" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="297.62" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (5,034,882,297 samples, 15.72%)</title><rect x="815.1" y="325" width="185.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="818.13" y="335.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="373" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.95" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (26,981,599 samples, 0.08%)</title><rect x="128.9" y="389" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="131.85" y="399.5" ></text>
</g>
<g >
<title>__call_rcu_common (202,202,158 samples, 0.63%)</title><rect x="671.3" y="293" width="7.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="674.26" y="303.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (254,634,573 samples, 0.79%)</title><rect x="546.4" y="197" width="9.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="549.37" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (46,840,484 samples, 0.15%)</title><rect x="213.6" y="309" width="1.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="216.58" y="319.5" ></text>
</g>
<g >
<title>debug.assert (11,803,956 samples, 0.04%)</title><rect x="154.9" y="389" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="157.91" y="399.5" ></text>
</g>
<g >
<title>___slab_alloc (57,174,887 samples, 0.18%)</title><rect x="508.6" y="181" width="2.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="511.64" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (122,852,177 samples, 0.38%)</title><rect x="1006.1" y="373" width="4.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1009.11" y="383.5" ></text>
</g>
<g >
<title>mntput_no_expire (15,033,193 samples, 0.05%)</title><rect x="702.8" y="277" width="0.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="705.81" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (54,003,368 samples, 0.17%)</title><rect x="637.9" y="309" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="640.86" y="319.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (456,491,335 samples, 1.42%)</title><rect x="1011.8" y="357" width="16.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1014.82" y="367.5" ></text>
</g>
<g >
<title>kfree (29,820,723 samples, 0.09%)</title><rect x="555.8" y="213" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="558.75" y="223.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,631,294,565 samples, 11.34%)</title><rect x="1053.2" y="373" width="133.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1056.24" y="383.5" >mem.eql__anon_4894</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="357" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1065.52" y="367.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,781,524,021 samples, 8.68%)</title><rect x="1063.0" y="357" width="102.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1065.96" y="367.5" >mem.eqlBytes</text>
</g>
<g >
<title>rcu_core (11,677,542 samples, 0.04%)</title><rect x="545.9" y="133" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="548.94" y="143.5" ></text>
</g>
<g >
<title>complete_walk (71,834,396 samples, 0.22%)</title><rect x="884.4" y="213" width="2.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="887.39" y="223.5" ></text>
</g>
<g >
<title>__filemap_get_folio (519,565,527 samples, 1.62%)</title><rect x="444.1" y="149" width="19.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="447.14" y="159.5" ></text>
</g>
<g >
<title>rcu_core (17,485,538 samples, 0.05%)</title><rect x="369.2" y="181" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="372.15" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,476,513 samples, 0.05%)</title><rect x="146.8" y="357" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="149.78" y="367.5" ></text>
</g>
<g >
<title>handle_softirqs (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="309" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1065.52" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (320,891,205 samples, 1.00%)</title><rect x="132.9" y="405" width="11.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="135.86" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,145,414 samples, 0.03%)</title><rect x="150.3" y="309" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="153.34" y="319.5" ></text>
</g>
<g >
<title>_raw_read_lock (28,398,830 samples, 0.09%)</title><rect x="475.6" y="149" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="478.56" y="159.5" ></text>
</g>
<g >
<title>fsnotify (134,649,207 samples, 0.42%)</title><rect x="593.4" y="277" width="4.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="596.37" y="287.5" ></text>
</g>
<g >
<title>up_read (61,306,070 samples, 0.19%)</title><rect x="628.6" y="277" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="631.62" y="287.5" ></text>
</g>
<g >
<title>update_process_times (17,473,660 samples, 0.05%)</title><rect x="639.2" y="181" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="642.20" y="191.5" ></text>
</g>
<g >
<title>fput (27,939,530 samples, 0.09%)</title><rect x="949.7" y="197" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="952.69" y="207.5" ></text>
</g>
<g >
<title>touch_atime (605,379,008 samples, 1.89%)</title><rect x="606.3" y="277" width="22.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="609.32" y="287.5" >t..</text>
</g>
<g >
<title>os.linux.close (1,916,565,246 samples, 5.98%)</title><rect x="653.2" y="373" width="70.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="656.24" y="383.5" >os.linu..</text>
</g>
<g >
<title>mod_memcg_state (30,699,806 samples, 0.10%)</title><rect x="880.0" y="149" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="882.99" y="159.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (93,688,580 samples, 0.29%)</title><rect x="470.0" y="149" width="3.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="473.03" y="159.5" ></text>
</g>
<g >
<title>mntput_no_expire (36,306,869 samples, 0.11%)</title><rect x="956.7" y="197" width="1.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="959.65" y="207.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (15,700,977 samples, 0.05%)</title><rect x="143.4" y="245" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="146.37" y="255.5" ></text>
</g>
<g >
<title>filp_flush (188,895,393 samples, 0.59%)</title><rect x="710.6" y="293" width="7.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="713.65" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,329,141 samples, 0.03%)</title><rect x="957.2" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="960.19" y="191.5" ></text>
</g>
<g >
<title>__legitimize_path (56,318,812 samples, 0.18%)</title><rect x="884.4" y="181" width="2.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="887.39" y="191.5" ></text>
</g>
<g >
<title>find_busiest_group (10,877,809 samples, 0.03%)</title><rect x="676.7" y="181" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="679.69" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (29,004,432 samples, 0.09%)</title><rect x="214.2" y="245" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="217.24" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (17,473,660 samples, 0.05%)</title><rect x="639.2" y="149" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="642.20" y="159.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1065.52" y="271.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (78,115,227 samples, 0.24%)</title><rect x="75.9" y="453" width="2.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="78.94" y="463.5" ></text>
</g>
<g >
<title>ext4_map_blocks (336,123,812 samples, 1.05%)</title><rect x="468.3" y="181" width="12.4" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="471.34" y="191.5" ></text>
</g>
<g >
<title>debug.assert (15,371,882 samples, 0.05%)</title><rect x="800.2" y="373" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="803.16" y="383.5" ></text>
</g>
<g >
<title>debug.assert (10,975,638 samples, 0.03%)</title><rect x="126.6" y="357" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="129.62" y="367.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (1,221,315,332 samples, 3.81%)</title><rect x="275.9" y="357" width="45.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="278.92" y="367.5" >mem...</text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (1,159,153,681 samples, 3.62%)</title><rect x="277.2" y="341" width="42.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="280.19" y="351.5" >mem...</text>
</g>
<g >
<title>inode_permission (82,739,909 samples, 0.26%)</title><rect x="942.8" y="197" width="3.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="945.84" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,473,660 samples, 0.05%)</title><rect x="639.2" y="229" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="642.20" y="239.5" ></text>
</g>
<g >
<title>put_cpu_partial (11,308,156 samples, 0.04%)</title><rect x="473.1" y="37" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="476.06" y="47.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (28,098,857 samples, 0.09%)</title><rect x="1029.5" y="405" width="1.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1032.54" y="415.5" ></text>
</g>
<g >
<title>[unknown] (305,550,749 samples, 0.95%)</title><rect x="10.0" y="501" width="11.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (4,212,929,723 samples, 13.15%)</title><rect x="401.7" y="245" width="155.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="404.68" y="255.5" >htree_dirblock_to_t..</text>
</g>
<g >
<title>generic_permission (17,686,689 samples, 0.06%)</title><rect x="924.7" y="181" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="927.74" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,313,396 samples, 0.06%)</title><rect x="142.3" y="357" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="145.29" y="367.5" ></text>
</g>
<g >
<title>mem.isAligned (31,518,457 samples, 0.10%)</title><rect x="298.1" y="325" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="301.06" y="335.5" ></text>
</g>
<g >
<title>posix.mmap (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.61" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_free (168,384,943 samples, 0.53%)</title><rect x="686.5" y="245" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="689.53" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,075,664 samples, 0.03%)</title><rect x="1164.6" y="245" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1167.58" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="325" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1065.52" y="335.5" ></text>
</g>
<g >
<title>__schedule (15,700,977 samples, 0.05%)</title><rect x="143.4" y="309" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="146.37" y="319.5" ></text>
</g>
<g >
<title>update_group_capacity (10,877,809 samples, 0.03%)</title><rect x="676.7" y="149" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="679.69" y="159.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (21,147,301 samples, 0.07%)</title><rect x="869.7" y="165" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="872.67" y="175.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (27,527,295 samples, 0.09%)</title><rect x="1027.6" y="325" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1030.62" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (69,245,504 samples, 0.22%)</title><rect x="245.1" y="373" width="2.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="248.09" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,156,860 samples, 0.06%)</title><rect x="348.0" y="229" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="351.03" y="239.5" ></text>
</g>
<g >
<title>_raw_read_unlock (19,238,169 samples, 0.06%)</title><rect x="476.6" y="149" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="479.61" y="159.5" ></text>
</g>
<g >
<title>call_filldir (897,807,622 samples, 2.80%)</title><rect x="365.4" y="261" width="33.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="368.38" y="271.5" >ca..</text>
</g>
<g >
<title>posix.errno__anon_7363 (32,791,388 samples, 0.10%)</title><rect x="723.8" y="373" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="726.83" y="383.5" ></text>
</g>
<g >
<title>lockref_put_return (34,847,839 samples, 0.11%)</title><rect x="681.9" y="261" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="684.94" y="271.5" ></text>
</g>
<g >
<title>clockevents_program_event (17,930,373 samples, 0.06%)</title><rect x="871.4" y="101" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="874.38" y="111.5" ></text>
</g>
<g >
<title>ext4_readdir (6,366,775,858 samples, 19.87%)</title><rect x="358.9" y="277" width="234.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="361.86" y="287.5" >ext4_readdir</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (205,648,248 samples, 0.64%)</title><rect x="726.0" y="389" width="7.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="728.98" y="399.5" ></text>
</g>
<g >
<title>security_file_free (27,788,216 samples, 0.09%)</title><rect x="703.4" y="277" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="706.36" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.61" y="191.5" ></text>
</g>
<g >
<title>__legitimize_mnt (35,977,967 samples, 0.11%)</title><rect x="884.4" y="165" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="887.39" y="175.5" ></text>
</g>
<g >
<title>__fput_sync (30,566,293 samples, 0.10%)</title><rect x="704.4" y="293" width="1.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="707.38" y="303.5" ></text>
</g>
<g >
<title>update_process_times (46,840,484 samples, 0.15%)</title><rect x="213.6" y="277" width="1.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="216.58" y="287.5" ></text>
</g>
<g >
<title>iterate_dir (7,573,957,724 samples, 23.64%)</title><rect x="351.9" y="293" width="279.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="354.90" y="303.5" >iterate_dir</text>
</g>
<g >
<title>os.linux.errnoFromSyscall (36,911,274 samples, 0.12%)</title><rect x="320.9" y="373" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="323.90" y="383.5" ></text>
</g>
<g >
<title>errseq_sample (9,659,512 samples, 0.03%)</title><rect x="894.2" y="197" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="897.25" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (46,840,484 samples, 0.15%)</title><rect x="213.6" y="293" width="1.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="216.58" y="303.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (60,984,057 samples, 0.19%)</title><rect x="399.4" y="229" width="2.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="402.43" y="239.5" ></text>
</g>
<g >
<title>handle_softirqs (11,308,156 samples, 0.04%)</title><rect x="473.1" y="85" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="476.06" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (46,840,484 samples, 0.15%)</title><rect x="213.6" y="373" width="1.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="216.58" y="383.5" ></text>
</g>
<g >
<title>ext4_release_dir (424,531,310 samples, 1.33%)</title><rect x="683.2" y="277" width="15.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="686.22" y="287.5" ></text>
</g>
<g >
<title>load_balance (12,405,106 samples, 0.04%)</title><rect x="1165.0" y="261" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1167.96" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="389" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.95" y="399.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (281,567,028 samples, 0.88%)</title><rect x="260.3" y="357" width="10.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="263.32" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (18,156,860 samples, 0.06%)</title><rect x="348.0" y="133" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="351.03" y="143.5" ></text>
</g>
<g >
<title>update_process_times (10,984,950 samples, 0.03%)</title><rect x="802.9" y="245" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="805.88" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,700,977 samples, 0.05%)</title><rect x="143.4" y="341" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="146.37" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (11,717,011 samples, 0.04%)</title><rect x="1028.6" y="405" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1031.63" y="415.5" ></text>
</g>
<g >
<title>path_openat (3,045,809,282 samples, 9.51%)</title><rect x="845.8" y="229" width="112.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="848.80" y="239.5" >path_openat</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,930,373 samples, 0.06%)</title><rect x="871.4" y="149" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="874.38" y="159.5" ></text>
</g>
<g >
<title>kmalloc_slab (42,121,970 samples, 0.13%)</title><rect x="512.8" y="197" width="1.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="515.78" y="207.5" ></text>
</g>
<g >
<title>ext4_bread (42,118,833 samples, 0.13%)</title><rect x="400.1" y="213" width="1.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="403.12" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (18,697,242 samples, 0.06%)</title><rect x="150.8" y="389" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="153.75" y="399.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (19,531,142 samples, 0.06%)</title><rect x="991.2" y="277" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="994.17" y="287.5" ></text>
</g>
<g >
<title>rb_next (35,446,346 samples, 0.11%)</title><rect x="592.1" y="261" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="595.07" y="271.5" ></text>
</g>
<g >
<title>fs.Dir.close (2,106,329,250 samples, 6.57%)</title><rect x="647.5" y="405" width="77.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="650.46" y="415.5" >fs.Dir.c..</text>
</g>
<g >
<title>__slab_free (76,483,974 samples, 0.24%)</title><rect x="559.9" y="245" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="562.95" y="255.5" ></text>
</g>
<g >
<title>dx_probe (60,984,057 samples, 0.19%)</title><rect x="399.4" y="245" width="2.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="402.43" y="255.5" ></text>
</g>
<g >
<title>psi_account_irqtime (11,145,414 samples, 0.03%)</title><rect x="150.3" y="245" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="153.34" y="255.5" ></text>
</g>
<g >
<title>fsnotify (81,663,602 samples, 0.25%)</title><rect x="896.0" y="197" width="3.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="898.97" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (17,473,660 samples, 0.05%)</title><rect x="639.2" y="165" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="642.20" y="175.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (27,527,295 samples, 0.09%)</title><rect x="1027.6" y="309" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1030.62" y="319.5" ></text>
</g>
<g >
<title>__virt_addr_valid (79,807,621 samples, 0.25%)</title><rect x="982.1" y="197" width="3.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="985.13" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,485,538 samples, 0.05%)</title><rect x="369.2" y="245" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="372.15" y="255.5" ></text>
</g>
<g >
<title>call_rcu (15,144,147 samples, 0.05%)</title><rect x="705.5" y="293" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="708.51" y="303.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,308,156 samples, 0.04%)</title><rect x="473.1" y="53" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="476.06" y="63.5" ></text>
</g>
<g >
<title>mem.eqlBytes (232,271,664 samples, 0.73%)</title><rect x="251.8" y="357" width="8.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="254.77" y="367.5" ></text>
</g>
<g >
<title>fsnotify (128,630,799 samples, 0.40%)</title><rect x="899.6" y="181" width="4.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="902.63" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (56,638,608 samples, 0.18%)</title><rect x="557.9" y="245" width="2.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="560.86" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,984,950 samples, 0.03%)</title><rect x="802.9" y="261" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="805.88" y="271.5" ></text>
</g>
<g >
<title>filldir64 (777,917,865 samples, 2.43%)</title><rect x="369.8" y="245" width="28.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="372.80" y="255.5" >fi..</text>
</g>
<g >
<title>rcu_core (11,308,156 samples, 0.04%)</title><rect x="473.1" y="69" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="476.06" y="79.5" ></text>
</g>
<g >
<title>ext4_bread (1,570,490,167 samples, 4.90%)</title><rect x="422.9" y="213" width="57.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="425.88" y="223.5" >ext4_b..</text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (146,660,304 samples, 0.46%)</title><rect x="10.0" y="485" width="5.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (80,167,134 samples, 0.25%)</title><rect x="330.8" y="341" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="333.76" y="351.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (110,498,731 samples, 0.34%)</title><rect x="994.5" y="309" width="4.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="997.47" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (158,890,445 samples, 0.50%)</title><rect x="15.4" y="485" width="5.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.40" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,473,660 samples, 0.05%)</title><rect x="639.2" y="261" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="642.20" y="271.5" ></text>
</g>
<g >
<title>xas_load (301,886,692 samples, 0.94%)</title><rect x="451.7" y="117" width="11.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="454.71" y="127.5" ></text>
</g>
<g >
<title>do_mmap (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="133" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.61" y="143.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (17,623,512 samples, 0.06%)</title><rect x="971.5" y="213" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="974.54" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (5,502,834,654 samples, 17.18%)</title><rect x="800.7" y="373" width="202.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="803.72" y="383.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (11,405,634,349 samples, 35.60%)</title><rect x="225.1" y="389" width="420.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="228.14" y="399.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>__rcu_read_unlock (17,546,261 samples, 0.05%)</title><rect x="472.4" y="133" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="475.41" y="143.5" ></text>
</g>
<g >
<title>mem.isAligned (11,823,075 samples, 0.04%)</title><rect x="319.9" y="341" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="322.89" y="351.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (31,518,457 samples, 0.10%)</title><rect x="298.1" y="309" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="301.06" y="319.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (609,457,327 samples, 1.90%)</title><rect x="963.1" y="245" width="22.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="966.09" y="255.5" >g..</text>
</g>
<g >
<title>bpf_probe_read_kernel (97,240,382 samples, 0.30%)</title><rect x="910.9" y="133" width="3.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="913.88" y="143.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9249 (11,821,349 samples, 0.04%)</title><rect x="298.8" y="261" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="301.79" y="271.5" ></text>
</g>
<g >
<title>check_stack_object (12,627,594 samples, 0.04%)</title><rect x="985.1" y="197" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="988.07" y="207.5" ></text>
</g>
<g >
<title>__memset (43,113,299 samples, 0.13%)</title><rect x="870.5" y="181" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="873.45" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (29,853,641 samples, 0.09%)</title><rect x="152.5" y="389" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="155.47" y="399.5" ></text>
</g>
<g >
<title>fsnotify (12,476,213 samples, 0.04%)</title><rect x="355.6" y="261" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="358.60" y="271.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (625,943,546 samples, 1.95%)</title><rect x="247.6" y="373" width="23.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="250.64" y="383.5" >m..</text>
</g>
<g >
<title>debug.assert (18,227,520 samples, 0.06%)</title><rect x="792.5" y="389" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="795.45" y="399.5" ></text>
</g>
<g >
<title>xas_start (32,264,850 samples, 0.10%)</title><rect x="461.6" y="101" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="464.64" y="111.5" ></text>
</g>
<g >
<title>legitimize_links (15,515,584 samples, 0.05%)</title><rect x="886.5" y="181" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="889.47" y="191.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (560,980,282 samples, 1.75%)</title><rect x="299.2" y="325" width="20.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="302.23" y="335.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (4,264,987,798 samples, 13.31%)</title><rect x="1031.9" y="389" width="157.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1034.86" y="399.5" >mem.indexOfPosLinear..</text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1191.95" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.95" y="351.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (29,603,594 samples, 0.09%)</title><rect x="914.5" y="133" width="1.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="917.46" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,930,373 samples, 0.06%)</title><rect x="871.4" y="133" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="874.38" y="143.5" ></text>
</g>
<g >
<title>__fget_light (91,104,362 samples, 0.28%)</title><rect x="946.3" y="197" width="3.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="949.33" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,690,451,594 samples, 14.64%)</title><rect x="821.7" y="293" width="172.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="824.71" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>_raw_spin_lock (91,546,281 samples, 0.29%)</title><rect x="706.8" y="277" width="3.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="709.76" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (36,683,493 samples, 0.11%)</title><rect x="651.9" y="389" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="654.89" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,984,950 samples, 0.03%)</title><rect x="802.9" y="341" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="805.88" y="351.5" ></text>
</g>
<g >
<title>rb_first_postorder (18,630,755 samples, 0.06%)</title><rect x="697.8" y="245" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="700.78" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,156,860 samples, 0.06%)</title><rect x="348.0" y="245" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="351.03" y="255.5" ></text>
</g>
<g >
<title>terminate_walk (187,076,021 samples, 0.58%)</title><rect x="951.1" y="213" width="6.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="954.10" y="223.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (30,167,666,307 samples, 94.17%)</title><rect x="78.8" y="469" width="1111.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="81.82" y="479.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>path_init (131,016,467 samples, 0.41%)</title><rect x="945.9" y="213" width="4.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="948.89" y="223.5" ></text>
</g>
<g >
<title>fd_install (81,396,979 samples, 0.25%)</title><rect x="958.0" y="245" width="3.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="960.99" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (556,580,134 samples, 1.74%)</title><rect x="492.3" y="197" width="20.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="495.28" y="207.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,485,538 samples, 0.05%)</title><rect x="369.2" y="213" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="372.15" y="223.5" ></text>
</g>
<g >
<title>[[x_tables]] (17,028,221 samples, 0.05%)</title><rect x="817.3" y="309" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="820.34" y="319.5" ></text>
</g>
<g >
<title>posix.close (1,949,356,634 samples, 6.08%)</title><rect x="653.2" y="389" width="71.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="656.24" y="399.5" >posix.cl..</text>
</g>
<g >
<title>inode_permission (36,054,089 samples, 0.11%)</title><rect x="924.1" y="197" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="927.06" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,145,414 samples, 0.03%)</title><rect x="150.3" y="293" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="153.34" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (70,564,068 samples, 0.22%)</title><rect x="875.6" y="181" width="2.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="878.63" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (46,840,484 samples, 0.15%)</title><rect x="213.6" y="341" width="1.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="216.58" y="351.5" ></text>
</g>
<g >
<title>verify_dirent_name (276,261,474 samples, 0.86%)</title><rect x="388.3" y="229" width="10.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="391.28" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,984,950 samples, 0.03%)</title><rect x="802.9" y="325" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="805.88" y="335.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (93,688,580 samples, 0.29%)</title><rect x="470.0" y="165" width="3.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="473.03" y="175.5" ></text>
</g>
<g >
<title>is_dx_dir (191,146,552 samples, 0.60%)</title><rect x="565.6" y="261" width="7.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="568.60" y="271.5" ></text>
</g>
<g >
<title>memchr (143,261,262 samples, 0.45%)</title><rect x="393.2" y="213" width="5.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="396.18" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (127,323,773 samples, 0.40%)</title><rect x="10.0" y="469" width="4.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>rb_next_postorder (15,742,803 samples, 0.05%)</title><rect x="563.4" y="245" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="566.36" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,480,770 samples, 0.07%)</title><rect x="1164.6" y="325" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1167.58" y="335.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (29,820,723 samples, 0.09%)</title><rect x="555.8" y="229" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="558.75" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (28,725,459 samples, 0.09%)</title><rect x="861.9" y="149" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="864.94" y="159.5" ></text>
</g>
<g >
<title>rebalance_domains (12,405,106 samples, 0.04%)</title><rect x="1165.0" y="277" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1167.96" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (11,145,414 samples, 0.03%)</title><rect x="150.3" y="261" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="153.34" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (23,808,831 samples, 0.07%)</title><rect x="467.5" y="133" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="470.47" y="143.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (19,904,504 samples, 0.06%)</title><rect x="143.9" y="389" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="146.95" y="399.5" ></text>
</g>
<g >
<title>handle_softirqs (11,677,542 samples, 0.04%)</title><rect x="545.9" y="149" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="548.94" y="159.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (30,099,580,280 samples, 93.96%)</title><rect x="80.3" y="437" width="1108.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="83.28" y="447.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (14,029,027 samples, 0.04%)</title><rect x="857.5" y="165" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="860.47" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (491,822,892 samples, 1.54%)</title><rect x="863.0" y="197" width="18.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="866.00" y="207.5" ></text>
</g>
<g >
<title>[[x_tables]] (454,467,664 samples, 1.42%)</title><rect x="905.1" y="165" width="16.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="908.13" y="175.5" ></text>
</g>
<g >
<title>try_to_unlazy (71,834,396 samples, 0.22%)</title><rect x="884.4" y="197" width="2.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="887.39" y="207.5" ></text>
</g>
<g >
<title>load_balance (10,877,809 samples, 0.03%)</title><rect x="676.7" y="197" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="679.69" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,485,538 samples, 0.05%)</title><rect x="369.2" y="165" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="372.15" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,156,860 samples, 0.06%)</title><rect x="348.0" y="197" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="351.03" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,075,664 samples, 0.03%)</title><rect x="1164.6" y="261" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1167.58" y="271.5" ></text>
</g>
<g >
<title>handle_softirqs (17,476,513 samples, 0.05%)</title><rect x="146.8" y="325" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="149.78" y="335.5" ></text>
</g>
<g >
<title>debug.assert (11,032,514 samples, 0.03%)</title><rect x="1010.6" y="373" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1013.63" y="383.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (46,298,160 samples, 0.14%)</title><rect x="835.9" y="229" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="838.90" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (93,705,295 samples, 0.29%)</title><rect x="123.6" y="373" width="3.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="126.57" y="383.5" ></text>
</g>
<g >
<title>all (32,036,056,258 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,677,542 samples, 0.04%)</title><rect x="545.9" y="165" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="548.94" y="175.5" ></text>
</g>
<g >
<title>may_open (134,207,187 samples, 0.42%)</title><rect x="940.9" y="213" width="5.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="943.95" y="223.5" ></text>
</g>
<g >
<title>rb_next_postorder (10,844,847 samples, 0.03%)</title><rect x="698.5" y="245" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="701.46" y="255.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.61" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,145,414 samples, 0.03%)</title><rect x="150.3" y="341" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="153.34" y="351.5" ></text>
</g>
<g >
<title>__check_object_size (173,671,719 samples, 0.54%)</title><rect x="979.1" y="213" width="6.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="982.14" y="223.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (173,523,418 samples, 0.54%)</title><rect x="288.2" y="309" width="6.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="291.23" y="319.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (111,851,670 samples, 0.35%)</title><rect x="922.3" y="213" width="4.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="925.25" y="223.5" ></text>
</g>
<g >
<title>ext4_getblk (42,118,833 samples, 0.13%)</title><rect x="400.1" y="197" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="403.12" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (17,476,513 samples, 0.05%)</title><rect x="146.8" y="277" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="149.78" y="287.5" ></text>
</g>
<g >
<title>security_file_alloc (237,920,813 samples, 0.74%)</title><rect x="854.2" y="181" width="8.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="857.24" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (17,476,513 samples, 0.05%)</title><rect x="146.8" y="341" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="149.78" y="351.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (65,934,696 samples, 0.21%)</title><rect x="1000.6" y="341" width="2.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1003.59" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (28,691,616 samples, 0.09%)</title><rect x="605.3" y="277" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="608.26" y="287.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (31,518,457 samples, 0.10%)</title><rect x="298.1" y="293" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="301.06" y="303.5" ></text>
</g>
<g >
<title>fsnotify (130,372,091 samples, 0.41%)</title><rect x="600.5" y="261" width="4.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="603.46" y="271.5" ></text>
</g>
<g >
<title>__fdget_pos (242,424,637 samples, 0.76%)</title><rect x="339.8" y="293" width="8.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="342.77" y="303.5" ></text>
</g>
<g >
<title>migrate_enable (31,883,053 samples, 0.10%)</title><rect x="917.4" y="133" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="920.38" y="143.5" ></text>
</g>
<g >
<title>combined_runner (32,036,056,258 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >combined_runner</text>
</g>
<g >
<title>syscall_return_via_sysret (55,733,705 samples, 0.17%)</title><rect x="641.9" y="341" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="644.94" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (33,370,597 samples, 0.10%)</title><rect x="734.5" y="373" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="737.47" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (18,017,052 samples, 0.06%)</title><rect x="719.9" y="309" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="722.91" y="319.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (54,745,162 samples, 0.17%)</title><rect x="294.6" y="325" width="2.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="297.62" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,308,156 samples, 0.04%)</title><rect x="473.1" y="133" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="476.06" y="143.5" ></text>
</g>
<g >
<title>free_unref_page (15,700,977 samples, 0.05%)</title><rect x="143.4" y="261" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="146.37" y="271.5" ></text>
</g>
<g >
<title>build_open_flags (33,943,651 samples, 0.11%)</title><rect x="841.1" y="245" width="1.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="844.15" y="255.5" ></text>
</g>
<g >
<title>memcg_account_kmem (30,699,806 samples, 0.10%)</title><rect x="880.0" y="165" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="882.99" y="175.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (15,527,712 samples, 0.05%)</title><rect x="694.3" y="229" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="697.31" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (13,522,423 samples, 0.04%)</title><rect x="717.6" y="309" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="720.61" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,497,757 samples, 0.03%)</title><rect x="949.3" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="952.30" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,145,414 samples, 0.03%)</title><rect x="150.3" y="389" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="153.34" y="399.5" ></text>
</g>
<g >
<title>make_vfsgid (46,737,758 samples, 0.15%)</title><rect x="624.6" y="245" width="1.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="627.55" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (46,840,484 samples, 0.15%)</title><rect x="213.6" y="261" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="216.58" y="271.5" ></text>
</g>
<g >
<title>__put_user_8 (21,421,139 samples, 0.07%)</title><rect x="348.7" y="293" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="351.70" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,762,428,319 samples, 5.50%)</title><rect x="655.7" y="325" width="64.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="658.65" y="335.5" >do_sysc..</text>
</g>
<g >
<title>security_file_open (475,610,034 samples, 1.48%)</title><rect x="904.7" y="197" width="17.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="907.74" y="207.5" ></text>
</g>
<g >
<title>update_min_vruntime (17,473,660 samples, 0.05%)</title><rect x="639.2" y="133" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="642.20" y="143.5" ></text>
</g>
<g >
<title>mntput (10,637,271 samples, 0.03%)</title><rect x="956.3" y="197" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="959.26" y="207.5" ></text>
</g>
<g >
<title>__memset (41,320,469 samples, 0.13%)</title><rect x="510.7" y="181" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="513.75" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (11,705,615,521 samples, 36.54%)</title><rect x="216.3" y="405" width="431.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="219.30" y="415.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.95" y="367.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (10,984,950 samples, 0.03%)</title><rect x="802.9" y="197" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="805.88" y="207.5" ></text>
</g>
<g >
<title>__fget_light (142,090,317 samples, 0.44%)</title><rect x="341.1" y="277" width="5.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="344.12" y="287.5" ></text>
</g>
<g >
<title>alloc_fd (240,611,325 samples, 0.75%)</title><rect x="832.3" y="245" width="8.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="835.28" y="255.5" ></text>
</g>
<g >
<title>rcu_do_batch (17,476,513 samples, 0.05%)</title><rect x="146.8" y="293" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="149.78" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,473,660 samples, 0.05%)</title><rect x="639.2" y="213" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="642.20" y="223.5" ></text>
</g>
<g >
<title>debug.assert (28,574,157 samples, 0.09%)</title><rect x="287.2" y="325" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="290.18" y="335.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="261" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.95" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (65,115,718 samples, 0.20%)</title><rect x="720.6" y="341" width="2.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="723.57" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,836,052 samples, 0.06%)</title><rect x="213.6" y="245" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="216.58" y="255.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,156,860 samples, 0.06%)</title><rect x="348.0" y="101" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="351.03" y="111.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (8,734,738,361 samples, 27.27%)</title><rect x="322.3" y="373" width="321.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="325.26" y="383.5" >os.linux.getdents64</text>
</g>
<g >
<title>strncpy_from_user (362,345,507 samples, 1.13%)</title><rect x="972.2" y="229" width="13.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="975.19" y="239.5" ></text>
</g>
<g >
<title>__slab_free (58,245,785 samples, 0.18%)</title><rect x="692.7" y="245" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="695.73" y="255.5" ></text>
</g>
<g >
<title>hook_file_open (10,368,731 samples, 0.03%)</title><rect x="921.9" y="181" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="924.87" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (46,840,484 samples, 0.15%)</title><rect x="213.6" y="389" width="1.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="216.58" y="399.5" ></text>
</g>
<g >
<title>locks_remove_posix (115,361,359 samples, 0.36%)</title><rect x="713.4" y="277" width="4.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="716.36" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (18,313,396 samples, 0.06%)</title><rect x="142.3" y="341" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="145.29" y="351.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (38,144,092 samples, 0.12%)</title><rect x="631.3" y="309" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="634.28" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (19,336,531 samples, 0.06%)</title><rect x="14.7" y="469" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="17.69" y="479.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (135,787,193 samples, 0.42%)</title><rect x="137.3" y="373" width="5.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="140.29" y="383.5" ></text>
</g>
<g >
<title>mas_wr_walk (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="69" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.61" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,473,660 samples, 0.05%)</title><rect x="639.2" y="197" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="642.20" y="207.5" ></text>
</g>
<g >
<title>array_list.growCapacity (18,386,400 samples, 0.06%)</title><rect x="153.6" y="389" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="156.57" y="399.5" ></text>
</g>
<g >
<title>__fput (697,157,495 samples, 2.18%)</title><rect x="678.7" y="293" width="25.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="681.71" y="303.5" >_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="341" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1065.52" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (171,995,460 samples, 0.54%)</title><rect x="218.8" y="389" width="6.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="221.80" y="399.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (30,219,910 samples, 0.09%)</title><rect x="718.8" y="293" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="721.79" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1191.95" y="303.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (54,303,585 samples, 0.17%)</title><rect x="873.6" y="165" width="2.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="876.63" y="175.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (120,019,024 samples, 0.37%)</title><rect x="806.8" y="325" width="4.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="809.80" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_free (102,240,880 samples, 0.32%)</title><rect x="985.5" y="245" width="3.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="988.53" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (13,277,529 samples, 0.04%)</title><rect x="84.1" y="421" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="87.08" y="431.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (13,823,532 samples, 0.04%)</title><rect x="214.8" y="213" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="217.79" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (58,376,850 samples, 0.18%)</title><rect x="733.6" y="389" width="2.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="736.55" y="399.5" ></text>
</g>
<g >
<title>os.linux.mmap (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.61" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (96,186,622 samples, 0.30%)</title><rect x="291.1" y="293" width="3.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="294.08" y="303.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (188,228,988 samples, 0.59%)</title><rect x="598.3" y="277" width="7.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="601.33" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (216,125,442 samples, 0.67%)</title><rect x="135.0" y="389" width="8.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="138.01" y="399.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (17,732,023 samples, 0.06%)</title><rect x="1189.0" y="197" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1191.95" y="207.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_9108 (11,821,349 samples, 0.04%)</title><rect x="298.8" y="277" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="301.79" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (12,163,119 samples, 0.04%)</title><rect x="639.8" y="341" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="642.85" y="351.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (196,776,714 samples, 0.61%)</title><rect x="473.5" y="165" width="7.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="476.48" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (21,793,751 samples, 0.07%)</title><rect x="127.0" y="373" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="130.02" y="383.5" ></text>
</g>
<g >
<title>__find_get_block (1,202,615,541 samples, 3.75%)</title><rect x="424.0" y="165" width="44.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="427.05" y="175.5" >__fi..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (15,700,977 samples, 0.05%)</title><rect x="143.4" y="357" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="146.37" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (39,425,265 samples, 0.12%)</title><rect x="992.3" y="261" width="1.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="995.30" y="271.5" ></text>
</g>
<g >
<title>expand_files (36,211,901 samples, 0.11%)</title><rect x="839.8" y="229" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="842.81" y="239.5" ></text>
</g>
<g >
<title>debug.assert (16,942,619 samples, 0.05%)</title><rect x="296.6" y="309" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="299.64" y="319.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (92,556,323 samples, 0.29%)</title><rect x="477.3" y="149" width="3.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="480.32" y="159.5" ></text>
</g>
<g >
<title>cache_from_obj (11,386,830 samples, 0.04%)</title><rect x="988.9" y="229" width="0.4" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="991.88" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (25,152,178,336 samples, 78.51%)</title><rect x="102.6" y="421" width="926.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="105.62" y="431.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>fput (65,561,560 samples, 0.20%)</title><rect x="349.5" y="293" width="2.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="352.49" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (34,082,126 samples, 0.11%)</title><rect x="644.0" y="373" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="646.99" y="383.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (50,387,310 samples, 0.16%)</title><rect x="918.6" y="149" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="921.56" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,877,809 samples, 0.03%)</title><rect x="676.7" y="261" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="679.69" y="271.5" ></text>
</g>
<g >
<title>ext4_getblk (1,559,594,895 samples, 4.87%)</title><rect x="423.3" y="197" width="57.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="426.28" y="207.5" >ext4_g..</text>
</g>
<g >
<title>kmem_cache_alloc (124,327,826 samples, 0.39%)</title><rect x="858.4" y="165" width="4.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="861.42" y="175.5" ></text>
</g>
<g >
<title>lockref_get (9,955,425 samples, 0.03%)</title><rect x="904.4" y="197" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="907.37" y="207.5" ></text>
</g>
<g >
<title>rcu_core (11,971,097 samples, 0.04%)</title><rect x="1062.5" y="293" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1065.52" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (140,358,577 samples, 0.44%)</title><rect x="632.7" y="309" width="5.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="635.69" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,984,950 samples, 0.03%)</title><rect x="802.9" y="213" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="805.88" y="223.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (192,347,580 samples, 0.60%)</title><rect x="556.9" y="261" width="7.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="559.85" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,836,052 samples, 0.06%)</title><rect x="213.6" y="229" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="216.58" y="239.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="421" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.95" y="431.5" ></text>
</g>
<g >
<title>handle_softirqs (18,313,396 samples, 0.06%)</title><rect x="142.3" y="325" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="145.29" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (19,626,520 samples, 0.06%)</title><rect x="993.8" y="261" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="996.75" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (11,050,926 samples, 0.03%)</title><rect x="630.9" y="293" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="633.88" y="303.5" ></text>
</g>
<g >
<title>dput (34,847,839 samples, 0.11%)</title><rect x="681.9" y="277" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="684.94" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (48,930,771 samples, 0.15%)</title><rect x="718.1" y="309" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="721.10" y="319.5" ></text>
</g>
<g >
<title>do_filp_open (3,138,200,917 samples, 9.80%)</title><rect x="842.4" y="245" width="115.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="845.40" y="255.5" >do_filp_open</text>
</g>
<g >
<title>rcu_segcblist_enqueue (11,364,032 samples, 0.04%)</title><rect x="678.3" y="277" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="681.29" y="287.5" ></text>
</g>
<g >
<title>local_clock_noinstr (18,313,396 samples, 0.06%)</title><rect x="142.3" y="261" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="145.29" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_free (16,730,651 samples, 0.05%)</title><rect x="683.2" y="261" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="686.22" y="271.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (32,101,579 samples, 0.10%)</title><rect x="915.6" y="149" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="918.55" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (11,178,181 samples, 0.03%)</title><rect x="151.4" y="405" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="154.44" y="415.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (38,767,188 samples, 0.12%)</title><rect x="296.6" y="325" width="1.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="299.64" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (5,709,231,450 samples, 17.82%)</title><rect x="793.1" y="389" width="210.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="796.12" y="399.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>rcu_core (18,313,396 samples, 0.06%)</title><rect x="142.3" y="309" width="0.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="145.29" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (59,909,709 samples, 0.19%)</title><rect x="837.6" y="229" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="840.61" y="239.5" ></text>
</g>
<g >
<title>debug.assert (11,821,349 samples, 0.04%)</title><rect x="298.8" y="245" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="301.79" y="255.5" ></text>
</g>
<g >
<title>os.linux.openat (10,729,331 samples, 0.03%)</title><rect x="803.6" y="357" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="806.64" y="367.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (23,575,256 samples, 0.07%)</title><rect x="75.1" y="437" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="78.07" y="447.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,677,542 samples, 0.04%)</title><rect x="545.9" y="117" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="548.94" y="127.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (122,207,703 samples, 0.38%)</title><rect x="587.6" y="245" width="4.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="590.56" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (81,783,304 samples, 0.26%)</title><rect x="129.8" y="405" width="3.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="132.85" y="415.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (4,299,867,384 samples, 13.42%)</title><rect x="1030.6" y="405" width="158.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1033.57" y="415.5" >mem.indexOfPos__anon..</text>
</g>
<g >
<title>rb_first_postorder (16,150,080 samples, 0.05%)</title><rect x="562.8" y="245" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="565.76" y="255.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (407,800,659 samples, 1.27%)</title><rect x="683.8" y="261" width="15.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="686.84" y="271.5" ></text>
</g>
<g >
<title>filemap_get_entry (507,424,159 samples, 1.58%)</title><rect x="444.1" y="133" width="18.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="447.14" y="143.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (30,167,666,307 samples, 94.17%)</title><rect x="78.8" y="485" width="1111.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="81.82" y="495.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,476,513 samples, 0.05%)</title><rect x="146.8" y="373" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="149.78" y="383.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (14,822,559 samples, 0.05%)</title><rect x="275.4" y="357" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="278.37" y="367.5" ></text>
</g>
<g >
<title>search_name.searchName (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="437" width="1.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.95" y="447.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (44,628,063 samples, 0.14%)</title><rect x="640.3" y="341" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="643.30" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,156,860 samples, 0.06%)</title><rect x="348.0" y="181" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="351.03" y="191.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (16,887,616 samples, 0.05%)</title><rect x="1028.0" y="293" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1031.01" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (120,019,024 samples, 0.37%)</title><rect x="806.8" y="309" width="4.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="809.80" y="319.5" ></text>
</g>
<g >
<title>rb_insert_color (89,276,509 samples, 0.28%)</title><rect x="517.3" y="213" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="520.30" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (414,785,201 samples, 1.29%)</title><rect x="775.0" y="389" width="15.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="777.99" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (29,004,432 samples, 0.09%)</title><rect x="214.2" y="229" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="217.24" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,791,908,441 samples, 14.96%)</title><rect x="818.0" y="309" width="176.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="820.97" y="319.5" >entry_SYSCALL_64_after..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (13,738,090 samples, 0.04%)</title><rect x="512.3" y="181" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="515.27" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (10,984,950 samples, 0.03%)</title><rect x="802.9" y="229" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="805.88" y="239.5" ></text>
</g>
<g >
<title>mod_objcg_state (42,013,942 samples, 0.13%)</title><rect x="876.7" y="165" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="879.68" y="175.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,156,860 samples, 0.06%)</title><rect x="348.0" y="117" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="351.03" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,156,860 samples, 0.06%)</title><rect x="348.0" y="165" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="351.03" y="175.5" ></text>
</g>
<g >
<title>vma_expand (10,714,790 samples, 0.03%)</title><rect x="1189.6" y="101" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.61" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,774,346,538 samples, 5.54%)</title><rect x="655.2" y="341" width="65.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="658.22" y="351.5" >entry_S..</text>
</g>
<g >
<title>__mod_memcg_state (30,699,806 samples, 0.10%)</title><rect x="880.0" y="133" width="1.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="882.99" y="143.5" ></text>
</g>
<g >
<title>make_vfsuid (18,627,579 samples, 0.06%)</title><rect x="945.2" y="165" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="948.20" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free (74,656,909 samples, 0.23%)</title><rect x="700.1" y="277" width="2.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="703.06" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,485,538 samples, 0.05%)</title><rect x="369.2" y="229" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="372.15" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (29,892,352 samples, 0.09%)</title><rect x="154.2" y="405" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="157.25" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (11,963,505 samples, 0.04%)</title><rect x="121.0" y="405" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="124.00" y="415.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (11,639,995 samples, 0.04%)</title><rect x="74.6" y="437" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="77.64" y="447.5" ></text>
</g>
<g >
<title>alloc_empty_file (938,308,274 samples, 2.93%)</title><rect x="849.8" y="213" width="34.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="852.83" y="223.5" >al..</text>
</g>
<g >
<title>allocate_slab (16,907,326 samples, 0.05%)</title><rect x="869.1" y="165" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="872.05" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,406,484 samples, 0.04%)</title><rect x="920.0" y="133" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="922.96" y="143.5" ></text>
</g>
<g >
<title>[unknown] (120,019,024 samples, 0.37%)</title><rect x="806.8" y="341" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="809.80" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,108,587 samples, 0.04%)</title><rect x="954.4" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="957.38" y="191.5" ></text>
</g>
<g >
<title>make_vfsuid (26,640,256 samples, 0.08%)</title><rect x="925.4" y="197" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="928.39" y="207.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (11,914,769 samples, 0.04%)</title><rect x="858.0" y="165" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="860.98" y="175.5" ></text>
</g>
<g >
<title>__memcpy (80,784,118 samples, 0.25%)</title><rect x="514.3" y="213" width="3.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="517.33" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (55,414,938 samples, 0.17%)</title><rect x="998.5" y="309" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1001.54" y="319.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (28,446,813 samples, 0.09%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.95" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (65,022,680 samples, 0.20%)</title><rect x="151.9" y="405" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="154.85" y="415.5" ></text>
</g>
<g >
<title>dput (86,281,407 samples, 0.27%)</title><rect x="953.1" y="197" width="3.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="956.08" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,984,950 samples, 0.03%)</title><rect x="802.9" y="293" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="805.88" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (10,830,331 samples, 0.03%)</title><rect x="102.2" y="421" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="105.22" y="431.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (395,650,564 samples, 1.24%)</title><rect x="926.4" y="197" width="14.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="929.37" y="207.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,308,156 samples, 0.04%)</title><rect x="473.1" y="101" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="476.06" y="111.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (7,952,892,697 samples, 24.82%)</title><rect x="735.7" y="405" width="292.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="738.70" y="415.5" >fs.Dir.openDir</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (1,562,839,202 samples, 4.88%)</title><rect x="21.3" y="485" width="57.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.25" y="495.5" >Thread..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (10,877,809 samples, 0.03%)</title><rect x="676.7" y="165" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="679.69" y="175.5" ></text>
</g>
<g >
<title>[unknown] (266,502,862 samples, 0.83%)</title><rect x="905.7" y="149" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="908.74" y="159.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_9108 (17,732,023 samples, 0.06%)</title><rect x="1189.0" y="181" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1191.95" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (247,111,820 samples, 0.77%)</title><rect x="963.1" y="229" width="9.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="966.09" y="239.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (15,700,977 samples, 0.05%)</title><rect x="143.4" y="293" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="146.37" y="303.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (10,828,483 samples, 0.03%)</title><rect x="1003.0" y="341" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1006.01" y="351.5" ></text>
</g>
<g >
<title>local_clock (18,313,396 samples, 0.06%)</title><rect x="142.3" y="277" width="0.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="145.29" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,507,047,878 samples, 14.07%)</title><rect x="825.2" y="277" width="166.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="828.16" y="287.5" >__x64_sys_openat</text>
</g>
<g >
<title>putname (50,828,405 samples, 0.16%)</title><rect x="989.3" y="245" width="1.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="992.30" y="255.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (63,286,115 samples, 0.20%)</title><rect x="560.4" y="229" width="2.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="563.43" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,677,542 samples, 0.04%)</title><rect x="545.9" y="197" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="548.94" y="207.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (20,340,845 samples, 0.06%)</title><rect x="885.7" y="165" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="888.72" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,700,977 samples, 0.05%)</title><rect x="143.4" y="373" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="146.37" y="383.5" ></text>
</g>
<g >
<title>__memset (143,680,007 samples, 0.45%)</title><rect x="966.2" y="213" width="5.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="969.25" y="223.5" ></text>
</g>
<g >
<title>update_process_times (18,156,860 samples, 0.06%)</title><rect x="348.0" y="149" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="351.03" y="159.5" ></text>
</g>
<g >
<title>rcu_do_batch (18,313,396 samples, 0.06%)</title><rect x="142.3" y="293" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="145.29" y="303.5" ></text>
</g>
<g >
<title>init_file (325,291,006 samples, 1.02%)</title><rect x="851.0" y="197" width="12.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="854.02" y="207.5" ></text>
</g>
<g >
<title>__free_one_page (15,700,977 samples, 0.05%)</title><rect x="143.4" y="229" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="146.37" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,145,414 samples, 0.03%)</title><rect x="150.3" y="373" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="153.34" y="383.5" ></text>
</g>
<g >
<title>sched_clock (11,145,414 samples, 0.03%)</title><rect x="150.3" y="213" width="0.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="153.34" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (18,263,224 samples, 0.06%)</title><rect x="290.4" y="293" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="293.40" y="303.5" ></text>
</g>
</g>
</svg>
