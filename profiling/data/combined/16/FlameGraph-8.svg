<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>__irq_exit_rcu (10,407,541 samples, 0.03%)</title><rect x="576.5" y="373" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="579.50" y="383.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,208,712,363 samples, 3.05%)</title><rect x="649.7" y="245" width="36.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="652.70" y="255.5" >__g..</text>
</g>
<g >
<title>tick_sched_do_timer (17,418,261 samples, 0.04%)</title><rect x="889.6" y="341" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="892.57" y="351.5" ></text>
</g>
<g >
<title>debug.assert (11,580,813 samples, 0.03%)</title><rect x="909.3" y="421" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="912.33" y="431.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (116,752,469 samples, 0.29%)</title><rect x="787.5" y="341" width="3.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="790.50" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="293" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1052.08" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (130,580,160 samples, 0.33%)</title><rect x="440.9" y="469" width="3.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="443.88" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="357" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.09" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="277" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1052.08" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (101,612,478 samples, 0.26%)</title><rect x="1041.6" y="261" width="3.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1044.60" y="271.5" ></text>
</g>
<g >
<title>make_vfsgid (18,434,509 samples, 0.05%)</title><rect x="793.3" y="309" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="796.26" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="341" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1052.08" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="261" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1052.08" y="271.5" ></text>
</g>
<g >
<title>fsnotify (61,061,273 samples, 0.15%)</title><rect x="976.7" y="261" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="979.71" y="271.5" ></text>
</g>
<g >
<title>path_init (164,189,201 samples, 0.41%)</title><rect x="1014.9" y="277" width="4.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1017.91" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (80,583,463 samples, 0.20%)</title><rect x="525.9" y="437" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="528.91" y="447.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (16,700,917 samples, 0.04%)</title><rect x="995.0" y="213" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="997.98" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,698,116 samples, 0.04%)</title><rect x="590.5" y="309" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="593.50" y="319.5" ></text>
</g>
<g >
<title>_raw_read_unlock (39,179,731 samples, 0.10%)</title><rect x="695.9" y="213" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="698.94" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (53,263,088 samples, 0.13%)</title><rect x="889.6" y="421" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="892.57" y="431.5" ></text>
</g>
<g >
<title>__call_rcu_common (212,974,053 samples, 0.54%)</title><rect x="815.6" y="357" width="6.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="818.61" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,689,720 samples, 0.03%)</title><rect x="907.2" y="341" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="910.24" y="351.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (18,474,176 samples, 0.05%)</title><rect x="569.9" y="405" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="572.95" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (10,632,834 samples, 0.03%)</title><rect x="444.0" y="453" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="447.03" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="245" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1050.38" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (56,320,513 samples, 0.14%)</title><rect x="724.3" y="261" width="1.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="727.32" y="271.5" ></text>
</g>
<g >
<title>os.linux.close (1,456,322,591 samples, 3.68%)</title><rect x="813.2" y="437" width="43.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="816.19" y="447.5" >os.l..</text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (9,525,620 samples, 0.02%)</title><rect x="624.7" y="293" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="627.67" y="303.5" ></text>
</g>
<g >
<title>[unknown] (13,346,016 samples, 0.03%)</title><rect x="10.0" y="549" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>xas_descend (91,699,414 samples, 0.23%)</title><rect x="678.0" y="165" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="680.99" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (29,314,389 samples, 0.07%)</title><rect x="435.9" y="453" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="438.89" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="261" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1050.38" y="271.5" ></text>
</g>
<g >
<title>rb_next (74,440,214 samples, 0.19%)</title><rect x="782.6" y="325" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="785.64" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (53,263,088 samples, 0.13%)</title><rect x="889.6" y="389" width="1.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="892.57" y="399.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (136,818,666 samples, 0.35%)</title><rect x="687.1" y="229" width="4.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="690.09" y="239.5" ></text>
</g>
<g >
<title>[unknown] (49,100,456 samples, 0.12%)</title><rect x="913.3" y="405" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="916.33" y="415.5" ></text>
</g>
<g >
<title>__kmem_cache_free (78,104,552 samples, 0.20%)</title><rect x="767.3" y="309" width="2.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="770.28" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,565,019,983 samples, 19.10%)</title><rect x="580.4" y="405" width="225.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="583.43" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (431,593,718 samples, 1.09%)</title><rect x="1061.9" y="421" width="12.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1064.93" y="431.5" ></text>
</g>
<g >
<title>path_openat (2,933,527,169 samples, 7.41%)</title><rect x="937.8" y="293" width="87.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="940.76" y="303.5" >path_openat</text>
</g>
<g >
<title>__put_user_8 (29,413,592 samples, 0.07%)</title><rect x="591.0" y="357" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="594.03" y="367.5" ></text>
</g>
<g >
<title>__fput (722,320,904 samples, 1.82%)</title><rect x="822.0" y="357" width="21.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="824.95" y="367.5" >_..</text>
</g>
<g >
<title>hrtimer_interrupt (12,964,833 samples, 0.03%)</title><rect x="399.5" y="453" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="402.49" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (286,021,411 samples, 0.72%)</title><rect x="891.2" y="453" width="8.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="894.15" y="463.5" ></text>
</g>
<g >
<title>handle_softirqs (10,407,541 samples, 0.03%)</title><rect x="576.5" y="357" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="579.50" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,271,576,214 samples, 3.21%)</title><rect x="815.6" y="389" width="37.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="818.61" y="399.5" >do_..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (938,991,683 samples, 2.37%)</title><rect x="863.2" y="453" width="28.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="866.18" y="463.5" >c..</text>
</g>
<g >
<title>__brelse (33,268,660 samples, 0.08%)</title><rect x="637.8" y="293" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="640.80" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (526,317,148 samples, 1.33%)</title><rect x="949.9" y="261" width="15.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="952.93" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (80,218,159 samples, 0.20%)</title><rect x="1187.1" y="437" width="2.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1190.05" y="447.5" ></text>
</g>
<g >
<title>__kmalloc (692,667,755 samples, 1.75%)</title><rect x="705.4" y="277" width="20.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="708.36" y="287.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (19,059,685 samples, 0.05%)</title><rect x="995.5" y="213" width="0.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="998.47" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="309" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1052.08" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,030,296 samples, 0.05%)</title><rect x="690.6" y="133" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="693.62" y="143.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (11,160,813 samples, 0.03%)</title><rect x="558.1" y="373" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="561.08" y="383.5" ></text>
</g>
<g >
<title>allocate_slab (36,513,433 samples, 0.09%)</title><rect x="716.7" y="229" width="1.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="719.73" y="239.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (26,522,659,466 samples, 66.96%)</title><rect x="399.9" y="549" width="790.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="402.88" y="559.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>scheduler_tick (11,689,720 samples, 0.03%)</title><rect x="907.2" y="309" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="910.24" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (29,790,540 samples, 0.08%)</title><rect x="913.3" y="373" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="916.33" y="383.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="133" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1050.38" y="143.5" ></text>
</g>
<g >
<title>__memset (13,522,188 samples, 0.03%)</title><rect x="954.1" y="245" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="957.09" y="255.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (207,975,912 samples, 0.53%)</title><rect x="534.3" y="421" width="6.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="537.26" y="431.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (34,130,046 samples, 0.09%)</title><rect x="964.6" y="245" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="967.59" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.close (1,509,983,424 samples, 3.81%)</title><rect x="811.6" y="469" width="45.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="814.59" y="479.5" >fs.D..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,111,273 samples, 0.04%)</title><rect x="624.2" y="277" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="627.25" y="287.5" ></text>
</g>
<g >
<title>posix.openatZ (4,918,339,464 samples, 12.42%)</title><rect x="910.2" y="421" width="146.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="913.20" y="431.5" >posix.openatZ</text>
</g>
<g >
<title>hrtimer_interrupt (14,111,273 samples, 0.04%)</title><rect x="624.2" y="245" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="627.25" y="255.5" ></text>
</g>
<g >
<title>step_into (57,299,016 samples, 0.14%)</title><rect x="1019.8" y="277" width="1.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1022.80" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (11,291,993 samples, 0.03%)</title><rect x="954.5" y="245" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="957.49" y="255.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (11,315,066 samples, 0.03%)</title><rect x="949.6" y="213" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="952.59" y="223.5" ></text>
</g>
<g >
<title>mntput_no_expire (28,808,705 samples, 0.07%)</title><rect x="840.8" y="341" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="843.79" y="351.5" ></text>
</g>
<g >
<title>security_file_free (19,408,385 samples, 0.05%)</title><rect x="842.9" y="341" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="845.89" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (30,679,721 samples, 0.08%)</title><rect x="449.5" y="453" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="452.53" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (286,429,130 samples, 0.72%)</title><rect x="404.5" y="485" width="8.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="407.52" y="495.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (4,718,841,417 samples, 11.91%)</title><rect x="915.1" y="389" width="140.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="918.10" y="399.5" >os.linux.x86_64.s..</text>
</g>
<g >
<title>unwind_get_return_address (18,527,076 samples, 0.05%)</title><rect x="833.1" y="245" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="836.08" y="255.5" ></text>
</g>
<g >
<title>combined_runner (39,610,032,674 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >combined_runner</text>
</g>
<g >
<title>filp_flush (162,757,762 samples, 0.41%)</title><rect x="846.2" y="357" width="4.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="849.20" y="367.5" ></text>
</g>
<g >
<title>alloc_empty_file (876,211,036 samples, 2.21%)</title><rect x="940.1" y="277" width="26.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="943.12" y="287.5" >a..</text>
</g>
<g >
<title>up_read (139,404,114 samples, 0.35%)</title><rect x="795.0" y="341" width="4.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="798.00" y="351.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (11,160,813 samples, 0.03%)</title><rect x="558.1" y="357" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="561.08" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,080,362 samples, 0.03%)</title><rect x="914.8" y="261" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="917.80" y="271.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (12,800,333 samples, 0.03%)</title><rect x="557.7" y="389" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="560.69" y="399.5" ></text>
</g>
<g >
<title>lockref_put_return (24,304,490 samples, 0.06%)</title><rect x="823.1" y="325" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="826.14" y="335.5" ></text>
</g>
<g >
<title>filemap_get_entry (404,787,110 samples, 1.02%)</title><rect x="669.1" y="197" width="12.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="672.06" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,262,582 samples, 0.05%)</title><rect x="962.6" y="229" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="965.59" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,030,296 samples, 0.05%)</title><rect x="690.6" y="117" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="693.62" y="127.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,456,322,591 samples, 3.68%)</title><rect x="813.2" y="421" width="43.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="816.19" y="431.5" >os.l..</text>
</g>
<g >
<title>hrtimer_interrupt (18,030,296 samples, 0.05%)</title><rect x="690.6" y="149" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="693.62" y="159.5" ></text>
</g>
<g >
<title>__srcu_read_lock (45,660,138 samples, 0.12%)</title><rect x="847.9" y="293" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="850.92" y="303.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (956,954,701 samples, 2.42%)</title><rect x="542.0" y="437" width="28.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="544.99" y="447.5" >me..</text>
</g>
<g >
<title>ext4_map_blocks (489,719,449 samples, 1.24%)</title><rect x="685.7" y="245" width="14.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="688.70" y="255.5" ></text>
</g>
<g >
<title>inode_permission (58,674,167 samples, 0.15%)</title><rect x="999.8" y="261" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1002.82" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,698,116 samples, 0.04%)</title><rect x="590.5" y="165" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="593.50" y="175.5" ></text>
</g>
<g >
<title>__fdget_pos (191,620,910 samples, 0.48%)</title><rect x="585.3" y="357" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="588.32" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="197" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1050.38" y="207.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (79,687,323 samples, 0.20%)</title><rect x="978.5" y="261" width="2.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="981.53" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,689,720 samples, 0.03%)</title><rect x="907.2" y="421" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="910.24" y="431.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (47,029,961 samples, 0.12%)</title><rect x="722.6" y="245" width="1.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="725.61" y="255.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (9,796,426 samples, 0.02%)</title><rect x="557.4" y="389" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="560.40" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="149" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1050.38" y="159.5" ></text>
</g>
<g >
<title>handle_softirqs (9,811,673 samples, 0.02%)</title><rect x="279.3" y="437" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="282.30" y="447.5" ></text>
</g>
<g >
<title>kmalloc_trace (115,957,595 samples, 0.29%)</title><rect x="778.3" y="325" width="3.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="781.27" y="335.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,253,307,739 samples, 5.69%)</title><rect x="1109.4" y="421" width="67.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1112.41" y="431.5" >mem.eql..</text>
</g>
<g >
<title>__hrtimer_run_queues (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="373" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1104.50" y="383.5" ></text>
</g>
<g >
<title>update_process_times (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="325" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1104.50" y="335.5" ></text>
</g>
<g >
<title>update_curr_se (18,367,488 samples, 0.05%)</title><rect x="890.6" y="261" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="893.61" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (9,481,306 samples, 0.02%)</title><rect x="440.6" y="469" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="443.60" y="479.5" ></text>
</g>
<g >
<title>task_work_run (18,575,324 samples, 0.05%)</title><rect x="1052.3" y="309" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1055.26" y="319.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (10,430,825,136 samples, 26.33%)</title><rect x="500.4" y="469" width="310.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="503.44" y="479.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (10,153,230,871 samples, 25.63%)</title><rect x="508.7" y="453" width="302.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="511.71" y="463.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>hook_file_alloc_security (61,446,558 samples, 0.16%)</title><rect x="945.9" y="229" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="948.93" y="239.5" ></text>
</g>
<g >
<title>c.clone (39,394,011,473 samples, 99.45%)</title><rect x="16.4" y="565" width="1173.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.44" y="575.5" >c.clone</text>
</g>
<g >
<title>_raw_spin_lock (88,203,823 samples, 0.22%)</title><rect x="929.5" y="293" width="2.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="932.50" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (190,414,015 samples, 0.48%)</title><rect x="958.9" y="245" width="5.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="961.92" y="255.5" ></text>
</g>
<g >
<title>rcu_do_batch (9,811,673 samples, 0.02%)</title><rect x="279.3" y="405" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="282.30" y="415.5" ></text>
</g>
<g >
<title>x64_sys_call (11,858,364 samples, 0.03%)</title><rect x="853.1" y="373" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="856.14" y="383.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,811,673 samples, 0.02%)</title><rect x="279.3" y="453" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="282.30" y="463.5" ></text>
</g>
<g >
<title>__legitimize_mnt (10,892,777 samples, 0.03%)</title><rect x="967.3" y="229" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="970.27" y="239.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (13,508,775 samples, 0.03%)</title><rect x="1088.3" y="453" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1091.27" y="463.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (19,596,339 samples, 0.05%)</title><rect x="443.4" y="437" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="446.44" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (19,094,604 samples, 0.05%)</title><rect x="15.9" y="533" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.87" y="543.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (13,699,547 samples, 0.03%)</title><rect x="811.2" y="469" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="814.18" y="479.5" ></text>
</g>
<g >
<title>[[x_tables]] (429,723,354 samples, 1.08%)</title><rect x="984.1" y="229" width="12.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="987.11" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (48,109,907 samples, 0.12%)</title><rect x="413.1" y="485" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="416.06" y="495.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (306,486,139 samples, 0.77%)</title><rect x="691.2" y="229" width="9.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="694.16" y="239.5" ></text>
</g>
<g >
<title>htab_map_hash (12,808,467 samples, 0.03%)</title><rect x="986.5" y="181" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="989.53" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (46,362,269 samples, 0.12%)</title><rect x="442.1" y="437" width="1.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="445.06" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (9,537,561 samples, 0.02%)</title><rect x="845.4" y="341" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="848.41" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (16,126,791 samples, 0.04%)</title><rect x="988.9" y="181" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="991.93" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (28,631,022 samples, 0.07%)</title><rect x="450.8" y="469" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="453.85" y="479.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,030,296 samples, 0.05%)</title><rect x="690.6" y="53" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="693.62" y="63.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,094,220 samples, 0.03%)</title><rect x="414.1" y="469" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="417.13" y="479.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,035,744 samples, 0.03%)</title><rect x="996.0" y="197" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="999.04" y="207.5" ></text>
</g>
<g >
<title>dput (18,383,958 samples, 0.05%)</title><rect x="1023.7" y="261" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1026.71" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_free (9,811,673 samples, 0.02%)</title><rect x="279.3" y="389" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="282.30" y="399.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (12,800,333 samples, 0.03%)</title><rect x="557.7" y="341" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="560.69" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="197" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1052.08" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="341" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1104.50" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="277" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1179.02" y="287.5" ></text>
</g>
<g >
<title>debug.assert (16,440,311 samples, 0.04%)</title><rect x="907.6" y="437" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="910.59" y="447.5" ></text>
</g>
<g >
<title>ext4_release_dir (435,366,600 samples, 1.10%)</title><rect x="823.9" y="341" width="12.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="826.87" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (15,842,526 samples, 0.04%)</title><rect x="412.6" y="453" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="415.59" y="463.5" ></text>
</g>
<g >
<title>inode_query_iversion (47,903,755 samples, 0.12%)</title><rect x="773.4" y="325" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="776.36" y="335.5" ></text>
</g>
<g >
<title>fsnotify (53,136,686 samples, 0.13%)</title><rect x="979.3" y="245" width="1.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="982.32" y="255.5" ></text>
</g>
<g >
<title>security_file_alloc (217,312,441 samples, 0.55%)</title><rect x="943.5" y="245" width="6.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="946.45" y="255.5" ></text>
</g>
<g >
<title>inode_permission (71,300,354 samples, 0.18%)</title><rect x="1012.8" y="261" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1015.78" y="271.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (440,303,549 samples, 1.11%)</title><rect x="528.3" y="437" width="13.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="531.31" y="447.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (5,271,807,410 samples, 13.31%)</title><rect x="899.7" y="453" width="157.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="902.67" y="463.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,030,296 samples, 0.05%)</title><rect x="690.6" y="181" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="693.62" y="191.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (14,111,273 samples, 0.04%)</title><rect x="624.2" y="133" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="627.25" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,346,016 samples, 0.03%)</title><rect x="10.0" y="517" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__fsnotify_parent (38,571,696 samples, 0.10%)</title><rect x="973.9" y="261" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="976.91" y="271.5" ></text>
</g>
<g >
<title>psi_account_irqtime (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="277" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1192.09" y="287.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (447,449,648 samples, 1.13%)</title><rect x="983.6" y="245" width="13.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="986.58" y="255.5" ></text>
</g>
<g >
<title>__memset (58,883,608 samples, 0.15%)</title><rect x="1031.0" y="277" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1034.02" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.09" y="431.5" ></text>
</g>
<g >
<title>timekeeping_advance (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="213" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1052.08" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (19,272,269 samples, 0.05%)</title><rect x="1049.4" y="341" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1052.41" y="351.5" ></text>
</g>
<g >
<title>make_vfsuid (13,033,958 samples, 0.03%)</title><rect x="1001.2" y="229" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1004.18" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_free (141,924,525 samples, 0.36%)</title><rect x="826.8" y="309" width="4.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="829.83" y="319.5" ></text>
</g>
<g >
<title>update_curr (18,367,488 samples, 0.05%)</title><rect x="890.6" y="277" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="893.61" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (46,342,270 samples, 0.12%)</title><rect x="853.5" y="405" width="1.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="856.49" y="415.5" ></text>
</g>
<g >
<title>fd_install (39,536,547 samples, 0.10%)</title><rect x="1025.1" y="309" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1028.15" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,407,541 samples, 0.03%)</title><rect x="576.5" y="405" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="579.50" y="415.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (10,035,744 samples, 0.03%)</title><rect x="996.0" y="213" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="999.04" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (33,427,674 samples, 0.08%)</title><rect x="556.4" y="341" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="559.41" y="351.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (22,209,761 samples, 0.06%)</title><rect x="992.5" y="165" width="0.7" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="995.49" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,689,720 samples, 0.03%)</title><rect x="907.2" y="357" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="910.24" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,964,833 samples, 0.03%)</title><rect x="399.5" y="485" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="402.49" y="495.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (7,103,261,365 samples, 17.93%)</title><rect x="863.2" y="469" width="211.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="866.18" y="479.5" >fs.Dir.openDir</text>
</g>
<g >
<title>do_sys_openat2 (4,172,055,569 samples, 10.53%)</title><rect x="924.8" y="325" width="124.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="927.80" y="335.5" >do_sys_openat2</text>
</g>
<g >
<title>ext4_sb_block_valid (136,818,666 samples, 0.35%)</title><rect x="687.1" y="213" width="4.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="690.09" y="223.5" ></text>
</g>
<g >
<title>array_list.addOrOom (13,527,860 samples, 0.03%)</title><rect x="450.4" y="453" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="453.45" y="463.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (14,471,099 samples, 0.04%)</title><rect x="849.3" y="293" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="852.28" y="303.5" ></text>
</g>
<g >
<title>posix.close (1,475,307,806 samples, 3.72%)</title><rect x="812.6" y="453" width="44.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="815.62" y="463.5" >posi..</text>
</g>
<g >
<title>check_stack_object (28,109,210 samples, 0.07%)</title><rect x="1044.6" y="261" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1047.63" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (14,111,273 samples, 0.04%)</title><rect x="624.2" y="149" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="627.25" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (13,527,860 samples, 0.03%)</title><rect x="450.4" y="469" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="453.45" y="479.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (11,800,867 samples, 0.03%)</title><rect x="1074.4" y="373" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1077.44" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (12,600,121 samples, 0.03%)</title><rect x="1018.0" y="245" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1020.96" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (19,212,424 samples, 0.05%)</title><rect x="996.3" y="213" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="999.34" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,689,720 samples, 0.03%)</title><rect x="907.2" y="373" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="910.24" y="383.5" ></text>
</g>
<g >
<title>down_read_killable (85,436,986 samples, 0.22%)</title><rect x="597.4" y="341" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="600.43" y="351.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (18,701,479 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.44" y="463.5" ></text>
</g>
<g >
<title>__kernel_text_address (18,527,076 samples, 0.05%)</title><rect x="833.1" y="229" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="836.08" y="239.5" ></text>
</g>
<g >
<title>verify_dirent_name (133,823,962 samples, 0.34%)</title><rect x="625.0" y="293" width="3.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="627.95" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (175,891,058 samples, 0.44%)</title><rect x="856.6" y="453" width="5.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="859.57" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (45,898,641 samples, 0.12%)</title><rect x="861.8" y="437" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="864.81" y="447.5" ></text>
</g>
<g >
<title>lapic_next_deadline (12,094,220 samples, 0.03%)</title><rect x="414.1" y="389" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="417.13" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="165" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1050.38" y="175.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (221,789,699 samples, 0.56%)</title><rect x="856.6" y="469" width="6.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="859.57" y="479.5" ></text>
</g>
<g >
<title>should_failslab (11,502,295 samples, 0.03%)</title><rect x="781.4" y="293" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="784.38" y="303.5" ></text>
</g>
<g >
<title>rcu_core (9,811,673 samples, 0.02%)</title><rect x="279.3" y="421" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="282.30" y="431.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (85,060,388 samples, 0.21%)</title><rect x="847.2" y="325" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="850.17" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (121,477,622 samples, 0.31%)</title><rect x="576.8" y="405" width="3.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="579.81" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock (128,193,038 samples, 0.32%)</title><rect x="681.9" y="213" width="3.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="684.88" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,689,720 samples, 0.03%)</title><rect x="907.2" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="910.24" y="447.5" ></text>
</g>
<g >
<title>putname (23,180,893 samples, 0.06%)</title><rect x="1048.4" y="309" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1051.39" y="319.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (729,375,516 samples, 1.84%)</title><rect x="548.8" y="421" width="21.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="551.77" y="431.5" >m..</text>
</g>
<g >
<title>task_tick_fair (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="261" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1179.02" y="271.5" ></text>
</g>
<g >
<title>mem.eqlBytes (17,556,245 samples, 0.04%)</title><rect x="1101.9" y="437" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1104.90" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,094,220 samples, 0.03%)</title><rect x="414.1" y="437" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="417.13" y="447.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (32,494,848 samples, 0.08%)</title><rect x="540.5" y="421" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="543.46" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,503,802,928 samples, 18.94%)</title><rect x="582.3" y="389" width="223.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="585.26" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>strncpy_from_user (396,773,232 samples, 1.00%)</title><rect x="1033.6" y="293" width="11.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1036.65" y="303.5" ></text>
</g>
<g >
<title>rb_first (30,856,243 samples, 0.08%)</title><rect x="781.7" y="325" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="784.72" y="335.5" ></text>
</g>
<g >
<title>arch_stack_walk (18,527,076 samples, 0.05%)</title><rect x="833.1" y="261" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="836.08" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (11,590,682 samples, 0.03%)</title><rect x="500.1" y="469" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="503.10" y="479.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (26,840,805 samples, 0.07%)</title><rect x="1052.8" y="325" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1055.81" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (19,309,916 samples, 0.05%)</title><rect x="914.2" y="373" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="917.22" y="383.5" ></text>
</g>
<g >
<title>close_fd_get_file (75,901,592 samples, 0.19%)</title><rect x="843.9" y="357" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="846.94" y="367.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (118,642,077 samples, 0.30%)</title><rect x="955.4" y="229" width="3.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="958.38" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (57,098,049 samples, 0.14%)</title><rect x="854.9" y="405" width="1.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="857.87" y="415.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (942,944,734 samples, 2.38%)</title><rect x="279.6" y="501" width="28.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="282.59" y="511.5" >m..</text>
</g>
<g >
<title>make_vfsuid (39,913,523 samples, 0.10%)</title><rect x="793.8" y="309" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="796.81" y="319.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (12,800,333 samples, 0.03%)</title><rect x="557.7" y="357" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="560.69" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (96,941,833 samples, 0.24%)</title><rect x="10.4" y="533" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.40" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="405" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1179.02" y="415.5" ></text>
</g>
<g >
<title>pick_file (16,971,128 samples, 0.04%)</title><rect x="845.7" y="341" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="848.70" y="351.5" ></text>
</g>
<g >
<title>__legitimize_path (59,055,802 samples, 0.15%)</title><rect x="966.6" y="245" width="1.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="969.60" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,080,362 samples, 0.03%)</title><rect x="914.8" y="389" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="917.80" y="399.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,477,339 samples, 0.04%)</title><rect x="890.1" y="277" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="893.08" y="287.5" ></text>
</g>
<g >
<title>amd_clear_divider (21,227,969 samples, 0.05%)</title><rect x="803.6" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="806.59" y="367.5" ></text>
</g>
<g >
<title>rb_next_postorder (22,512,607 samples, 0.06%)</title><rect x="835.1" y="309" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="838.10" y="319.5" ></text>
</g>
<g >
<title>inode_to_bdi (18,480,484 samples, 0.05%)</title><rect x="976.2" y="245" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="979.16" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="245" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1052.08" y="255.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (12,871,352,007 samples, 32.50%)</title><rect x="16.4" y="533" width="383.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="19.44" y="543.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>rb_insert_color (94,269,820 samples, 0.24%)</title><rect x="728.4" y="277" width="2.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="731.44" y="287.5" ></text>
</g>
<g >
<title>try_charge_memcg (12,739,545 samples, 0.03%)</title><rect x="965.2" y="229" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="968.23" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (14,111,273 samples, 0.04%)</title><rect x="624.2" y="197" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="627.25" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,842,526 samples, 0.04%)</title><rect x="412.6" y="437" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="415.59" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (93,680,005 samples, 0.24%)</title><rect x="433.1" y="437" width="2.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="436.10" y="447.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (1,068,251,802 samples, 2.70%)</title><rect x="734.7" y="277" width="31.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="737.75" y="287.5" >__..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (104,425,310 samples, 0.26%)</title><rect x="778.6" y="309" width="3.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="781.61" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (53,263,088 samples, 0.13%)</title><rect x="889.6" y="357" width="1.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="892.57" y="367.5" ></text>
</g>
<g >
<title>os.linux.openat (17,878,276 samples, 0.05%)</title><rect x="909.7" y="421" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="912.67" y="431.5" ></text>
</g>
<g >
<title>iterate_dir (6,860,365,858 samples, 17.32%)</title><rect x="594.8" y="357" width="204.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="597.78" y="367.5" >iterate_dir</text>
</g>
<g >
<title>__find_get_block (1,208,712,363 samples, 3.05%)</title><rect x="649.7" y="229" width="36.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="652.70" y="239.5" >__f..</text>
</g>
<g >
<title>dx_probe (37,095,297 samples, 0.09%)</title><rect x="631.8" y="309" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="634.84" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (49,100,456 samples, 0.12%)</title><rect x="913.3" y="389" width="1.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="916.33" y="399.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (12,964,833 samples, 0.03%)</title><rect x="399.5" y="405" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="402.49" y="415.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (915,749,035 samples, 2.31%)</title><rect x="372.6" y="517" width="27.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="375.60" y="527.5" >m..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (123,231,420 samples, 0.31%)</title><rect x="432.2" y="453" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="435.22" y="463.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (3,788,599,650 samples, 9.56%)</title><rect x="1077.1" y="469" width="112.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1080.14" y="479.5" >mem.indexOfPo..</text>
</g>
<g >
<title>get_page_from_freelist (17,592,073 samples, 0.04%)</title><rect x="717.3" y="197" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="720.29" y="207.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (106,788,869 samples, 0.27%)</title><rect x="697.1" y="213" width="3.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="700.11" y="223.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (12,964,833 samples, 0.03%)</title><rect x="399.5" y="389" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="402.49" y="399.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="341" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.09" y="351.5" ></text>
</g>
<g >
<title>debug.inValgrind (11,800,867 samples, 0.03%)</title><rect x="1074.4" y="405" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1077.44" y="415.5" ></text>
</g>
<g >
<title>stack_trace_save (18,527,076 samples, 0.05%)</title><rect x="833.1" y="277" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="836.08" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,111,273 samples, 0.04%)</title><rect x="624.2" y="229" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="627.25" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (90,135,730 samples, 0.23%)</title><rect x="800.9" y="373" width="2.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="803.90" y="383.5" ></text>
</g>
<g >
<title>rb_next_postorder (56,954,394 samples, 0.14%)</title><rect x="771.7" y="309" width="1.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="774.66" y="319.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (148,902,024 samples, 0.38%)</title><rect x="805.8" y="405" width="4.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="808.80" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (66,765,529 samples, 0.17%)</title><rect x="438.6" y="469" width="2.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="441.61" y="479.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (10,583,659 samples, 0.03%)</title><rect x="555.6" y="373" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="558.56" y="383.5" ></text>
</g>
<g >
<title>__memset (160,757,655 samples, 0.41%)</title><rect x="717.8" y="245" width="4.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="720.82" y="255.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (18,115,860 samples, 0.05%)</title><rect x="401.8" y="501" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="404.79" y="511.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (14,231,005 samples, 0.04%)</title><rect x="444.3" y="453" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="447.34" y="463.5" ></text>
</g>
<g >
<title>init_file (291,832,957 samples, 0.74%)</title><rect x="941.2" y="261" width="8.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="944.23" y="271.5" ></text>
</g>
<g >
<title>do_filp_open (3,076,079,349 samples, 7.77%)</title><rect x="933.5" y="309" width="91.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="936.51" y="319.5" >do_filp_open</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,698,116 samples, 0.04%)</title><rect x="590.5" y="325" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="593.50" y="335.5" ></text>
</g>
<g >
<title>schedule (15,842,526 samples, 0.04%)</title><rect x="412.6" y="421" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="415.59" y="431.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (26,340,449 samples, 0.07%)</title><rect x="832.3" y="293" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="835.29" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,689,720 samples, 0.03%)</title><rect x="907.2" y="389" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="910.24" y="399.5" ></text>
</g>
<g >
<title>mem.eqlBytes (128,352,430 samples, 0.32%)</title><rect x="530.4" y="421" width="3.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="533.44" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (67,484,714 samples, 0.17%)</title><rect x="445.6" y="453" width="2.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="448.63" y="463.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (33,427,674 samples, 0.08%)</title><rect x="556.4" y="357" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="559.41" y="367.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (368,314,519 samples, 0.93%)</title><rect x="558.4" y="389" width="11.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="561.41" y="399.5" ></text>
</g>
<g >
<title>mutex_unlock (58,821,309 samples, 0.15%)</title><rect x="799.2" y="357" width="1.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="802.15" y="367.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (115,589,476 samples, 0.29%)</title><rect x="10.4" y="549" width="3.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.40" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,030,296 samples, 0.05%)</title><rect x="690.6" y="165" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="693.62" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free (98,183,222 samples, 0.25%)</title><rect x="1045.5" y="309" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1048.47" y="319.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (1,185,776,520 samples, 2.99%)</title><rect x="731.2" y="293" width="35.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="734.25" y="303.5" >ex..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="325" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1052.08" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (7,960,739,782 samples, 20.10%)</title><rect x="573.1" y="421" width="237.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="576.08" y="431.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17,418,261 samples, 0.04%)</title><rect x="889.6" y="293" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="892.57" y="303.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (30,868,148 samples, 0.08%)</title><rect x="1053.9" y="373" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1056.94" y="383.5" ></text>
</g>
<g >
<title>amd_clear_divider (10,974,803 samples, 0.03%)</title><rect x="852.5" y="357" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="855.46" y="367.5" ></text>
</g>
<g >
<title>build_open_flags (29,868,261 samples, 0.08%)</title><rect x="932.6" y="309" width="0.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="935.62" y="319.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (4,509,211,569 samples, 11.38%)</title><rect x="632.9" y="309" width="134.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="635.95" y="319.5" >htree_dirblock_t..</text>
</g>
<g >
<title>free_rb_tree_fname (310,895,133 samples, 0.78%)</title><rect x="826.5" y="325" width="9.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="829.51" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,080,362 samples, 0.03%)</title><rect x="914.8" y="341" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="917.80" y="351.5" ></text>
</g>
<g >
<title>fsnotify (88,628,456 samples, 0.22%)</title><rect x="784.9" y="341" width="2.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="787.86" y="351.5" ></text>
</g>
<g >
<title>dput (24,304,490 samples, 0.06%)</title><rect x="823.1" y="341" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="826.14" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="325" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1179.02" y="335.5" ></text>
</g>
<g >
<title>put_prev_entity (15,842,526 samples, 0.04%)</title><rect x="412.6" y="373" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="415.59" y="383.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (25,531,180 samples, 0.06%)</title><rect x="967.6" y="229" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="970.60" y="239.5" ></text>
</g>
<g >
<title>debug.assert (17,629,399 samples, 0.04%)</title><rect x="1060.2" y="437" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1063.17" y="447.5" ></text>
</g>
<g >
<title>update_blocked_averages (10,407,541 samples, 0.03%)</title><rect x="576.5" y="325" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="579.50" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="389" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1104.50" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,080,362 samples, 0.03%)</title><rect x="914.8" y="357" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="917.80" y="367.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (16,234,136 samples, 0.04%)</title><rect x="1056.2" y="405" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1059.24" y="415.5" ></text>
</g>
<g >
<title>lockref_get (14,023,506 samples, 0.04%)</title><rect x="980.9" y="261" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="983.90" y="271.5" ></text>
</g>
<g >
<title>array_list.addOrOom (18,077,565 samples, 0.05%)</title><rect x="451.7" y="469" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="454.70" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (7,300,944,609 samples, 18.43%)</title><rect x="583.4" y="373" width="217.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="586.41" y="383.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>__htab_map_lookup_elem (42,412,096 samples, 0.11%)</title><rect x="985.6" y="197" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="988.65" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (36,610,687 samples, 0.09%)</title><rect x="851.1" y="373" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="854.05" y="383.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (4,643,821,541 samples, 11.72%)</title><rect x="628.9" y="325" width="138.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="631.94" y="335.5" >ext4_htree_fill_t..</text>
</g>
<g >
<title>timekeeping_advance (17,418,261 samples, 0.04%)</title><rect x="889.6" y="309" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="892.57" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (94,302,194 samples, 0.24%)</title><rect x="447.6" y="469" width="2.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="450.64" y="479.5" ></text>
</g>
<g >
<title>run_rebalance_domains (10,407,541 samples, 0.03%)</title><rect x="576.5" y="341" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="579.50" y="351.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (34,923,731 samples, 0.09%)</title><rect x="1186.0" y="421" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1189.01" y="431.5" ></text>
</g>
<g >
<title>security_file_open (522,468,200 samples, 1.32%)</title><rect x="981.3" y="261" width="15.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="984.35" y="271.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (64,469,516 samples, 0.16%)</title><rect x="991.2" y="181" width="2.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="994.24" y="191.5" ></text>
</g>
<g >
<title>ext4_readdir (6,206,149,812 samples, 15.67%)</title><rect x="600.0" y="341" width="184.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="602.98" y="351.5" >ext4_readdir</text>
</g>
<g >
<title>tick_sched_handle (18,030,296 samples, 0.05%)</title><rect x="690.6" y="101" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="693.62" y="111.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (243,099,395 samples, 0.61%)</title><rect x="431.4" y="469" width="7.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="434.36" y="479.5" ></text>
</g>
<g >
<title>task_mm_cid_work (18,575,324 samples, 0.05%)</title><rect x="1052.3" y="293" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1055.26" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (14,111,273 samples, 0.04%)</title><rect x="624.2" y="165" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="627.25" y="175.5" ></text>
</g>
<g >
<title>__filemap_get_folio (430,620,899 samples, 1.09%)</title><rect x="669.1" y="213" width="12.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="672.06" y="223.5" ></text>
</g>
<g >
<title>update_load_avg (10,407,541 samples, 0.03%)</title><rect x="576.5" y="309" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="579.50" y="319.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (8,047,494,276 samples, 20.32%)</title><rect x="570.5" y="437" width="239.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="573.50" y="447.5" >os.linux.getdents64</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,842,526 samples, 0.04%)</title><rect x="412.6" y="469" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="415.59" y="479.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (94,982,405 samples, 0.24%)</title><rect x="1050.0" y="325" width="2.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1052.98" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1192.09" y="335.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (12,800,333 samples, 0.03%)</title><rect x="557.7" y="373" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="560.69" y="383.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (45,898,641 samples, 0.12%)</title><rect x="861.8" y="453" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="864.81" y="463.5" ></text>
</g>
<g >
<title>__schedule (15,842,526 samples, 0.04%)</title><rect x="412.6" y="405" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="415.59" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_lock (20,470,827 samples, 0.05%)</title><rect x="690.0" y="197" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="693.02" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (175,649,274 samples, 0.44%)</title><rect x="503.5" y="453" width="5.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="506.48" y="463.5" ></text>
</g>
<g >
<title>task_tick_fair (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="293" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1104.50" y="303.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11,689,720 samples, 0.03%)</title><rect x="907.2" y="277" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="910.24" y="287.5" ></text>
</g>
<g >
<title>posix.toPosixPath (606,440,861 samples, 1.53%)</title><rect x="1056.7" y="453" width="18.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1059.72" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (34,795,741 samples, 0.09%)</title><rect x="699.3" y="197" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="702.26" y="207.5" ></text>
</g>
<g >
<title>___slab_alloc (19,151,875 samples, 0.05%)</title><rect x="953.5" y="245" width="0.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="956.52" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (592,096,786 samples, 1.49%)</title><rect x="706.7" y="261" width="17.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="709.68" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (61,750,075 samples, 0.16%)</title><rect x="436.8" y="453" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="439.77" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,189,711,567 samples, 3.00%)</title><rect x="815.6" y="373" width="35.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="818.61" y="383.5" >__x..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,394,784 samples, 0.03%)</title><rect x="599.6" y="325" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="602.58" y="335.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (17,408,447 samples, 0.04%)</title><rect x="974.5" y="229" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="977.54" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,698,116 samples, 0.04%)</title><rect x="590.5" y="293" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="593.50" y="303.5" ></text>
</g>
<g >
<title>fput (48,914,101 samples, 0.12%)</title><rect x="1018.3" y="261" width="1.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1021.34" y="271.5" ></text>
</g>
<g >
<title>clockevents_program_event (12,094,220 samples, 0.03%)</title><rect x="414.1" y="405" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="417.13" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (96,323,489 samples, 0.24%)</title><rect x="444.8" y="469" width="2.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="447.77" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,407,541 samples, 0.03%)</title><rect x="576.5" y="389" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="579.50" y="399.5" ></text>
</g>
<g >
<title>mntput_no_expire (29,835,467 samples, 0.08%)</title><rect x="1024.3" y="261" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1027.26" y="271.5" ></text>
</g>
<g >
<title>lockref_put_return (18,383,958 samples, 0.05%)</title><rect x="1023.7" y="245" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1026.71" y="255.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (26,440,443,212 samples, 66.75%)</title><rect x="402.3" y="501" width="787.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="405.33" y="511.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,080,362 samples, 0.03%)</title><rect x="914.8" y="373" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="917.80" y="383.5" ></text>
</g>
<g >
<title>touch_atime (89,621,611 samples, 0.23%)</title><rect x="792.3" y="341" width="2.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="795.33" y="351.5" ></text>
</g>
<g >
<title>__fput_sync (15,757,256 samples, 0.04%)</title><rect x="843.5" y="357" width="0.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="846.47" y="367.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (461,714,194 samples, 1.17%)</title><rect x="1061.0" y="437" width="13.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1064.03" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,111,273 samples, 0.04%)</title><rect x="624.2" y="261" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="627.25" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="357" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1179.02" y="367.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (20,789,299 samples, 0.05%)</title><rect x="965.6" y="261" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="968.61" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,568,767 samples, 0.05%)</title><rect x="958.4" y="213" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="961.37" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,964,833 samples, 0.03%)</title><rect x="399.5" y="469" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="402.49" y="479.5" ></text>
</g>
<g >
<title>__fget_light (115,551,472 samples, 0.29%)</title><rect x="586.2" y="341" width="3.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="589.17" y="351.5" ></text>
</g>
<g >
<title>file_ra_state_init (18,480,484 samples, 0.05%)</title><rect x="976.2" y="261" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="979.16" y="271.5" ></text>
</g>
<g >
<title>is_dx_dir (116,954,111 samples, 0.30%)</title><rect x="774.8" y="325" width="3.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="777.78" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,824,652 samples, 0.02%)</title><rect x="279.3" y="485" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="282.30" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,080,362 samples, 0.03%)</title><rect x="914.8" y="325" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="917.80" y="335.5" ></text>
</g>
<g >
<title>kfree (49,525,241 samples, 0.13%)</title><rect x="833.6" y="309" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="836.63" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (49,392,903 samples, 0.12%)</title><rect x="843.9" y="341" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="846.94" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (11,705,966 samples, 0.03%)</title><rect x="805.4" y="373" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="808.45" y="383.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,477,339 samples, 0.04%)</title><rect x="890.1" y="293" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="893.08" y="303.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (3,382,685,263 samples, 8.54%)</title><rect x="1088.7" y="453" width="100.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1091.67" y="463.5" >mem.indexOfP..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (29,211,726 samples, 0.07%)</title><rect x="1032.8" y="277" width="0.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1035.78" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (18,647,643 samples, 0.05%)</title><rect x="13.3" y="533" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="16.29" y="543.5" ></text>
</g>
<g >
<title>_raw_read_lock (39,248,095 samples, 0.10%)</title><rect x="694.8" y="213" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="697.77" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,698,116 samples, 0.04%)</title><rect x="590.5" y="261" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="593.50" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,689,720 samples, 0.03%)</title><rect x="907.2" y="405" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="910.24" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="341" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1179.02" y="351.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,039,124,174 samples, 2.62%)</title><rect x="700.3" y="293" width="30.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="703.29" y="303.5" >ex..</text>
</g>
<g >
<title>cache_from_obj (23,134,999 samples, 0.06%)</title><rect x="1047.7" y="293" width="0.7" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1050.70" y="303.5" ></text>
</g>
<g >
<title>debug.assert (39,929,526 samples, 0.10%)</title><rect x="446.4" y="437" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="449.45" y="447.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (87,085,709 samples, 0.22%)</title><rect x="13.8" y="549" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="16.84" y="559.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="213" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1050.38" y="223.5" ></text>
</g>
<g >
<title>xas_load (203,792,785 samples, 0.51%)</title><rect x="675.0" y="181" width="6.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="678.04" y="191.5" ></text>
</g>
<g >
<title>[unknown] (216,021,201 samples, 0.55%)</title><rect x="10.0" y="565" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,306,652,039 samples, 3.30%)</title><rect x="814.6" y="405" width="38.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="817.57" y="415.5" >ent..</text>
</g>
<g >
<title>preempt_schedule_irq (9,525,620 samples, 0.02%)</title><rect x="624.7" y="277" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="627.67" y="287.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,074,180,980 samples, 2.71%)</title><rect x="247.6" y="501" width="32.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="250.59" y="511.5" >li..</text>
</g>
<g >
<title>do_syscall_64 (4,480,770,144 samples, 11.31%)</title><rect x="920.5" y="357" width="133.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="923.46" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (53,301,807 samples, 0.13%)</title><rect x="889.6" y="437" width="1.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="892.56" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12,964,833 samples, 0.03%)</title><rect x="399.5" y="373" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="402.49" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (18,978,321 samples, 0.05%)</title><rect x="1055.7" y="405" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1058.67" y="415.5" ></text>
</g>
<g >
<title>__slab_free (67,771,919 samples, 0.17%)</title><rect x="831.1" y="309" width="2.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="834.06" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,698,116 samples, 0.04%)</title><rect x="590.5" y="181" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="593.50" y="191.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (317,928,484 samples, 0.80%)</title><rect x="1176.5" y="421" width="9.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1179.54" y="431.5" ></text>
</g>
<g >
<title>update_process_times (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="309" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.09" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (38,811,363 samples, 0.10%)</title><rect x="587.9" y="325" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="590.95" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (10,080,362 samples, 0.03%)</title><rect x="914.8" y="245" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="917.80" y="255.5" ></text>
</g>
<g >
<title>errseq_sample (36,990,413 samples, 0.09%)</title><rect x="975.1" y="261" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="978.06" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (67,991,105 samples, 0.17%)</title><rect x="13.8" y="533" width="2.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="16.84" y="543.5" ></text>
</g>
<g >
<title>complete_walk (71,474,506 samples, 0.18%)</title><rect x="966.2" y="277" width="2.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="969.23" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (19,059,685 samples, 0.05%)</title><rect x="995.5" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="998.47" y="207.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (11,800,867 samples, 0.03%)</title><rect x="1074.4" y="357" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1077.44" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="293" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1050.38" y="303.5" ></text>
</g>
<g >
<title>update_wall_time (17,418,261 samples, 0.04%)</title><rect x="889.6" y="325" width="0.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="892.57" y="335.5" ></text>
</g>
<g >
<title>lockref_put_return (12,158,328 samples, 0.03%)</title><rect x="597.1" y="309" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="600.07" y="319.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (18,945,154 samples, 0.05%)</title><rect x="541.4" y="437" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="544.42" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,873,434 samples, 0.03%)</title><rect x="988.5" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="991.55" y="191.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (680,754,678 samples, 1.72%)</title><rect x="549.1" y="405" width="20.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="552.10" y="415.5" ></text>
</g>
<g >
<title>native_write_msr (12,094,220 samples, 0.03%)</title><rect x="414.1" y="373" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="417.13" y="383.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (9,776,580,600 samples, 24.68%)</title><rect x="16.4" y="517" width="291.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.44" y="527.5" >combined_runner.linreg_task__anon_8510</text>
</g>
<g >
<title>linreg.LinReg(20).fit (14,008,784 samples, 0.04%)</title><rect x="307.7" y="517" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="310.68" y="527.5" ></text>
</g>
<g >
<title>__fsnotify_parent (12,158,328 samples, 0.03%)</title><rect x="597.1" y="341" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="600.07" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (62,461,121 samples, 0.16%)</title><rect x="803.6" y="373" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="806.59" y="383.5" ></text>
</g>
<g >
<title>fsnotify (55,441,220 samples, 0.14%)</title><rect x="789.3" y="325" width="1.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="792.33" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="373" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1179.02" y="383.5" ></text>
</g>
<g >
<title>debug.assert (9,796,426 samples, 0.02%)</title><rect x="557.4" y="373" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="560.40" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (16,967,395 samples, 0.04%)</title><rect x="589.1" y="325" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="592.11" y="335.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (41,826,856 samples, 0.11%)</title><rect x="820.7" y="341" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="823.71" y="351.5" ></text>
</g>
<g >
<title>update_wall_time (10,947,373 samples, 0.03%)</title><rect x="1049.1" y="229" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1052.08" y="239.5" ></text>
</g>
<g >
<title>terminate_walk (122,360,852 samples, 0.31%)</title><rect x="1021.5" y="277" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1024.50" y="287.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (22,164,757,163 samples, 55.96%)</title><rect x="414.5" y="485" width="660.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="417.49" y="495.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>is_module_text_address (18,527,076 samples, 0.05%)</title><rect x="833.1" y="197" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="836.08" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,964,833 samples, 0.03%)</title><rect x="399.5" y="421" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="402.49" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,964,833 samples, 0.03%)</title><rect x="399.5" y="437" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="402.49" y="447.5" ></text>
</g>
<g >
<title>security_file_permission (45,318,021 samples, 0.11%)</title><rect x="791.0" y="341" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="793.98" y="351.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (642,568,350 samples, 1.62%)</title><rect x="1026.3" y="309" width="19.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1029.33" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,998,666 samples, 0.03%)</title><rect x="399.5" y="501" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="402.49" y="511.5" ></text>
</g>
<g >
<title>update_process_times (18,030,296 samples, 0.05%)</title><rect x="690.6" y="85" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="693.62" y="95.5" ></text>
</g>
<g >
<title>dget_parent (27,456,660 samples, 0.07%)</title><rect x="974.2" y="245" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="977.24" y="255.5" ></text>
</g>
<g >
<title>sync_regs (14,951,861 samples, 0.04%)</title><rect x="861.4" y="421" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="864.37" y="431.5" ></text>
</g>
<g >
<title>update_process_times (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="181" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1050.38" y="191.5" ></text>
</g>
<g >
<title>do_dentry_open (958,577,334 samples, 2.42%)</title><rect x="968.4" y="277" width="28.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="971.36" y="287.5" >do..</text>
</g>
<g >
<title>__schedule (9,525,620 samples, 0.02%)</title><rect x="624.7" y="261" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="627.67" y="271.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (137,249,502 samples, 0.35%)</title><rect x="954.8" y="245" width="4.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="957.83" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (88,098,556 samples, 0.22%)</title><rect x="441.4" y="453" width="2.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="444.40" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.09" y="303.5" ></text>
</g>
<g >
<title>mod_find (18,527,076 samples, 0.05%)</title><rect x="833.1" y="165" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="836.08" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (35,844,827 samples, 0.09%)</title><rect x="890.1" y="341" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="893.08" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="405" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1104.50" y="415.5" ></text>
</g>
<g >
<title>update_curr_se (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="261" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1104.50" y="271.5" ></text>
</g>
<g >
<title>update_process_times (11,689,720 samples, 0.03%)</title><rect x="907.2" y="325" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="910.24" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (17,592,073 samples, 0.04%)</title><rect x="717.3" y="213" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="720.29" y="223.5" ></text>
</g>
<g >
<title>___slab_alloc (36,513,433 samples, 0.09%)</title><rect x="716.7" y="245" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="719.73" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="373" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1192.09" y="383.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (156,415,981 samples, 0.39%)</title><rect x="996.9" y="277" width="4.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="999.91" y="287.5" ></text>
</g>
<g >
<title>alloc_fd (199,616,905 samples, 0.50%)</title><rect x="926.7" y="309" width="5.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="929.67" y="319.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (41,385,033 samples, 0.10%)</title><rect x="993.2" y="197" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="996.16" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="421" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1104.50" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="277" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1050.38" y="287.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (125,622,366 samples, 0.32%)</title><rect x="989.4" y="197" width="3.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="992.41" y="207.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (259,001,223 samples, 0.65%)</title><rect x="758.9" y="261" width="7.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="761.86" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (72,876,722 samples, 0.18%)</title><rect x="947.8" y="229" width="2.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="950.76" y="239.5" ></text>
</g>
<g >
<title>update_process_times (10,080,362 samples, 0.03%)</title><rect x="914.8" y="293" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="917.80" y="303.5" ></text>
</g>
<g >
<title>update_curr (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="277" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1104.50" y="287.5" ></text>
</g>
<g >
<title>folio_mark_accessed (25,833,789 samples, 0.07%)</title><rect x="681.1" y="197" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="684.11" y="207.5" ></text>
</g>
<g >
<title>xas_start (13,074,317 samples, 0.03%)</title><rect x="680.7" y="165" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="683.73" y="175.5" ></text>
</g>
<g >
<title>mem.isAligned (11,160,813 samples, 0.03%)</title><rect x="558.1" y="389" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="561.08" y="399.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (83,953,570 samples, 0.21%)</title><rect x="986.9" y="197" width="2.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="989.91" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (55,083,228 samples, 0.14%)</title><rect x="839.1" y="341" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="842.15" y="351.5" ></text>
</g>
<g >
<title>update_load_avg (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="245" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1179.02" y="255.5" ></text>
</g>
<g >
<title>os.linux.openat (4,718,841,417 samples, 11.91%)</title><rect x="915.1" y="405" width="140.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="918.10" y="415.5" >os.linux.openat</text>
</g>
<g >
<title>all (39,610,032,674 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (12,871,352,007 samples, 32.50%)</title><rect x="16.4" y="549" width="383.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.44" y="559.5" >Thread.LinuxThreadImpl.spawn__anon_3812.Instance.ent..</text>
</g>
<g >
<title>ext4_bread (1,727,318,208 samples, 4.36%)</title><rect x="648.8" y="277" width="51.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="651.83" y="287.5" >ext4_..</text>
</g>
<g >
<title>hrtimer_interrupt (17,698,116 samples, 0.04%)</title><rect x="590.5" y="277" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="593.50" y="287.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (324,974,877 samples, 0.82%)</title><rect x="638.8" y="293" width="9.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="641.79" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (15,842,526 samples, 0.04%)</title><rect x="412.6" y="389" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="415.59" y="399.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (51,221,405 samples, 0.13%)</title><rect x="555.9" y="373" width="1.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="558.88" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (11,109,425 samples, 0.03%)</title><rect x="1053.6" y="341" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1056.61" y="351.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (26,522,659,466 samples, 66.96%)</title><rect x="399.9" y="517" width="790.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="402.88" y="527.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>exit_to_user_mode_prepare (30,313,907 samples, 0.08%)</title><rect x="804.2" y="357" width="0.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="807.22" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,030,296 samples, 0.05%)</title><rect x="690.6" y="197" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="693.62" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,030,296 samples, 0.05%)</title><rect x="690.6" y="37" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="693.62" y="47.5" ></text>
</g>
<g >
<title>memchr (115,899,078 samples, 0.29%)</title><rect x="625.5" y="277" width="3.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="628.49" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.09" y="415.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (13,346,016 samples, 0.03%)</title><rect x="10.0" y="533" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,811,673 samples, 0.02%)</title><rect x="279.3" y="469" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="282.30" y="479.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (19,698,314 samples, 0.05%)</title><rect x="994.4" y="213" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="997.39" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (10,080,362 samples, 0.03%)</title><rect x="914.8" y="277" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="917.80" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (67,171,013 samples, 0.17%)</title><rect x="823.9" y="325" width="2.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="826.87" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (14,111,273 samples, 0.04%)</title><rect x="624.2" y="213" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="627.25" y="223.5" ></text>
</g>
<g >
<title>atime_needs_update (77,295,616 samples, 0.20%)</title><rect x="792.7" y="325" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="795.70" y="335.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (31,033,922 samples, 0.08%)</title><rect x="945.0" y="229" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="948.00" y="239.5" ></text>
</g>
<g >
<title>fsnotify (77,556,102 samples, 0.20%)</title><rect x="836.8" y="341" width="2.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="839.84" y="351.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (1,283,813,920 samples, 3.24%)</title><rect x="209.3" y="501" width="38.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="212.35" y="511.5" >lin..</text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (13,905,588 samples, 0.04%)</title><rect x="1074.8" y="485" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1077.79" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="309" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1104.50" y="319.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (11,394,369 samples, 0.03%)</title><rect x="1060.7" y="437" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1063.69" y="447.5" ></text>
</g>
<g >
<title>__memcpy (82,093,392 samples, 0.21%)</title><rect x="726.0" y="277" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="728.99" y="287.5" ></text>
</g>
<g >
<title>__memset (11,220,914 samples, 0.03%)</title><rect x="780.6" y="293" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="783.56" y="303.5" ></text>
</g>
<g >
<title>dput (12,158,328 samples, 0.03%)</title><rect x="597.1" y="325" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="600.07" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (35,844,827 samples, 0.09%)</title><rect x="890.1" y="309" width="1.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="893.08" y="319.5" ></text>
</g>
<g >
<title>__fget_light (42,747,825 samples, 0.11%)</title><rect x="1017.1" y="261" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1020.07" y="271.5" ></text>
</g>
<g >
<title>ext4_getblk (1,716,356,556 samples, 4.33%)</title><rect x="649.2" y="261" width="51.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="652.16" y="271.5" >ext4_..</text>
</g>
<g >
<title>__slab_free (21,603,304 samples, 0.05%)</title><rect x="825.9" y="325" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="828.87" y="335.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,739,632,593 samples, 4.39%)</title><rect x="648.5" y="293" width="51.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="651.47" y="303.5" >__ext..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (10,919,245 samples, 0.03%)</title><rect x="805.1" y="357" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="808.12" y="367.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (69,377,259 samples, 0.18%)</title><rect x="1058.1" y="437" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1061.10" y="447.5" ></text>
</g>
<g >
<title>debug.inValgrind (104,109,324 samples, 0.26%)</title><rect x="554.3" y="389" width="3.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="557.30" y="399.5" ></text>
</g>
<g >
<title>make_vfsuid (9,611,602 samples, 0.02%)</title><rect x="1014.6" y="229" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1017.62" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1104.50" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="309" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1179.02" y="319.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (16,290,336 samples, 0.04%)</title><rect x="780.9" y="293" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="783.90" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (220,137,557 samples, 0.56%)</title><rect x="1027.1" y="293" width="6.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1030.09" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (16,654,295 samples, 0.04%)</title><rect x="932.1" y="293" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="935.13" y="303.5" ></text>
</g>
<g >
<title>locks_remove_posix (45,088,093 samples, 0.11%)</title><rect x="849.7" y="341" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="852.71" y="351.5" ></text>
</g>
<g >
<title>__slab_free (68,924,723 samples, 0.17%)</title><rect x="769.6" y="309" width="2.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="772.61" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,048,213 samples, 0.03%)</title><rect x="974.2" y="229" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="977.24" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (11,922,915 samples, 0.03%)</title><rect x="852.8" y="357" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="855.78" y="367.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (11,800,867 samples, 0.03%)</title><rect x="1074.4" y="389" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1077.44" y="399.5" ></text>
</g>
<g >
<title>try_to_unlazy (71,474,506 samples, 0.18%)</title><rect x="966.2" y="261" width="2.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="969.23" y="271.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (23,759,693 samples, 0.06%)</title><rect x="766.6" y="293" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="769.57" y="303.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (2,165,013,588 samples, 5.47%)</title><rect x="308.1" y="517" width="64.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="311.10" y="527.5" >linreg...</text>
</g>
<g >
<title>scheduler_tick (18,030,296 samples, 0.05%)</title><rect x="690.6" y="69" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="693.62" y="79.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (3,853,486,502 samples, 9.73%)</title><rect x="1075.2" y="485" width="114.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1078.20" y="495.5" >mem.indexOf__a..</text>
</g>
<g >
<title>kernel_text_address (18,527,076 samples, 0.05%)</title><rect x="833.1" y="213" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="836.08" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (19,217,251 samples, 0.05%)</title><rect x="1023.1" y="261" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1026.14" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,094,220 samples, 0.03%)</title><rect x="414.1" y="421" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="417.13" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (13,200,263 samples, 0.03%)</title><rect x="1101.5" y="357" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1104.50" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,094,220 samples, 0.03%)</title><rect x="414.1" y="453" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="417.13" y="463.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (121,823,210 samples, 0.31%)</title><rect x="1050.0" y="341" width="3.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1052.98" y="351.5" ></text>
</g>
<g >
<title>cache_from_obj (17,873,703 samples, 0.05%)</title><rect x="840.3" y="325" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="843.26" y="335.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (26,522,659,466 samples, 66.96%)</title><rect x="399.9" y="533" width="790.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="402.88" y="543.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>__d_lookup_rcu (287,332,842 samples, 0.73%)</title><rect x="1002.5" y="261" width="8.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1005.49" y="271.5" ></text>
</g>
<g >
<title>metadata_update_state (18,527,076 samples, 0.05%)</title><rect x="833.1" y="293" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="836.08" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (27,160,115 samples, 0.07%)</title><rect x="1054.9" y="373" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1057.86" y="383.5" ></text>
</g>
<g >
<title>lookup_fast (318,055,442 samples, 0.80%)</title><rect x="1001.6" y="277" width="9.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1004.57" y="287.5" ></text>
</g>
<g >
<title>update_process_times (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="293" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.02" y="303.5" ></text>
</g>
<g >
<title>may_open (129,511,331 samples, 0.33%)</title><rect x="1011.0" y="277" width="3.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1014.05" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (33,395,596 samples, 0.08%)</title><rect x="852.1" y="373" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="855.14" y="383.5" ></text>
</g>
<g >
<title>debug.assert (28,631,022 samples, 0.07%)</title><rect x="450.8" y="453" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="453.85" y="463.5" ></text>
</g>
<g >
<title>perf_event_task_tick (11,689,720 samples, 0.03%)</title><rect x="907.2" y="293" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="910.24" y="303.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (203,983,669 samples, 0.51%)</title><rect x="767.3" y="325" width="6.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="770.28" y="335.5" ></text>
</g>
<g >
<title>update_process_times (14,111,273 samples, 0.04%)</title><rect x="624.2" y="181" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="627.25" y="191.5" ></text>
</g>
<g >
<title>generic_permission (58,989,629 samples, 0.15%)</title><rect x="1013.1" y="245" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1016.15" y="255.5" ></text>
</g>
<g >
<title>dnotify_flush (85,060,388 samples, 0.21%)</title><rect x="847.2" y="341" width="2.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="850.17" y="351.5" ></text>
</g>
<g >
<title>should_failslab (10,390,058 samples, 0.03%)</title><rect x="724.0" y="245" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="727.01" y="255.5" ></text>
</g>
<g >
<title>__module_address (18,527,076 samples, 0.05%)</title><rect x="833.1" y="181" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="836.08" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,698,116 samples, 0.04%)</title><rect x="590.5" y="245" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="593.50" y="255.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (41,849,161 samples, 0.11%)</title><rect x="841.6" y="341" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="844.65" y="351.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (18,972,571 samples, 0.05%)</title><rect x="569.4" y="405" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="572.38" y="415.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (49,691,341 samples, 0.13%)</title><rect x="547.3" y="421" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="550.29" y="431.5" ></text>
</g>
<g >
<title>call_filldir (788,887,568 samples, 1.99%)</title><rect x="605.4" y="325" width="23.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="608.44" y="335.5" >c..</text>
</g>
<g >
<title>[unknown] (333,561,563 samples, 0.84%)</title><rect x="984.5" y="213" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="987.45" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (4,989,546,010 samples, 12.60%)</title><rect x="908.1" y="437" width="148.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="911.08" y="447.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (64,100,394 samples, 0.16%)</title><rect x="399.9" y="501" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="402.88" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,080,362 samples, 0.03%)</title><rect x="914.8" y="309" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="917.80" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (170,025,591 samples, 0.43%)</title><rect x="1040.4" y="277" width="5.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1043.40" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (53,263,088 samples, 0.13%)</title><rect x="889.6" y="405" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="892.57" y="415.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (19,018,585 samples, 0.05%)</title><rect x="928.9" y="293" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="931.93" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,748,265 samples, 0.03%)</title><rect x="1047.4" y="229" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1050.38" y="239.5" ></text>
</g>
<g >
<title>generic_permission (40,896,170 samples, 0.10%)</title><rect x="1000.4" y="245" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1003.35" y="255.5" ></text>
</g>
<g >
<title>update_process_times (17,698,116 samples, 0.04%)</title><rect x="590.5" y="213" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="593.50" y="223.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (85,060,388 samples, 0.21%)</title><rect x="847.2" y="309" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="850.17" y="319.5" ></text>
</g>
<g >
<title>mutex_lock (47,461,284 samples, 0.12%)</title><rect x="589.6" y="341" width="1.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="592.61" y="351.5" ></text>
</g>
<g >
<title>filldir64 (525,765,205 samples, 1.33%)</title><rect x="613.3" y="309" width="15.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="616.28" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (18,367,488 samples, 0.05%)</title><rect x="890.6" y="293" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="893.61" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,951,861 samples, 0.04%)</title><rect x="861.4" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="864.37" y="447.5" ></text>
</g>
<g >
<title>cache_from_obj (9,811,673 samples, 0.02%)</title><rect x="279.3" y="373" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="282.30" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,606,425,305 samples, 4.06%)</title><rect x="452.2" y="469" width="47.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="455.24" y="479.5" >comp..</text>
</g>
<g >
<title>fput (96,569,725 samples, 0.24%)</title><rect x="591.9" y="357" width="2.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="594.90" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,779,813 samples, 0.03%)</title><rect x="1189.1" y="389" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.09" y="399.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (88,480,400 samples, 0.22%)</title><rect x="683.1" y="197" width="2.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="686.07" y="207.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (2,840,971,298 samples, 7.17%)</title><rect x="1102.4" y="437" width="84.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1105.42" y="447.5" >mem.eql__..</text>
</g>
<g >
<title>tick_sched_handle (17,698,116 samples, 0.04%)</title><rect x="590.5" y="229" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="593.50" y="239.5" ></text>
</g>
<g >
<title>mod_objcg_state (48,994,769 samples, 0.12%)</title><rect x="963.1" y="229" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="966.13" y="239.5" ></text>
</g>
<g >
<title>kfence_guarded_free (18,527,076 samples, 0.05%)</title><rect x="833.1" y="309" width="0.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="836.08" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,111,273 samples, 0.04%)</title><rect x="624.2" y="293" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="627.25" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,080,362 samples, 0.03%)</title><rect x="914.8" y="405" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="917.80" y="415.5" ></text>
</g>
<g >
<title>kfree (35,697,150 samples, 0.09%)</title><rect x="835.8" y="325" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="838.77" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (10,059,998 samples, 0.03%)</title><rect x="404.2" y="485" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="407.23" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,247,681,062 samples, 10.72%)</title><rect x="922.5" y="341" width="126.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="925.54" y="351.5" >__x64_sys_openat</text>
</g>
<g >
<title>__enqueue_entity (15,842,526 samples, 0.04%)</title><rect x="412.6" y="357" width="0.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="415.59" y="367.5" ></text>
</g>
<g >
<title>update_process_times (35,844,827 samples, 0.09%)</title><rect x="890.1" y="325" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="893.08" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (53,263,088 samples, 0.13%)</title><rect x="889.6" y="373" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="892.57" y="383.5" ></text>
</g>
<g >
<title>[[x_tables]] (28,893,616 samples, 0.07%)</title><rect x="917.8" y="373" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="920.85" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (17,698,116 samples, 0.04%)</title><rect x="590.5" y="197" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="593.50" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,539,633,963 samples, 11.46%)</title><rect x="918.7" y="373" width="135.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="921.71" y="383.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,646,170 samples, 0.04%)</title><rect x="1176.0" y="389" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1179.02" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (35,180,439 samples, 0.09%)</title><rect x="439.5" y="453" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="442.55" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (31,785,469 samples, 0.08%)</title><rect x="810.2" y="437" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="813.23" y="447.5" ></text>
</g>
</g>
</svg>
