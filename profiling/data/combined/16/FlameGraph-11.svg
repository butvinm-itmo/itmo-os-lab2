<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>__mem_cgroup_charge (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="229" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1191.38" y="239.5" ></text>
</g>
<g >
<title>try_to_unlazy (149,411,427 samples, 0.38%)</title><rect x="927.0" y="261" width="4.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="930.00" y="271.5" ></text>
</g>
<g >
<title>mem.eqlBytes (34,145,883 samples, 0.09%)</title><rect x="1073.2" y="437" width="1.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1076.21" y="447.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (373,597,488 samples, 0.96%)</title><rect x="963.1" y="261" width="11.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="966.05" y="271.5" ></text>
</g>
<g >
<title>init_file (569,624,307 samples, 1.46%)</title><rect x="893.6" y="261" width="17.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="896.60" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (13,796,755 samples, 0.04%)</title><rect x="958.4" y="197" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="961.37" y="207.5" ></text>
</g>
<g >
<title>mod_memcg_state (17,160,374 samples, 0.04%)</title><rect x="925.5" y="213" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="928.52" y="223.5" ></text>
</g>
<g >
<title>[unknown] (229,133,683 samples, 0.59%)</title><rect x="10.0" y="565" width="6.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (35,078,906 samples, 0.09%)</title><rect x="474.9" y="373" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="477.85" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (107,215,504 samples, 0.28%)</title><rect x="10.0" y="533" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>vma_expand (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="165" width="1.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1191.87" y="175.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (36,543,687 samples, 0.09%)</title><rect x="794.9" y="405" width="1.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="797.89" y="415.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="133" width="1.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1191.87" y="143.5" ></text>
</g>
<g >
<title>kfree (28,356,177 samples, 0.07%)</title><rect x="686.3" y="309" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="689.27" y="319.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="213" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1191.38" y="223.5" ></text>
</g>
<g >
<title>x64_sys_call (17,751,474 samples, 0.05%)</title><rect x="794.3" y="373" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="797.35" y="383.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (39,423,404 samples, 0.10%)</title><rect x="473.4" y="341" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="476.35" y="351.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (29,702,270,821 samples, 76.31%)</title><rect x="289.5" y="549" width="900.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="292.50" y="559.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,885,489 samples, 0.05%)</title><rect x="601.0" y="165" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="604.01" y="175.5" ></text>
</g>
<g >
<title>_raw_read_unlock (19,349,463 samples, 0.05%)</title><rect x="615.3" y="213" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="618.34" y="223.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (337,564,406 samples, 0.87%)</title><rect x="758.5" y="325" width="10.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="761.50" y="335.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (29,702,270,821 samples, 76.31%)</title><rect x="289.5" y="517" width="900.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="292.50" y="527.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>is_vmalloc_addr (11,505,019 samples, 0.03%)</title><rect x="1008.8" y="261" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1011.81" y="271.5" ></text>
</g>
<g >
<title>__f_unlock_pos (19,813,015 samples, 0.05%)</title><rect x="508.5" y="357" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="511.51" y="367.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (96,098,563 samples, 0.25%)</title><rect x="863.9" y="389" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="866.89" y="399.5" ></text>
</g>
<g >
<title>__fget_light (73,312,917 samples, 0.19%)</title><rect x="983.0" y="261" width="2.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="986.00" y="271.5" ></text>
</g>
<g >
<title>lockref_put_return (37,771,515 samples, 0.10%)</title><rect x="754.4" y="325" width="1.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="757.39" y="335.5" ></text>
</g>
<g >
<title>__slab_free (107,641,634 samples, 0.28%)</title><rect x="683.0" y="309" width="3.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="686.01" y="319.5" ></text>
</g>
<g >
<title>__memset (56,953,176 samples, 0.15%)</title><rect x="644.0" y="245" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="646.99" y="255.5" ></text>
</g>
<g >
<title>kfree (51,195,187 samples, 0.13%)</title><rect x="766.9" y="309" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="769.85" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,158,555 samples, 0.04%)</title><rect x="591.0" y="149" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="594.03" y="159.5" ></text>
</g>
<g >
<title>debug.assert (18,759,391 samples, 0.05%)</title><rect x="855.7" y="437" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="858.65" y="447.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (808,437,643 samples, 2.08%)</title><rect x="167.6" y="501" width="24.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="170.63" y="511.5" >l..</text>
</g>
<g >
<title>lookup_nulls_elem_raw (45,519,381 samples, 0.12%)</title><rect x="954.9" y="197" width="1.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="957.85" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (10,823,799,534 samples, 27.81%)</title><rect x="408.8" y="453" width="328.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="411.76" y="463.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (891,548,209 samples, 2.29%)</title><rect x="809.7" y="453" width="27.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="812.74" y="463.5" >c..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,439,645 samples, 0.04%)</title><rect x="726.4" y="341" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="729.36" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,850,882 samples, 0.05%)</title><rect x="438.3" y="325" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="441.25" y="335.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (235,206,926 samples, 0.60%)</title><rect x="674.6" y="261" width="7.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="677.62" y="271.5" ></text>
</g>
<g >
<title>should_failslab (34,855,685 samples, 0.09%)</title><rect x="648.9" y="245" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="651.87" y="255.5" ></text>
</g>
<g >
<title>lookup_fast (373,597,488 samples, 0.96%)</title><rect x="963.1" y="277" width="11.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="966.05" y="287.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (608,951,022 samples, 1.56%)</title><rect x="990.7" y="309" width="18.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="993.70" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (147,854,087 samples, 0.38%)</title><rect x="332.4" y="469" width="4.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="335.38" y="479.5" ></text>
</g>
<g >
<title>__mod_memcg_state (17,160,374 samples, 0.04%)</title><rect x="925.5" y="197" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="928.52" y="207.5" ></text>
</g>
<g >
<title>fsnotify (29,515,864 samples, 0.08%)</title><rect x="945.7" y="245" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="948.70" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,850,882 samples, 0.05%)</title><rect x="438.3" y="389" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="441.25" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (273,285,280 samples, 0.70%)</title><rect x="798.6" y="453" width="8.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="801.58" y="463.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (745,561,668 samples, 1.92%)</title><rect x="1163.5" y="421" width="22.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1166.48" y="431.5" >m..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (47,183,482 samples, 0.12%)</title><rect x="1013.5" y="325" width="1.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1016.47" y="335.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,052,434,276 samples, 2.70%)</title><rect x="570.0" y="245" width="31.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="573.02" y="255.5" >__..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="389" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1165.63" y="399.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (13,599,129 samples, 0.03%)</title><rect x="736.9" y="453" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="739.91" y="463.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,885,489 samples, 0.05%)</title><rect x="601.0" y="53" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="604.01" y="63.5" ></text>
</g>
<g >
<title>do_anonymous_page (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="245" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.38" y="255.5" ></text>
</g>
<g >
<title>cache_from_obj (16,855,777 samples, 0.04%)</title><rect x="1009.7" y="293" width="0.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1012.72" y="303.5" ></text>
</g>
<g >
<title>mntput (10,734,881 samples, 0.03%)</title><rect x="775.7" y="341" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="778.68" y="351.5" ></text>
</g>
<g >
<title>fput (29,644,493 samples, 0.08%)</title><rect x="985.5" y="261" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="988.55" y="271.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,723,529,199 samples, 4.43%)</title><rect x="566.9" y="293" width="52.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="569.87" y="303.5" >__ext..</text>
</g>
<g >
<title>tick_sched_timer (17,850,882 samples, 0.05%)</title><rect x="438.3" y="341" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="441.25" y="351.5" ></text>
</g>
<g >
<title>debug.assert (13,137,181 samples, 0.03%)</title><rect x="336.5" y="453" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="339.46" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,036,203,656 samples, 5.23%)</title><rect x="338.6" y="469" width="61.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="341.64" y="479.5" >compil..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (30,099,842 samples, 0.08%)</title><rect x="1011.7" y="341" width="0.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1014.67" y="351.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (84,717,720 samples, 0.22%)</title><rect x="1015.7" y="373" width="2.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1018.75" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,773,571,308 samples, 12.26%)</title><rect x="871.0" y="373" width="144.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="874.02" y="383.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>entry_SYSCALL_64 (93,087,486 samples, 0.24%)</title><rect x="13.6" y="533" width="2.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="16.56" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,850,882 samples, 0.05%)</title><rect x="438.3" y="405" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="441.25" y="415.5" ></text>
</g>
<g >
<title>ext4_release_dir (453,909,995 samples, 1.17%)</title><rect x="755.5" y="341" width="13.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="758.53" y="351.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="309" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.87" y="319.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (18,993,230 samples, 0.05%)</title><rect x="896.6" y="229" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="899.57" y="239.5" ></text>
</g>
<g >
<title>mem.eqlBytes (177,186,973 samples, 0.46%)</title><rect x="438.8" y="421" width="5.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="441.79" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (13,793,820 samples, 0.04%)</title><rect x="336.9" y="469" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="339.86" y="479.5" ></text>
</g>
<g >
<title>step_into (49,141,768 samples, 0.13%)</title><rect x="986.4" y="277" width="1.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="989.45" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (17,439,645 samples, 0.04%)</title><rect x="726.4" y="229" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="729.36" y="239.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (4,168,497,900 samples, 10.71%)</title><rect x="1062.0" y="453" width="126.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1065.00" y="463.5" >mem.indexOfPosL..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="453" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.38" y="463.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (38,415,388 samples, 0.10%)</title><rect x="696.6" y="293" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="699.64" y="303.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (17,985,861 samples, 0.05%)</title><rect x="923.2" y="197" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="926.19" y="207.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (4,237,388,027 samples, 10.89%)</title><rect x="1059.9" y="469" width="128.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1062.91" y="479.5" >mem.indexOfPos__..</text>
</g>
<g >
<title>mem.indexOf__anon_8672 (4,265,888,724 samples, 10.96%)</title><rect x="1059.1" y="485" width="129.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1062.05" y="495.5" >mem.indexOf__ano..</text>
</g>
<g >
<title>posix.errno__anon_7363 (19,253,379 samples, 0.05%)</title><rect x="797.1" y="437" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="800.14" y="447.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (57,931,392 samples, 0.15%)</title><rect x="880.8" y="293" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="883.78" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,660,954,345 samples, 11.98%)</title><rect x="874.4" y="357" width="141.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="877.44" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (11,417,013 samples, 0.03%)</title><rect x="324.6" y="469" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="327.56" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,158,555 samples, 0.04%)</title><rect x="591.0" y="165" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="594.03" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,868,692 samples, 0.03%)</title><rect x="794.0" y="245" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="796.99" y="255.5" ></text>
</g>
<g >
<title>do_filp_open (3,397,259,356 samples, 8.73%)</title><rect x="886.1" y="309" width="103.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="889.09" y="319.5" >do_filp_open</text>
</g>
<g >
<title>putname (47,464,809 samples, 0.12%)</title><rect x="1010.2" y="309" width="1.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1013.23" y="319.5" ></text>
</g>
<g >
<title>update_process_times (17,439,645 samples, 0.04%)</title><rect x="726.4" y="245" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="729.36" y="255.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (15,538,605 samples, 0.04%)</title><rect x="451.5" y="421" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="454.54" y="431.5" ></text>
</g>
<g >
<title>dput (11,227,350 samples, 0.03%)</title><rect x="938.2" y="245" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="941.25" y="255.5" ></text>
</g>
<g >
<title>xas_descend (162,395,640 samples, 0.42%)</title><rect x="593.6" y="165" width="4.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="596.57" y="175.5" ></text>
</g>
<g >
<title>update_process_times (18,755,118 samples, 0.05%)</title><rect x="706.4" y="213" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="709.38" y="223.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (323,491,559 samples, 0.83%)</title><rect x="949.0" y="245" width="9.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="951.98" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,158,555 samples, 0.04%)</title><rect x="591.0" y="133" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="594.03" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_free (30,564,688 samples, 0.08%)</title><rect x="682.1" y="309" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="685.08" y="319.5" ></text>
</g>
<g >
<title>__fdget_raw (17,792,958 samples, 0.05%)</title><rect x="982.5" y="261" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="985.46" y="271.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (39,794,499 samples, 0.10%)</title><rect x="806.9" y="437" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="809.86" y="447.5" ></text>
</g>
<g >
<title>mas_update_gap.part.0 (19,502,733 samples, 0.05%)</title><rect x="1189.4" y="101" width="0.6" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1192.41" y="111.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (31,741,832 samples, 0.08%)</title><rect x="291.4" y="501" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="294.40" y="511.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (29,828,738 samples, 0.08%)</title><rect x="475.9" y="373" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="478.92" y="383.5" ></text>
</g>
<g >
<title>make_vfsuid (44,739,309 samples, 0.11%)</title><rect x="718.0" y="309" width="1.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="721.05" y="319.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (61,905,914 samples, 0.16%)</title><rect x="1055.8" y="389" width="1.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1058.78" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,370,031 samples, 0.03%)</title><rect x="13.3" y="533" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="16.25" y="543.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (105,110,326 samples, 0.27%)</title><rect x="319.6" y="469" width="3.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="322.65" y="479.5" ></text>
</g>
<g >
<title>[unknown] (223,109,687 samples, 0.57%)</title><rect x="949.5" y="213" width="6.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="952.47" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (96,098,563 samples, 0.25%)</title><rect x="863.9" y="373" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="866.89" y="383.5" ></text>
</g>
<g >
<title>pick_next_task_fair (18,815,082 samples, 0.05%)</title><rect x="938.6" y="213" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="941.59" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,885,489 samples, 0.05%)</title><rect x="601.0" y="181" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="604.01" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (17,674,077 samples, 0.05%)</title><rect x="910.3" y="213" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="913.34" y="223.5" ></text>
</g>
<g >
<title>lockref_get (41,759,446 samples, 0.11%)</title><rect x="946.6" y="261" width="1.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="949.60" y="271.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (19,099,425 samples, 0.05%)</title><rect x="896.0" y="229" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="898.99" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (164,569,337 samples, 0.42%)</title><rect x="500.2" y="405" width="5.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="503.18" y="415.5" ></text>
</g>
<g >
<title>mas_wr_slot_store (19,502,733 samples, 0.05%)</title><rect x="1189.4" y="117" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.41" y="127.5" ></text>
</g>
<g >
<title>handle_softirqs (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="357" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1166.00" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,755,118 samples, 0.05%)</title><rect x="706.4" y="309" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="709.38" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,755,118 samples, 0.05%)</title><rect x="706.4" y="245" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="709.38" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,868,692 samples, 0.03%)</title><rect x="794.0" y="261" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="796.99" y="271.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,689,179,013 samples, 9.48%)</title><rect x="1074.2" y="437" width="111.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1077.24" y="447.5" >mem.eql__anon..</text>
</g>
<g >
<title>__fsnotify_parent (17,473,260 samples, 0.04%)</title><rect x="525.8" y="341" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="528.84" y="351.5" ></text>
</g>
<g >
<title>posix.close (1,823,433,859 samples, 4.68%)</title><rect x="742.4" y="453" width="55.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="745.44" y="463.5" >posix..</text>
</g>
<g >
<title>os.linux.openat (19,029,419 samples, 0.05%)</title><rect x="858.5" y="421" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="861.46" y="431.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (15,616,119 samples, 0.04%)</title><rect x="458.5" y="405" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="461.51" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="229" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1191.87" y="239.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (229,682,303 samples, 0.59%)</title><rect x="682.1" y="325" width="6.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="685.08" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,755,118 samples, 0.05%)</title><rect x="706.4" y="165" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="709.38" y="175.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (726,596,437 samples, 1.87%)</title><rect x="192.1" y="501" width="22.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="195.14" y="511.5" >m..</text>
</g>
<g >
<title>fput (120,507,903 samples, 0.31%)</title><rect x="520.0" y="357" width="3.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="523.03" y="367.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (5,499,272,882 samples, 14.13%)</title><rect x="856.2" y="437" width="166.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="859.22" y="447.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>tick_sched_timer (17,885,489 samples, 0.05%)</title><rect x="601.0" y="117" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="604.01" y="127.5" ></text>
</g>
<g >
<title>all (38,921,535,510 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>fs.Dir.close (2,002,286,851 samples, 5.14%)</title><rect x="737.3" y="469" width="60.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="740.32" y="479.5" >fs.Dir..</text>
</g>
<g >
<title>get_partial_node.part.0 (10,649,839 samples, 0.03%)</title><rect x="913.4" y="229" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="916.43" y="239.5" ></text>
</g>
<g >
<title>__memset (43,431,184 samples, 0.11%)</title><rect x="913.8" y="245" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="916.75" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (62,526,116 samples, 0.16%)</title><rect x="289.5" y="501" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="292.50" y="511.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (39,794,499 samples, 0.10%)</title><rect x="806.9" y="453" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="809.86" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="309" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1165.63" y="319.5" ></text>
</g>
<g >
<title>os.linux.openat (5,049,190,418 samples, 12.97%)</title><rect x="866.8" y="405" width="153.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="869.80" y="415.5" >os.linux.openat</text>
</g>
<g >
<title>__bpf_prog_exit (15,121,018 samples, 0.04%)</title><rect x="957.9" y="213" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="960.91" y="223.5" ></text>
</g>
<g >
<title>kmalloc_trace (122,865,044 samples, 0.32%)</title><rect x="694.1" y="325" width="3.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="697.08" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,815,082 samples, 0.05%)</title><rect x="938.6" y="261" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="941.59" y="271.5" ></text>
</g>
<g >
<title>htab_map_hash (10,642,929 samples, 0.03%)</title><rect x="950.0" y="181" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="953.00" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (268,801,472 samples, 0.69%)</title><rect x="294.7" y="485" width="8.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="297.73" y="495.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (72,222,948 samples, 0.19%)</title><rect x="950.3" y="197" width="2.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="953.32" y="207.5" ></text>
</g>
<g >
<title>__brelse (27,055,746 samples, 0.07%)</title><rect x="561.2" y="293" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="564.18" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (117,850,444 samples, 0.30%)</title><rect x="431.5" y="437" width="3.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="434.48" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (51,566,086 samples, 0.13%)</title><rect x="1018.3" y="373" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1021.31" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="325" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1191.38" y="335.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (75,642,369 samples, 0.19%)</title><rect x="1186.1" y="437" width="2.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1189.09" y="447.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (16,933,554 samples, 0.04%)</title><rect x="713.7" y="325" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="716.73" y="335.5" ></text>
</g>
<g >
<title>inode_query_iversion (49,326,611 samples, 0.13%)</title><rect x="689.0" y="325" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="692.05" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (592,025,004 samples, 1.52%)</title><rect x="632.0" y="261" width="17.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="634.98" y="271.5" ></text>
</g>
<g >
<title>fs.Dir.close (33,641,785 samples, 0.09%)</title><rect x="1057.7" y="485" width="1.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1060.66" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,439,645 samples, 0.04%)</title><rect x="726.4" y="325" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="729.36" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,755,118 samples, 0.05%)</title><rect x="706.4" y="261" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="709.38" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,868,692 samples, 0.03%)</title><rect x="794.0" y="277" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="796.99" y="287.5" ></text>
</g>
<g >
<title>__brelse (19,516,989 samples, 0.05%)</title><rect x="558.9" y="309" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="561.86" y="319.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4,393,529,447 samples, 11.29%)</title><rect x="878.5" y="325" width="133.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="881.47" y="335.5" >do_sys_openat2</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (20,762,631 samples, 0.05%)</title><rect x="338.0" y="469" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="341.01" y="479.5" ></text>
</g>
<g >
<title>__filemap_get_folio (487,871,360 samples, 1.25%)</title><rect x="583.7" y="213" width="14.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="586.71" y="223.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (928,165,298 samples, 2.38%)</title><rect x="653.6" y="293" width="28.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="656.61" y="303.5" >e..</text>
</g>
<g >
<title>rb_next_postorder (52,219,399 samples, 0.13%)</title><rect x="687.5" y="309" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="690.46" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (14,877,224 samples, 0.04%)</title><rect x="863.4" y="389" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="866.44" y="399.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (7,969,364,674 samples, 20.48%)</title><rect x="494.8" y="421" width="241.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="497.77" y="431.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>kmem_cache_alloc (261,241,114 samples, 0.67%)</title><rect x="991.2" y="293" width="7.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="994.20" y="303.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (1,015,104,247 samples, 2.61%)</title><rect x="459.0" y="405" width="30.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="461.99" y="415.5" >me..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (10,920,218 samples, 0.03%)</title><rect x="1014.9" y="325" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1017.90" y="335.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (11,954,052 samples, 0.03%)</title><rect x="751.2" y="341" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="754.16" y="351.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (18,696,968 samples, 0.05%)</title><rect x="796.6" y="437" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="799.57" y="447.5" ></text>
</g>
<g >
<title>exc_page_fault (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="309" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1191.38" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (41,529,985 samples, 0.11%)</title><rect x="516.4" y="325" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="519.37" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_free (86,986,605 samples, 0.22%)</title><rect x="755.9" y="325" width="2.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="758.86" y="335.5" ></text>
</g>
<g >
<title>ext4_bread (1,685,051,333 samples, 4.33%)</title><rect x="568.0" y="277" width="51.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="571.04" y="287.5" >ext4_..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,439,645 samples, 0.04%)</title><rect x="726.4" y="357" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="729.36" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,850,882 samples, 0.05%)</title><rect x="438.3" y="277" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="441.25" y="287.5" ></text>
</g>
<g >
<title>security_inode_permission (66,885,206 samples, 0.17%)</title><rect x="978.9" y="261" width="2.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="981.88" y="271.5" ></text>
</g>
<g >
<title>[[x_tables]] (323,491,559 samples, 0.83%)</title><rect x="949.0" y="229" width="9.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="951.98" y="239.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (60,016,877 samples, 0.15%)</title><rect x="1021.1" y="405" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1024.13" y="415.5" ></text>
</g>
<g >
<title>security_file_open (407,469,307 samples, 1.05%)</title><rect x="947.9" y="261" width="12.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="950.86" y="271.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (18,490,657 samples, 0.05%)</title><rect x="1022.9" y="453" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1025.95" y="463.5" ></text>
</g>
<g >
<title>__fsnotify_parent (11,227,350 samples, 0.03%)</title><rect x="938.2" y="261" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="941.25" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (23,987,570 samples, 0.06%)</title><rect x="337.3" y="469" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="340.28" y="479.5" ></text>
</g>
<g >
<title>__srcu_read_lock (91,937,365 samples, 0.24%)</title><rect x="785.3" y="293" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="788.26" y="303.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (36,882,771 samples, 0.09%)</title><rect x="1060.9" y="453" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1063.88" y="463.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (28,029,315 samples, 0.07%)</title><rect x="949.5" y="197" width="0.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="952.47" y="207.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (755,519,223 samples, 1.94%)</title><rect x="658.8" y="277" width="22.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="661.84" y="287.5" >_..</text>
</g>
<g >
<title>_raw_read_lock (96,008,729 samples, 0.25%)</title><rect x="612.4" y="213" width="2.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="615.43" y="223.5" ></text>
</g>
<g >
<title>__slab_free (10,902,117 samples, 0.03%)</title><rect x="766.0" y="309" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="768.98" y="319.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (4,044,898,068 samples, 10.39%)</title><rect x="559.5" y="309" width="122.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="562.45" y="319.5" >htree_dirblock_..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (18,804,296 samples, 0.05%)</title><rect x="321.1" y="453" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="324.13" y="463.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (18,697,288 samples, 0.05%)</title><rect x="600.4" y="197" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="603.44" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,850,882 samples, 0.05%)</title><rect x="438.3" y="421" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="441.25" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="277" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.38" y="287.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (93,485,407 samples, 0.24%)</title><rect x="960.2" y="277" width="2.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="963.22" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,439,645 samples, 0.04%)</title><rect x="726.4" y="309" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="729.36" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,868,692 samples, 0.03%)</title><rect x="794.0" y="325" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="796.99" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,147,916 samples, 0.03%)</title><rect x="754.0" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="757.02" y="335.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (140,334,834 samples, 0.36%)</title><rect x="915.4" y="245" width="4.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="918.40" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (30,295,621 samples, 0.08%)</title><rect x="1056.7" y="357" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1059.74" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (37,298,440 samples, 0.10%)</title><rect x="790.9" y="357" width="1.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="793.87" y="367.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (122,865,044 samples, 0.32%)</title><rect x="694.1" y="309" width="3.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="697.08" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (29,814,908 samples, 0.08%)</title><rect x="601.0" y="213" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="604.01" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (452,713,674 samples, 1.16%)</title><rect x="897.1" y="229" width="13.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="900.15" y="239.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,222,237 samples, 0.05%)</title><rect x="399.8" y="421" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="402.76" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (28,684,447 samples, 0.07%)</title><rect x="882.5" y="293" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="885.54" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="373" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.38" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (11,129,274 samples, 0.03%)</title><rect x="294.0" y="485" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="297.03" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (17,850,882 samples, 0.05%)</title><rect x="438.3" y="293" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="441.25" y="303.5" ></text>
</g>
<g >
<title>rb_insert_color (75,004,905 samples, 0.19%)</title><rect x="651.3" y="277" width="2.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="654.34" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (82,926,811 samples, 0.21%)</title><rect x="598.5" y="213" width="2.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="601.50" y="223.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="261" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.87" y="271.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="213" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.87" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (14,789,343 samples, 0.04%)</title><rect x="472.0" y="357" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="475.00" y="367.5" ></text>
</g>
<g >
<title>strncpy_from_user (331,085,744 samples, 0.85%)</title><rect x="999.1" y="293" width="10.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1002.12" y="303.5" ></text>
</g>
<g >
<title>fsnotify (109,600,205 samples, 0.28%)</title><rect x="941.8" y="261" width="3.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="944.81" y="271.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11,929,419 samples, 0.03%)</title><rect x="601.6" y="149" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="604.55" y="159.5" ></text>
</g>
<g >
<title>preempt_schedule (11,929,419 samples, 0.03%)</title><rect x="601.6" y="181" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="604.55" y="191.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (10,553,668 samples, 0.03%)</title><rect x="751.5" y="341" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="754.52" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,566,400,479 samples, 4.02%)</title><rect x="747.4" y="389" width="47.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="750.40" y="399.5" >do_s..</text>
</g>
<g >
<title>memchr (92,663,069 samples, 0.24%)</title><rect x="552.2" y="277" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="555.22" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,369,936,574 samples, 3.52%)</title><rect x="747.7" y="373" width="41.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="750.75" y="383.5" >__x..</text>
</g>
<g >
<title>kmem_cache_alloc (500,159,564 samples, 1.29%)</title><rect x="910.9" y="261" width="15.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="913.87" y="271.5" ></text>
</g>
<g >
<title>call_filldir (751,058,964 samples, 1.93%)</title><rect x="532.3" y="325" width="22.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="535.26" y="335.5" >c..</text>
</g>
<g >
<title>verify_dirent_name (104,499,471 samples, 0.27%)</title><rect x="551.9" y="293" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="554.86" y="303.5" ></text>
</g>
<g >
<title>kfree (10,964,431 samples, 0.03%)</title><rect x="681.7" y="277" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="684.75" y="287.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (543,529,078 samples, 1.40%)</title><rect x="435.5" y="437" width="16.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="438.53" y="447.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (14,460,647 samples, 0.04%)</title><rect x="400.9" y="469" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="403.94" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,607,902,327 samples, 4.13%)</title><rect x="746.1" y="405" width="48.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="749.14" y="415.5" >entr..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (12,108,119 samples, 0.03%)</title><rect x="294.4" y="485" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="297.36" y="495.5" ></text>
</g>
<g >
<title>errseq_sample (75,311,764 samples, 0.19%)</title><rect x="939.2" y="261" width="2.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="942.16" y="271.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (6,505,307,656 samples, 16.71%)</title><rect x="16.9" y="517" width="197.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.95" y="527.5" >combined_runner.linreg_ta..</text>
</g>
<g >
<title>compiler_rt.memset.memset (345,303,365 samples, 0.89%)</title><rect x="836.8" y="453" width="10.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="839.77" y="463.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (551,776,476 samples, 1.42%)</title><rect x="1040.9" y="437" width="16.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.93" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="437" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.38" y="447.5" ></text>
</g>
<g >
<title>check_stack_object (42,025,732 samples, 0.11%)</title><rect x="1007.5" y="261" width="1.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1010.53" y="271.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (55,210,323 samples, 0.14%)</title><rect x="956.2" y="213" width="1.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="959.23" y="223.5" ></text>
</g>
<g >
<title>__virt_addr_valid (103,275,901 samples, 0.27%)</title><rect x="1004.4" y="261" width="3.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1007.40" y="271.5" ></text>
</g>
<g >
<title>update_cfs_group (11,868,692 samples, 0.03%)</title><rect x="794.0" y="181" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="796.99" y="191.5" ></text>
</g>
<g >
<title>c.clone (38,692,401,827 samples, 99.41%)</title><rect x="16.9" y="565" width="1173.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.95" y="575.5" >c.clone</text>
</g>
<g >
<title>tick_sched_timer (17,439,645 samples, 0.04%)</title><rect x="726.4" y="277" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="729.36" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (37,458,111 samples, 0.10%)</title><rect x="321.7" y="453" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="324.70" y="463.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,763,766 samples, 0.03%)</title><rect x="985.2" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="988.22" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="373" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1165.63" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (11,868,692 samples, 0.03%)</title><rect x="794.0" y="213" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="796.99" y="223.5" ></text>
</g>
<g >
<title>memcg_account_kmem (17,160,374 samples, 0.04%)</title><rect x="925.5" y="229" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="928.52" y="239.5" ></text>
</g>
<g >
<title>rcu_core (20,222,237 samples, 0.05%)</title><rect x="399.8" y="389" width="0.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="402.76" y="399.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (17,595,823 samples, 0.05%)</title><rect x="736.4" y="437" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="739.38" y="447.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (48,247,774 samples, 0.12%)</title><rect x="945.1" y="261" width="1.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="948.14" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="389" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1166.00" y="399.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (18,327,926 samples, 0.05%)</title><rect x="139.7" y="485" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="142.74" y="495.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,631,726,438 samples, 6.76%)</title><rect x="1083.7" y="421" width="79.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1086.70" y="431.5" >mem.eqlBy..</text>
</g>
<g >
<title>__kmalloc (656,134,814 samples, 1.69%)</title><rect x="630.7" y="277" width="19.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="633.68" y="287.5" ></text>
</g>
<g >
<title>filldir64 (681,789,505 samples, 1.75%)</title><rect x="534.4" y="309" width="20.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="537.36" y="319.5" ></text>
</g>
<g >
<title>do_dentry_open (946,392,924 samples, 2.43%)</title><rect x="931.5" y="277" width="28.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="934.53" y="287.5" >do..</text>
</g>
<g >
<title>__rcu_read_unlock (18,480,225 samples, 0.05%)</title><rect x="777.8" y="325" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="780.82" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10,496,052 samples, 0.03%)</title><rect x="736.1" y="405" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="739.06" y="415.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18,892,678 samples, 0.05%)</title><rect x="796.0" y="405" width="0.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="799.00" y="415.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="373" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1166.00" y="383.5" ></text>
</g>
<g >
<title>kmalloc_slab (21,420,078 samples, 0.06%)</title><rect x="649.9" y="261" width="0.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="652.92" y="271.5" ></text>
</g>
<g >
<title>kfree (18,556,286 samples, 0.05%)</title><rect x="768.7" y="325" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="771.73" y="335.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (10,192,775 samples, 0.03%)</title><rect x="686.0" y="293" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="688.96" y="303.5" ></text>
</g>
<g >
<title>___slab_alloc (181,520,517 samples, 0.47%)</title><rect x="638.5" y="245" width="5.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="641.48" y="255.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (31,684,598 samples, 0.08%)</title><rect x="452.0" y="437" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="455.01" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,868,692 samples, 0.03%)</title><rect x="794.0" y="309" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="796.99" y="319.5" ></text>
</g>
<g >
<title>mutex_unlock (76,144,076 samples, 0.20%)</title><rect x="722.7" y="357" width="2.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="725.70" y="367.5" ></text>
</g>
<g >
<title>handle_softirqs (20,222,237 samples, 0.05%)</title><rect x="399.8" y="405" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="402.76" y="415.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (71,728,886 samples, 0.18%)</title><rect x="733.9" y="405" width="2.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="736.88" y="415.5" ></text>
</g>
<g >
<title>put_cpu_partial (17,630,832 samples, 0.05%)</title><rect x="643.5" y="213" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="646.45" y="223.5" ></text>
</g>
<g >
<title>lapic_next_deadline (16,158,555 samples, 0.04%)</title><rect x="591.0" y="101" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="594.03" y="111.5" ></text>
</g>
<g >
<title>__call_rcu_common (124,046,069 samples, 0.32%)</title><rect x="748.1" y="357" width="3.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="751.08" y="367.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (77,338,043 samples, 0.20%)</title><rect x="952.5" y="197" width="2.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="955.51" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (10,971,744 samples, 0.03%)</title><rect x="320.8" y="453" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="323.80" y="463.5" ></text>
</g>
<g >
<title>fsnotify (148,830,345 samples, 0.38%)</title><rect x="702.4" y="341" width="4.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="705.43" y="351.5" ></text>
</g>
<g >
<title>may_open (215,490,379 samples, 0.55%)</title><rect x="974.4" y="277" width="6.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="977.38" y="287.5" ></text>
</g>
<g >
<title>dput (60,658,488 samples, 0.16%)</title><rect x="753.7" y="341" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="756.69" y="351.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (119,714,818 samples, 0.31%)</title><rect x="784.9" y="325" width="3.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="787.93" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (15,006,275 samples, 0.04%)</title><rect x="733.4" y="405" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="736.43" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,165,305 samples, 0.04%)</title><rect x="591.0" y="181" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="594.03" y="191.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (46,698,606 samples, 0.12%)</title><rect x="490.2" y="405" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="493.18" y="415.5" ></text>
</g>
<g >
<title>kmem_cache_free (35,357,908 samples, 0.09%)</title><rect x="1009.2" y="309" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1012.16" y="319.5" ></text>
</g>
<g >
<title>debug.assert (38,937,647 samples, 0.10%)</title><rect x="401.4" y="469" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="404.38" y="479.5" ></text>
</g>
<g >
<title>expand_files (13,011,100 samples, 0.03%)</title><rect x="883.4" y="293" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="886.41" y="303.5" ></text>
</g>
<g >
<title>legitimize_links (14,274,514 samples, 0.04%)</title><rect x="931.1" y="245" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="934.09" y="255.5" ></text>
</g>
<g >
<title>rcu_do_batch (20,222,237 samples, 0.05%)</title><rect x="399.8" y="373" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="402.76" y="383.5" ></text>
</g>
<g >
<title>mntput (19,172,710 samples, 0.05%)</title><rect x="988.5" y="261" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="991.51" y="271.5" ></text>
</g>
<g >
<title>locks_remove_posix (23,776,076 samples, 0.06%)</title><rect x="788.6" y="341" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="791.56" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,755,118 samples, 0.05%)</title><rect x="706.4" y="181" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="709.38" y="191.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (17,985,861 samples, 0.05%)</title><rect x="923.2" y="213" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="926.19" y="223.5" ></text>
</g>
<g >
<title>ext4_map_blocks (567,184,283 samples, 1.46%)</title><rect x="601.9" y="245" width="17.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="604.93" y="255.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (75,983,254 samples, 0.20%)</title><rect x="923.7" y="245" width="2.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="926.73" y="255.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (18,707,746 samples, 0.05%)</title><rect x="475.4" y="341" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="478.35" y="351.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (408,590,769 samples, 1.05%)</title><rect x="477.4" y="389" width="12.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="480.38" y="399.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,157,917 samples, 0.05%)</title><rect x="789.3" y="373" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="792.28" y="383.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (111,548,148 samples, 0.29%)</title><rect x="13.6" y="549" width="3.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="16.56" y="559.5" ></text>
</g>
<g >
<title>debug.assert (34,082,940 samples, 0.09%)</title><rect x="470.2" y="389" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="473.17" y="399.5" ></text>
</g>
<g >
<title>inode_permission (30,162,136 samples, 0.08%)</title><rect x="961.8" y="261" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="964.81" y="271.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (105,307,648 samples, 0.27%)</title><rect x="615.9" y="213" width="3.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="618.93" y="223.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (243,105,305 samples, 0.62%)</title><rect x="444.2" y="421" width="7.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="447.17" y="431.5" ></text>
</g>
<g >
<title>up_read (108,740,949 samples, 0.28%)</title><rect x="719.4" y="341" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="722.40" y="351.5" ></text>
</g>
<g >
<title>file_ra_state_init (12,162,385 samples, 0.03%)</title><rect x="941.4" y="261" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="944.44" y="271.5" ></text>
</g>
<g >
<title>array_list.addOrOom (11,280,571 samples, 0.03%)</title><rect x="337.7" y="453" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="340.66" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,222,237 samples, 0.05%)</title><rect x="399.8" y="437" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="402.76" y="447.5" ></text>
</g>
<g >
<title>debug.inValgrind (61,905,914 samples, 0.16%)</title><rect x="1055.8" y="405" width="1.9" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1058.78" y="415.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,744,387,483 samples, 4.48%)</title><rect x="743.7" y="421" width="52.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="746.68" y="431.5" >os.li..</text>
</g>
<g >
<title>valgrind.runningOnValgrind (84,111,999 samples, 0.22%)</title><rect x="472.0" y="373" width="2.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="475.00" y="383.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (8,232,653,435 samples, 21.15%)</title><rect x="808.1" y="469" width="249.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="811.07" y="479.5" >fs.Dir.openDir</text>
</g>
<g >
<title>fs.Dir.Walker.next (24,895,944,655 samples, 63.96%)</title><rect x="302.9" y="485" width="754.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="305.88" y="495.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__schedule (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="341" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1165.63" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.walk (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="469" width="1.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1191.38" y="479.5" ></text>
</g>
<g >
<title>__slab_free (20,222,237 samples, 0.05%)</title><rect x="399.8" y="357" width="0.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="402.76" y="367.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (29,702,270,821 samples, 76.31%)</title><rect x="289.5" y="533" width="900.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="292.50" y="543.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>ext4_inode_block_valid (12,954,963 samples, 0.03%)</title><rect x="603.5" y="213" width="0.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="606.52" y="223.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,386,007,187 samples, 3.56%)</title><rect x="214.2" y="517" width="42.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="217.17" y="527.5" >lin..</text>
</g>
<g >
<title>hrtimer_interrupt (17,850,882 samples, 0.05%)</title><rect x="438.3" y="373" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="441.25" y="383.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (88,872,894 samples, 0.23%)</title><rect x="491.6" y="437" width="2.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="494.59" y="447.5" ></text>
</g>
<g >
<title>build_open_flags (75,472,135 samples, 0.19%)</title><rect x="883.8" y="309" width="2.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="886.80" y="319.5" ></text>
</g>
<g >
<title>debug.assert (20,762,631 samples, 0.05%)</title><rect x="338.0" y="453" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="341.01" y="463.5" ></text>
</g>
<g >
<title>update_process_times (17,850,882 samples, 0.05%)</title><rect x="438.3" y="309" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="441.25" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (33,829,937 samples, 0.09%)</title><rect x="918.6" y="213" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="921.63" y="223.5" ></text>
</g>
<g >
<title>security_file_free (28,892,022 samples, 0.07%)</title><rect x="779.7" y="341" width="0.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="782.73" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,755,118 samples, 0.05%)</title><rect x="706.4" y="325" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="709.38" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (28,074,408 samples, 0.07%)</title><rect x="1162.6" y="405" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1165.63" y="415.5" ></text>
</g>
<g >
<title>filemap_get_entry (429,570,759 samples, 1.10%)</title><rect x="585.5" y="197" width="13.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="588.47" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,246,269 samples, 0.05%)</title><rect x="399.8" y="453" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="402.75" y="463.5" ></text>
</g>
<g >
<title>__put_user_8 (30,690,471 samples, 0.08%)</title><rect x="519.1" y="357" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="522.10" y="367.5" ></text>
</g>
<g >
<title>mem.isAligned (18,265,701 samples, 0.05%)</title><rect x="476.8" y="389" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="479.82" y="399.5" ></text>
</g>
<g >
<title>iterate_dir (6,564,413,745 samples, 16.87%)</title><rect x="523.7" y="357" width="199.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="526.69" y="367.5" >iterate_dir</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (10,649,839 samples, 0.03%)</title><rect x="913.4" y="213" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="916.43" y="223.5" ></text>
</g>
<g >
<title>complete_walk (167,943,946 samples, 0.43%)</title><rect x="926.4" y="277" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="929.43" y="287.5" ></text>
</g>
<g >
<title>security_file_alloc (521,758,761 samples, 1.34%)</title><rect x="895.1" y="245" width="15.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="898.05" y="255.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="357" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1191.38" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,439,645 samples, 0.04%)</title><rect x="726.4" y="261" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="729.36" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (37,876,175 samples, 0.10%)</title><rect x="319.6" y="453" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="322.65" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,327,926 samples, 0.05%)</title><rect x="139.7" y="469" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="142.74" y="479.5" ></text>
</g>
<g >
<title>__check_object_size (221,218,581 samples, 0.57%)</title><rect x="1002.5" y="277" width="6.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1005.45" y="287.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="389" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1191.38" y="399.5" ></text>
</g>
<g >
<title>atime_needs_update (118,317,031 samples, 0.30%)</title><rect x="715.8" y="325" width="3.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="718.82" y="335.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (901,700,141 samples, 2.32%)</title><rect x="140.3" y="501" width="27.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="143.30" y="511.5" >l..</text>
</g>
<g >
<title>migrate_disable (17,823,028 samples, 0.05%)</title><rect x="957.4" y="197" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="960.37" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="261" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.38" y="271.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="325" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.87" y="335.5" ></text>
</g>
<g >
<title>schedule (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="357" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1165.63" y="367.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="485" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.38" y="495.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (17,893,186 samples, 0.05%)</title><rect x="335.9" y="453" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="338.92" y="463.5" ></text>
</g>
<g >
<title>__fput (948,625,109 samples, 2.44%)</title><rect x="751.8" y="357" width="28.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="754.84" y="367.5" >__..</text>
</g>
<g >
<title>cache_from_obj (60,927,075 samples, 0.16%)</title><rect x="773.8" y="325" width="1.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="776.83" y="335.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (7,985,123,474 samples, 20.52%)</title><rect x="494.3" y="437" width="242.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="497.29" y="447.5" >os.linux.getdents64</text>
</g>
<g >
<title>close_fd_get_file (111,795,265 samples, 0.29%)</title><rect x="781.5" y="357" width="3.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="784.54" y="367.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (5,773,378,148 samples, 14.83%)</title><rect x="847.9" y="453" width="175.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="850.91" y="463.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,868,692 samples, 0.03%)</title><rect x="794.0" y="341" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="796.99" y="351.5" ></text>
</g>
<g >
<title>hook_file_open (47,282,134 samples, 0.12%)</title><rect x="958.8" y="245" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="961.78" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (136,745,936 samples, 0.35%)</title><rect x="771.5" y="341" width="4.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="774.54" y="351.5" ></text>
</g>
<g >
<title>__memset (161,756,946 samples, 0.42%)</title><rect x="994.2" y="277" width="4.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="997.22" y="287.5" ></text>
</g>
<g >
<title>filp_flush (143,490,894 samples, 0.37%)</title><rect x="784.9" y="357" width="4.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="787.93" y="367.5" ></text>
</g>
<g >
<title>rb_first (26,990,221 samples, 0.07%)</title><rect x="697.8" y="325" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="700.81" y="335.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (65,479,647 samples, 0.17%)</title><rect x="952.9" y="181" width="2.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="955.87" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (108,354,090 samples, 0.28%)</title><rect x="327.1" y="453" width="3.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="330.05" y="463.5" ></text>
</g>
<g >
<title>touch_atime (170,332,376 samples, 0.44%)</title><rect x="714.2" y="341" width="5.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="717.24" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (17,077,679 samples, 0.04%)</title><rect x="457.5" y="421" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="460.54" y="431.5" ></text>
</g>
<g >
<title>__fdget_pos (329,555,534 samples, 0.85%)</title><rect x="509.1" y="357" width="10.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="512.11" y="367.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (26,142,630 samples, 0.07%)</title><rect x="471.2" y="373" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="474.21" y="383.5" ></text>
</g>
<g >
<title>rb_next (125,513,847 samples, 0.32%)</title><rect x="698.6" y="325" width="3.8" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="701.63" y="335.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (204,357,995 samples, 0.53%)</title><rect x="603.0" y="229" width="6.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="605.99" y="239.5" ></text>
</g>
<g >
<title>__fget_light (217,970,366 samples, 0.56%)</title><rect x="511.0" y="341" width="6.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="514.02" y="351.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (102,991,574 samples, 0.26%)</title><rect x="916.5" y="229" width="3.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="919.54" y="239.5" ></text>
</g>
<g >
<title>update_process_times (11,868,692 samples, 0.03%)</title><rect x="794.0" y="229" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="796.99" y="239.5" ></text>
</g>
<g >
<title>rb_first_postorder (10,900,405 samples, 0.03%)</title><rect x="687.1" y="309" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="690.13" y="319.5" ></text>
</g>
<g >
<title>[unknown] (110,975,787 samples, 0.29%)</title><rect x="863.4" y="405" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="866.44" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (164,265,053 samples, 0.42%)</title><rect x="325.4" y="469" width="4.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="328.36" y="479.5" ></text>
</g>
<g >
<title>amd_clear_divider (29,281,455 samples, 0.08%)</title><rect x="1012.6" y="325" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1015.58" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,327,926 samples, 0.05%)</title><rect x="139.7" y="501" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="142.74" y="511.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,126,585,356 samples, 2.89%)</title><rect x="1023.5" y="453" width="34.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1026.51" y="463.5" >po..</text>
</g>
<g >
<title>ext4_es_lookup_extent (327,775,685 samples, 0.84%)</title><rect x="609.2" y="229" width="9.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="612.18" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (121,082,653 samples, 0.31%)</title><rect x="405.1" y="453" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="408.09" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (18,755,118 samples, 0.05%)</title><rect x="706.4" y="197" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="709.38" y="207.5" ></text>
</g>
<g >
<title>task_tick_fair (11,868,692 samples, 0.03%)</title><rect x="794.0" y="197" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="796.99" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (10,982,143 samples, 0.03%)</title><rect x="915.1" y="245" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="918.07" y="255.5" ></text>
</g>
<g >
<title>mntput_no_expire (78,389,857 samples, 0.20%)</title><rect x="776.0" y="341" width="2.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="779.01" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (16,158,555 samples, 0.04%)</title><rect x="591.0" y="85" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="594.03" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,505,206,524 samples, 19.28%)</title><rect x="505.9" y="389" width="227.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="508.89" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>down_read_killable (61,603,025 samples, 0.16%)</title><rect x="526.4" y="341" width="1.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="529.37" y="351.5" ></text>
</g>
<g >
<title>rb_next_postorder (10,817,754 samples, 0.03%)</title><rect x="768.4" y="309" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="771.40" y="319.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (18,707,746 samples, 0.05%)</title><rect x="475.4" y="357" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="478.35" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,885,489 samples, 0.05%)</title><rect x="601.0" y="133" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="604.01" y="143.5" ></text>
</g>
<g >
<title>ext4_getblk (1,666,351,319 samples, 4.28%)</title><rect x="568.6" y="261" width="50.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="571.60" y="271.5" >ext4_..</text>
</g>
<g >
<title>inode_permission (83,649,831 samples, 0.21%)</title><rect x="976.3" y="261" width="2.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="979.35" y="271.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (18,815,082 samples, 0.05%)</title><rect x="938.6" y="245" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="941.59" y="255.5" ></text>
</g>
<g >
<title>xas_load (230,164,893 samples, 0.59%)</title><rect x="591.5" y="181" width="7.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="594.52" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,509,691,273 samples, 11.59%)</title><rect x="874.9" y="341" width="136.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="877.95" y="351.5" >__x64_sys_openat</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (20,743,684 samples, 0.05%)</title><rect x="323.9" y="453" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="326.94" y="463.5" ></text>
</g>
<g >
<title>is_dx_dir (116,885,416 samples, 0.30%)</title><rect x="690.5" y="325" width="3.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="693.54" y="335.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (65,736,747 samples, 0.17%)</title><rect x="453.0" y="437" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="455.97" y="447.5" ></text>
</g>
<g >
<title>make_vfsuid (10,819,412 samples, 0.03%)</title><rect x="962.7" y="261" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="965.72" y="271.5" ></text>
</g>
<g >
<title>__memcpy (25,137,341 samples, 0.06%)</title><rect x="650.6" y="277" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="653.57" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (33,129,065 samples, 0.09%)</title><rect x="783.9" y="341" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="786.93" y="351.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (67,217,119 samples, 0.17%)</title><rect x="330.3" y="453" width="2.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="333.34" y="463.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (104,080,849 samples, 0.27%)</title><rect x="645.7" y="245" width="3.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="648.71" y="255.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,850,882 samples, 0.05%)</title><rect x="438.3" y="261" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="441.25" y="271.5" ></text>
</g>
<g >
<title>do_mmap (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="197" width="1.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.87" y="207.5" ></text>
</g>
<g >
<title>clockevents_program_event (16,158,555 samples, 0.04%)</title><rect x="591.0" y="117" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="594.03" y="127.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (193,765,640 samples, 0.50%)</title><rect x="706.9" y="341" width="5.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="709.94" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (77,428,631 samples, 0.20%)</title><rect x="792.0" y="357" width="2.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="795.00" y="367.5" ></text>
</g>
<g >
<title>rcu_core (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="341" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1166.00" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (98,748,944 samples, 0.25%)</title><rect x="730.4" y="373" width="3.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="733.43" y="383.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (8,990,131,006 samples, 23.10%)</title><rect x="16.9" y="549" width="272.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.95" y="559.5" >Thread.LinuxThreadImpl.spawn__anon_3..</text>
</g>
<g >
<title>fscrypt_fname_free_buffer (10,964,431 samples, 0.03%)</title><rect x="681.7" y="293" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="684.75" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,850,882 samples, 0.05%)</title><rect x="438.3" y="357" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="441.25" y="367.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (18,902,517 samples, 0.05%)</title><rect x="741.9" y="453" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="744.86" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (41,171,376 samples, 0.11%)</title><rect x="1019.9" y="405" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1022.88" y="415.5" ></text>
</g>
<g >
<title>update_process_times (17,885,489 samples, 0.05%)</title><rect x="601.0" y="85" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="604.01" y="95.5" ></text>
</g>
<g >
<title>alloc_fd (147,201,436 samples, 0.38%)</title><rect x="879.3" y="309" width="4.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="882.34" y="319.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,885,489 samples, 0.05%)</title><rect x="601.0" y="37" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="604.01" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,868,692 samples, 0.03%)</title><rect x="794.0" y="293" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="796.99" y="303.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (13,796,755 samples, 0.04%)</title><rect x="958.4" y="213" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="961.37" y="223.5" ></text>
</g>
<g >
<title>generic_permission (36,971,725 samples, 0.09%)</title><rect x="977.8" y="245" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="980.76" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (149,025,942 samples, 0.38%)</title><rect x="789.8" y="373" width="4.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="792.83" y="383.5" ></text>
</g>
<g >
<title>preempt_schedule_thunk (11,929,419 samples, 0.03%)</title><rect x="601.6" y="197" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="604.55" y="207.5" ></text>
</g>
<g >
<title>__schedule (11,929,419 samples, 0.03%)</title><rect x="601.6" y="165" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="604.55" y="175.5" ></text>
</g>
<g >
<title>__find_get_block (1,040,373,070 samples, 2.67%)</title><rect x="570.4" y="229" width="31.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="573.38" y="239.5" >__..</text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (1,106,298,932 samples, 2.84%)</title><rect x="458.1" y="421" width="33.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="461.05" y="431.5" >me..</text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (1,208,291,394 samples, 3.10%)</title><rect x="455.0" y="437" width="36.6" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="457.96" y="447.5" >mem..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="405" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.38" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,877,224 samples, 0.04%)</title><rect x="863.4" y="373" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="866.44" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (18,773,625 samples, 0.05%)</title><rect x="400.4" y="469" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="403.37" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,439,645 samples, 0.04%)</title><rect x="726.4" y="293" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="729.36" y="303.5" ></text>
</g>
<g >
<title>schedule (18,327,926 samples, 0.05%)</title><rect x="139.7" y="453" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="142.74" y="463.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (69,322,656 samples, 0.18%)</title><rect x="472.4" y="357" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="475.45" y="367.5" ></text>
</g>
<g >
<title>mas_store_prealloc (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="149" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1191.87" y="159.5" ></text>
</g>
<g >
<title>debug.inValgrind (110,254,629 samples, 0.28%)</title><rect x="471.2" y="389" width="3.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="474.21" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,943,717 samples, 0.03%)</title><rect x="952.2" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="955.18" y="191.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (61,905,914 samples, 0.16%)</title><rect x="1055.8" y="373" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1058.78" y="383.5" ></text>
</g>
<g >
<title>__unfreeze_partials (17,903,671 samples, 0.05%)</title><rect x="766.3" y="309" width="0.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="769.31" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (67,217,119 samples, 0.17%)</title><rect x="330.3" y="469" width="2.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="333.34" y="479.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (1,098,816,163 samples, 2.82%)</title><rect x="256.2" y="517" width="33.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="259.19" y="527.5" >me..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (51,452,428 samples, 0.13%)</title><rect x="328.8" y="437" width="1.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="331.78" y="447.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (29,554,608,690 samples, 75.93%)</title><rect x="292.4" y="501" width="896.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="295.36" y="511.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>amd_clear_divider (18,710,479 samples, 0.05%)</title><rect x="790.3" y="357" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="793.30" y="367.5" ></text>
</g>
<g >
<title>dput (17,473,260 samples, 0.04%)</title><rect x="525.8" y="325" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="528.84" y="335.5" ></text>
</g>
<g >
<title>posix.openatZ (5,406,464,087 samples, 13.89%)</title><rect x="859.0" y="421" width="163.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="862.04" y="431.5" >posix.openatZ</text>
</g>
<g >
<title>dnotify_flush (119,714,818 samples, 0.31%)</title><rect x="784.9" y="341" width="3.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="787.93" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (9,032,648 samples, 0.02%)</title><rect x="590.8" y="181" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="593.75" y="191.5" ></text>
</g>
<g >
<title>debug.assert (12,551,233 samples, 0.03%)</title><rect x="858.1" y="421" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="861.08" y="431.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (78,306,128 samples, 0.20%)</title><rect x="1038.6" y="437" width="2.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1041.56" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (14,793,006 samples, 0.04%)</title><rect x="324.9" y="469" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="327.91" y="479.5" ></text>
</g>
<g >
<title>pick_next_entity.isra.0 (18,815,082 samples, 0.05%)</title><rect x="938.6" y="197" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="941.59" y="207.5" ></text>
</g>
<g >
<title>__legitimize_path (122,777,910 samples, 0.32%)</title><rect x="927.4" y="245" width="3.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="930.37" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (18,460,662 samples, 0.05%)</title><rect x="16.4" y="533" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="19.39" y="543.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (160,429,195 samples, 0.41%)</title><rect x="562.0" y="293" width="4.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="565.00" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (117,585,535 samples, 0.30%)</title><rect x="10.0" y="549" width="3.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__legitimize_mnt (70,605,123 samples, 0.18%)</title><rect x="927.9" y="229" width="2.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="930.93" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_free (215,819,656 samples, 0.55%)</title><rect x="759.4" y="309" width="6.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="762.44" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,885,489 samples, 0.05%)</title><rect x="601.0" y="197" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="604.01" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (331,250,248 samples, 0.85%)</title><rect x="798.0" y="469" width="10.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="801.03" y="479.5" ></text>
</g>
<g >
<title>ext4_readdir (5,745,857,664 samples, 14.76%)</title><rect x="528.2" y="341" width="174.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="531.23" y="351.5" >ext4_readdir</text>
</g>
<g >
<title>__schedule (18,327,926 samples, 0.05%)</title><rect x="139.7" y="437" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="142.74" y="447.5" ></text>
</g>
<g >
<title>___slab_alloc (50,009,040 samples, 0.13%)</title><rect x="912.2" y="245" width="1.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="915.24" y="255.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (173,873,978 samples, 0.45%)</title><rect x="603.9" y="213" width="5.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="606.91" y="223.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (12,174,512 samples, 0.03%)</title><rect x="1058.7" y="485" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1061.68" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="293" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1191.38" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,755,118 samples, 0.05%)</title><rect x="706.4" y="293" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="709.38" y="303.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (13,666,700 samples, 0.04%)</title><rect x="489.8" y="405" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="492.76" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (87,385,155 samples, 0.22%)</title><rect x="1012.6" y="341" width="2.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1015.58" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (116,913,432 samples, 0.30%)</title><rect x="726.9" y="373" width="3.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="729.89" y="383.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,137,573,281 samples, 2.92%)</title><rect x="619.1" y="293" width="34.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="622.12" y="303.5" >ex..</text>
</g>
<g >
<title>__rcu_read_lock (18,858,996 samples, 0.05%)</title><rect x="956.8" y="197" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="959.79" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (57,013,731 samples, 0.15%)</title><rect x="322.8" y="469" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="325.84" y="479.5" ></text>
</g>
<g >
<title>os.linux.mmap (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="277" width="1.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1191.87" y="287.5" ></text>
</g>
<g >
<title>__fput_sync (30,926,187 samples, 0.08%)</title><rect x="780.6" y="357" width="0.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="783.60" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,528,881,446 samples, 19.34%)</title><rect x="505.2" y="405" width="228.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="508.17" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>percpu_counter_add_batch (13,104,487 samples, 0.03%)</title><rect x="926.0" y="261" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="929.04" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (17,885,489 samples, 0.05%)</title><rect x="601.0" y="69" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="604.01" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,885,489 samples, 0.05%)</title><rect x="601.0" y="101" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="604.01" y="111.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (10,122,584 samples, 0.03%)</title><rect x="797.7" y="453" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="800.72" y="463.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (536,907,224 samples, 1.38%)</title><rect x="1041.4" y="421" width="16.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1044.38" y="431.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (11,042,028,881 samples, 28.37%)</title><rect x="402.6" y="469" width="334.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="405.56" y="479.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>migrate_enable (15,121,018 samples, 0.04%)</title><rect x="957.9" y="197" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="960.91" y="207.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (16,777,895 samples, 0.04%)</title><rect x="788.1" y="293" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="791.05" y="303.5" ></text>
</g>
<g >
<title>__slab_free (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="309" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1166.00" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (18,607,152 samples, 0.05%)</title><rect x="320.2" y="437" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="323.23" y="447.5" ></text>
</g>
<g >
<title>mutex_lock (48,642,311 samples, 0.12%)</title><rect x="517.6" y="341" width="1.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="520.63" y="351.5" ></text>
</g>
<g >
<title>fsnotify (73,917,115 samples, 0.19%)</title><rect x="769.3" y="341" width="2.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="772.29" y="351.5" ></text>
</g>
<g >
<title>mem.eqlBytes (15,646,070 samples, 0.04%)</title><rect x="435.1" y="437" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="438.06" y="447.5" ></text>
</g>
<g >
<title>mod_objcg_state (48,813,957 samples, 0.13%)</title><rect x="922.3" y="229" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="925.25" y="239.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (17,160,374 samples, 0.04%)</title><rect x="925.5" y="181" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="928.52" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (62,011,322 samples, 0.16%)</title><rect x="725.0" y="373" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="728.01" y="383.5" ></text>
</g>
<g >
<title>terminate_walk (37,956,587 samples, 0.10%)</title><rect x="987.9" y="277" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="990.94" y="287.5" ></text>
</g>
<g >
<title>path_openat (3,270,939,558 samples, 8.40%)</title><rect x="889.9" y="293" width="99.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="892.92" y="303.5" >path_openat</text>
</g>
<g >
<title>psi_account_irqtime (17,439,645 samples, 0.04%)</title><rect x="726.4" y="213" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="729.36" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (134,376,231 samples, 0.35%)</title><rect x="919.7" y="245" width="4.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="922.66" y="255.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (29,664,387 samples, 0.08%)</title><rect x="989.8" y="309" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="992.80" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="421" width="1.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.38" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (46,885,451 samples, 0.12%)</title><rect x="712.8" y="341" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="715.82" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,755,118 samples, 0.05%)</title><rect x="706.4" y="277" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="709.38" y="287.5" ></text>
</g>
<g >
<title>fd_install (23,408,559 samples, 0.06%)</title><rect x="989.1" y="309" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="992.09" y="319.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (33,745,478 samples, 0.09%)</title><rect x="930.1" y="229" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="933.07" y="239.5" ></text>
</g>
<g >
<title>combined_runner (38,921,535,510 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >combined_runner</text>
</g>
<g >
<title>Thread.callFn__anon_7622 (8,990,131,006 samples, 23.10%)</title><rect x="16.9" y="533" width="272.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="19.95" y="543.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>search_name.searchName (53,394,183 samples, 0.14%)</title><rect x="1188.4" y="501" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.38" y="511.5" ></text>
</g>
<g >
<title>mmap_region (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="181" width="1.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1191.87" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (17,010,930 samples, 0.04%)</title><rect x="1015.2" y="341" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1018.23" y="351.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (44,343,919 samples, 0.11%)</title><rect x="778.4" y="341" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="781.38" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (22,101,284 samples, 0.06%)</title><rect x="847.2" y="453" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="850.24" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,885,489 samples, 0.05%)</title><rect x="601.0" y="149" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="604.01" y="159.5" ></text>
</g>
<g >
<title>make_vfsgid (17,721,538 samples, 0.05%)</title><rect x="717.5" y="309" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="720.51" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.38" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (16,107,705 samples, 0.04%)</title><rect x="1163.0" y="325" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1166.00" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="245" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.87" y="255.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (108,715,260 samples, 0.28%)</title><rect x="785.3" y="309" width="3.3" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="788.26" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,755,118 samples, 0.05%)</title><rect x="706.4" y="229" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="709.38" y="239.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="341" width="1.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1191.87" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (11,966,703 samples, 0.03%)</title><rect x="1162.6" y="325" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1165.63" y="335.5" ></text>
</g>
<g >
<title>os.linux.close (1,755,136,861 samples, 4.51%)</title><rect x="743.4" y="437" width="53.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="746.36" y="447.5" >os.li..</text>
</g>
<g >
<title>mem.alignForward__anon_3584 (74,979,948 samples, 0.19%)</title><rect x="474.5" y="389" width="2.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="477.55" y="399.5" ></text>
</g>
<g >
<title>posix.mmap (37,385,753 samples, 0.10%)</title><rect x="1188.9" y="293" width="1.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.87" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (4,994,079,604 samples, 12.83%)</title><rect x="868.5" y="389" width="151.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="871.47" y="399.5" >os.linux.x86_64.sys..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (86,430,050 samples, 0.22%)</title><rect x="727.8" y="357" width="2.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="730.81" y="367.5" ></text>
</g>
<g >
<title>fsnotify (169,766,597 samples, 0.44%)</title><rect x="707.7" y="325" width="5.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="710.67" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (7,197,999,161 samples, 18.49%)</title><rect x="506.8" y="373" width="218.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="509.79" y="383.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>path_init (182,574,972 samples, 0.47%)</title><rect x="980.9" y="277" width="5.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="983.91" y="287.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (17,630,832 samples, 0.05%)</title><rect x="643.5" y="229" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="646.45" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (15,993,152 samples, 0.04%)</title><rect x="1003.9" y="261" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1006.92" y="271.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,082,888,358 samples, 2.78%)</title><rect x="893.6" y="277" width="32.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="896.60" y="287.5" >al..</text>
</g>
<g >
<title>compiler_rt.memset.memset (16,008,430 samples, 0.04%)</title><rect x="1188.4" y="341" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.38" y="351.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (4,190,757,174 samples, 10.77%)</title><rect x="555.0" y="325" width="127.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="558.03" y="335.5" >ext4_htree_fill..</text>
</g>
<g >
<title>__schedule (18,815,082 samples, 0.05%)</title><rect x="938.6" y="229" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="941.59" y="239.5" ></text>
</g>
</g>
</svg>
