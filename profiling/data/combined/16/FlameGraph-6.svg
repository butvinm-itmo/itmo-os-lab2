<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>rb_first (14,871,846 samples, 0.04%)</title><rect x="754.0" y="277" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="757.04" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (20,945,067 samples, 0.06%)</title><rect x="477.5" y="213" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="480.47" y="223.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (115,890,793 samples, 0.35%)</title><rect x="758.6" y="293" width="4.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="761.61" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20,945,067 samples, 0.06%)</title><rect x="477.5" y="229" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="480.47" y="239.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (685,311,969 samples, 2.07%)</title><rect x="560.2" y="357" width="24.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="563.18" y="367.5" >m..</text>
</g>
<g >
<title>call_filldir (613,472,220 samples, 1.85%)</title><rect x="619.3" y="277" width="21.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="622.31" y="287.5" >c..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (39,261,720 samples, 0.12%)</title><rect x="569.4" y="341" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="572.38" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (4,869,742,900 samples, 14.71%)</title><rect x="597.1" y="325" width="173.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="600.06" y="335.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>valgrind.runningOnValgrind (9,640,252 samples, 0.03%)</title><rect x="1101.2" y="341" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1104.19" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,278,986 samples, 0.02%)</title><rect x="621.5" y="229" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="624.46" y="239.5" ></text>
</g>
<g >
<title>x64_sys_call (7,738,519 samples, 0.02%)</title><rect x="773.1" y="325" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="776.06" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (234,983,606 samples, 0.71%)</title><rect x="959.3" y="197" width="8.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="962.31" y="207.5" ></text>
</g>
<g >
<title>[[x_tables]] (28,451,573 samples, 0.09%)</title><rect x="920.3" y="325" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="923.34" y="335.5" ></text>
</g>
<g >
<title>array_list.addOrOom (14,410,581 samples, 0.04%)</title><rect x="479.7" y="421" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="482.65" y="431.5" ></text>
</g>
<g >
<title>__fget_light (96,063,020 samples, 0.29%)</title><rect x="1027.2" y="213" width="3.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1030.17" y="223.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (58,936,180 samples, 0.18%)</title><rect x="567.3" y="325" width="2.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="570.28" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6,914,098 samples, 0.02%)</title><rect x="928.7" y="245" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="931.70" y="255.5" ></text>
</g>
<g >
<title>atime_needs_update (58,824,938 samples, 0.18%)</title><rect x="765.5" y="277" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="768.53" y="287.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (502,987,342 samples, 1.52%)</title><rect x="423.8" y="469" width="18.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="426.84" y="479.5" ></text>
</g>
<g >
<title>mem.eqlBytes (14,185,274 samples, 0.04%)</title><rect x="1117.9" y="389" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1120.87" y="399.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (114,745,724 samples, 0.35%)</title><rect x="740.2" y="277" width="4.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="743.22" y="287.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (533,643,305 samples, 1.61%)</title><rect x="720.9" y="245" width="19.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="723.92" y="255.5" ></text>
</g>
<g >
<title>ext4_map_blocks (275,141,917 samples, 0.83%)</title><rect x="687.0" y="197" width="9.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="690.05" y="207.5" ></text>
</g>
<g >
<title>path_openat (2,792,027,154 samples, 8.43%)</title><rect x="934.4" y="245" width="99.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="937.38" y="255.5" >path_openat</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (97,647,327 samples, 0.29%)</title><rect x="476.2" y="421" width="3.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="479.17" y="431.5" ></text>
</g>
<g >
<title>filemap_get_entry (389,813,340 samples, 1.18%)</title><rect x="669.4" y="149" width="13.9" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="672.44" y="159.5" ></text>
</g>
<g >
<title>mas_update_gap.part.0 (7,387,712 samples, 0.02%)</title><rect x="478.0" y="85" width="0.2" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="480.95" y="95.5" ></text>
</g>
<g >
<title>locks_remove_posix (96,855,730 samples, 0.29%)</title><rect x="843.9" y="293" width="3.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="846.85" y="303.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (1,619,252,908 samples, 4.89%)</title><rect x="1118.4" y="389" width="57.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1121.38" y="399.5" >mem.eq..</text>
</g>
<g >
<title>__handle_mm_fault (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.14" y="223.5" ></text>
</g>
<g >
<title>filp_flush (289,352,263 samples, 0.87%)</title><rect x="837.0" y="309" width="10.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="839.99" y="319.5" ></text>
</g>
<g >
<title>posix.mmap (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="245" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1182.48" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (8,899,834 samples, 0.03%)</title><rect x="762.4" y="181" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="765.43" y="191.5" ></text>
</g>
<g >
<title>lookup_fast (191,202,439 samples, 0.58%)</title><rect x="1012.5" y="229" width="6.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1015.49" y="239.5" ></text>
</g>
<g >
<title>kfree (47,856,874 samples, 0.14%)</title><rect x="825.3" y="261" width="1.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="828.30" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,913,018 samples, 0.04%)</title><rect x="545.9" y="341" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="548.90" y="351.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (431,838,371 samples, 1.30%)</title><rect x="724.6" y="229" width="15.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="727.55" y="239.5" ></text>
</g>
<g >
<title>do_exit (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="453" width="9.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1183.47" y="463.5" ></text>
</g>
<g >
<title>security_file_alloc (177,531,121 samples, 0.54%)</title><rect x="940.0" y="197" width="6.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="942.97" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="341" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1182.14" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,133,054 samples, 0.03%)</title><rect x="559.8" y="309" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="562.82" y="319.5" ></text>
</g>
<g >
<title>c.clone (32,635,670,143 samples, 98.59%)</title><rect x="17.1" y="517" width="1163.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="20.05" y="527.5" >c.clone</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,315,355 samples, 0.02%)</title><rect x="584.3" y="293" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="587.35" y="303.5" ></text>
</g>
<g >
<title>__kmalloc (445,943,998 samples, 1.35%)</title><rect x="701.8" y="229" width="15.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="704.77" y="239.5" ></text>
</g>
<g >
<title>Thread.join (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1192.80" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (24,531,843 samples, 0.07%)</title><rect x="797.0" y="357" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="799.95" y="367.5" ></text>
</g>
<g >
<title>search_name.searchName (37,170,279 samples, 0.11%)</title><rect x="1179.1" y="453" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1182.14" y="463.5" ></text>
</g>
<g >
<title>mas_store_prealloc (7,387,712 samples, 0.02%)</title><rect x="478.0" y="133" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="480.95" y="143.5" ></text>
</g>
<g >
<title>do_filp_open (2,890,175,106 samples, 8.73%)</title><rect x="930.9" y="261" width="103.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="933.88" y="271.5" >do_filp_open</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (21,658,861 samples, 0.07%)</title><rect x="824.2" y="245" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="827.20" y="255.5" ></text>
</g>
<g >
<title>fsnotify (74,921,332 samples, 0.23%)</title><rect x="755.9" y="293" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="758.94" y="303.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (67,523,340 samples, 0.20%)</title><rect x="688.1" y="181" width="2.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="691.12" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,913,018 samples, 0.04%)</title><rect x="545.9" y="357" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="548.90" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (14,862,208 samples, 0.04%)</title><rect x="480.7" y="277" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="483.68" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (14,036,081 samples, 0.04%)</title><rect x="465.1" y="389" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="468.09" y="399.5" ></text>
</g>
<g >
<title>schedule (9,434,947 samples, 0.03%)</title><rect x="589.8" y="309" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="592.80" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,500,243 samples, 0.02%)</title><rect x="921.4" y="229" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="924.35" y="239.5" ></text>
</g>
<g >
<title>_raw_read_lock (41,669,136 samples, 0.13%)</title><rect x="695.1" y="165" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="698.11" y="175.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (364,474,532 samples, 1.10%)</title><rect x="1088.5" y="389" width="13.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1091.54" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (317,776,814 samples, 0.96%)</title><rect x="444.0" y="437" width="11.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="446.97" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (88,044,996 samples, 0.27%)</title><rect x="468.8" y="405" width="3.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="471.81" y="415.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (22,603,116 samples, 0.07%)</title><rect x="997.4" y="149" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1000.37" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,714,557 samples, 0.04%)</title><rect x="770.1" y="277" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="773.13" y="287.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (36,415,690 samples, 0.11%)</title><rect x="998.2" y="165" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1001.17" y="175.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (6,464,589,071 samples, 19.53%)</title><rect x="871.1" y="421" width="230.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="874.08" y="431.5" >fs.Dir.openDir</text>
</g>
<g >
<title>mem.eqlBytes (159,112,251 samples, 0.48%)</title><rect x="546.3" y="373" width="5.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="549.32" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="149" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1060.28" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,208,420,417 samples, 3.65%)</title><rect x="481.2" y="421" width="43.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="484.21" y="431.5" >comp..</text>
</g>
<g >
<title>should_failslab (8,933,747 samples, 0.03%)</title><rect x="714.7" y="197" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="717.68" y="207.5" ></text>
</g>
<g >
<title>mntput_no_expire (36,507,118 samples, 0.11%)</title><rect x="829.9" y="293" width="1.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="832.85" y="303.5" ></text>
</g>
<g >
<title>[unknown] (197,858,468 samples, 0.60%)</title><rect x="10.0" y="517" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>update_process_times (8,899,834 samples, 0.03%)</title><rect x="762.4" y="149" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="765.43" y="159.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (7,718,660,497 samples, 23.32%)</title><rect x="524.8" y="421" width="275.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="527.76" y="431.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,500,243 samples, 0.02%)</title><rect x="921.4" y="293" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="924.35" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (14,506,749 samples, 0.04%)</title><rect x="638.2" y="117" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="641.17" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="69" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1060.28" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_lock (97,237,200 samples, 0.29%)</title><rect x="683.3" y="165" width="3.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="686.34" y="175.5" ></text>
</g>
<g >
<title>os.linux.mmap (20,945,067 samples, 0.06%)</title><rect x="477.5" y="261" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="480.47" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,315,355 samples, 0.02%)</title><rect x="584.3" y="245" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="587.35" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_free (30,973,644 samples, 0.09%)</title><rect x="817.7" y="277" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="820.70" y="287.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (7,311,596 samples, 0.02%)</title><rect x="696.6" y="165" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="699.60" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,862,208 samples, 0.04%)</title><rect x="480.7" y="405" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="483.68" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,506,749 samples, 0.04%)</title><rect x="638.2" y="181" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="641.17" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (7,654,269,969 samples, 23.12%)</title><rect x="526.8" y="405" width="272.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="529.75" y="415.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>ext4_sb_block_valid (67,523,340 samples, 0.20%)</title><rect x="688.1" y="165" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="691.12" y="175.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (1,095,018,569 samples, 3.31%)</title><rect x="657.8" y="245" width="39.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="660.82" y="255.5" >__e..</text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (10,690,694,001 samples, 32.30%)</title><rect x="17.1" y="469" width="381.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.05" y="479.5" >combined_runner.linreg_task__anon_8510</text>
</g>
<g >
<title>handle_mm_fault (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="229" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1182.14" y="239.5" ></text>
</g>
<g >
<title>lockref_put_return (8,564,454 samples, 0.03%)</title><rect x="1032.7" y="197" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1035.68" y="207.5" ></text>
</g>
<g >
<title>task_work_run (14,452,785 samples, 0.04%)</title><rect x="480.2" y="373" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="483.16" y="383.5" ></text>
</g>
<g >
<title>inode_permission (58,358,873 samples, 0.18%)</title><rect x="1020.9" y="213" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1023.94" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (10,133,054 samples, 0.03%)</title><rect x="559.8" y="213" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="562.82" y="223.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (9,640,252 samples, 0.03%)</title><rect x="1101.2" y="325" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1104.19" y="335.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,862,208 samples, 0.04%)</title><rect x="480.7" y="389" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="483.68" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.80" y="367.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (1,910,312,231 samples, 5.77%)</title><rect x="330.1" y="453" width="68.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="333.06" y="463.5" >mem.doN..</text>
</g>
<g >
<title>do_syscall_64 (4,979,567,927 samples, 15.04%)</title><rect x="595.8" y="341" width="177.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="598.82" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>dput (42,476,382 samples, 0.13%)</title><rect x="815.1" y="293" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="818.10" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (14,719,249 samples, 0.04%)</title><rect x="1101.5" y="437" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1104.53" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (14,506,749 samples, 0.04%)</title><rect x="638.2" y="165" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="641.17" y="175.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (6,821,691 samples, 0.02%)</title><rect x="950.1" y="165" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="953.11" y="175.5" ></text>
</g>
<g >
<title>__fget_light (93,631,347 samples, 0.28%)</title><rect x="598.4" y="293" width="3.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="601.40" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.80" y="335.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (321,638,913 samples, 0.97%)</title><rect x="573.1" y="341" width="11.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="576.14" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (156,928,953 samples, 0.47%)</title><rect x="862.7" y="405" width="5.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="865.70" y="415.5" ></text>
</g>
<g >
<title>rb_insert_color (38,052,053 samples, 0.11%)</title><rect x="719.6" y="229" width="1.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="722.57" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (87,611,678 samples, 0.26%)</title><rect x="914.7" y="325" width="3.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="917.72" y="335.5" ></text>
</g>
<g >
<title>security_inode_permission (21,437,577 samples, 0.06%)</title><rect x="1023.0" y="213" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1026.02" y="223.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (276,268,182 samples, 0.83%)</title><rect x="1164.7" y="373" width="9.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1167.74" y="383.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (2,691,608,514 samples, 8.13%)</title><rect x="644.3" y="261" width="95.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="647.27" y="271.5" >htree_dirbl..</text>
</g>
<g >
<title>fs.Dir.openDirZ (5,020,465,524 samples, 15.17%)</title><rect x="907.7" y="405" width="179.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="910.69" y="415.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (2,114,655,907 samples, 6.39%)</title><rect x="1103.8" y="421" width="75.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1106.76" y="431.5" >mem.inde..</text>
</g>
<g >
<title>kmem_cache_alloc (697,763,744 samples, 2.11%)</title><rect x="946.3" y="213" width="24.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="949.30" y="223.5" >k..</text>
</g>
<g >
<title>mem.Allocator.rawAlloc (20,945,067 samples, 0.06%)</title><rect x="477.5" y="309" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="480.47" y="319.5" ></text>
</g>
<g >
<title>generic_permission (7,596,626 samples, 0.02%)</title><rect x="1009.0" y="197" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1012.01" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (20,945,067 samples, 0.06%)</title><rect x="477.5" y="405" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="480.47" y="415.5" ></text>
</g>
<g >
<title>rb_next (38,595,929 samples, 0.12%)</title><rect x="754.6" y="277" width="1.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="757.57" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="485" width="9.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1183.47" y="495.5" ></text>
</g>
<g >
<title>expand_files (9,738,082 samples, 0.03%)</title><rect x="929.2" y="245" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="932.20" y="255.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (46,008,412 samples, 0.14%)</title><rect x="763.9" y="277" width="1.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="766.89" y="287.5" ></text>
</g>
<g >
<title>ext4_release_dir (305,824,351 samples, 0.92%)</title><rect x="816.6" y="293" width="10.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="819.62" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (11,675,272 samples, 0.04%)</title><rect x="847.8" y="325" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="850.84" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (339,239,726 samples, 1.02%)</title><rect x="702.9" y="213" width="12.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="705.91" y="223.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (8,812,810 samples, 0.03%)</title><rect x="941.5" y="181" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="944.49" y="191.5" ></text>
</g>
<g >
<title>os.linux.close (1,606,362,879 samples, 4.85%)</title><rect x="805.4" y="389" width="57.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="808.43" y="399.5" >os.lin..</text>
</g>
<g >
<title>exc_page_fault (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="261" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1182.14" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,606,362,879 samples, 4.85%)</title><rect x="805.4" y="373" width="57.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="808.43" y="383.5" >os.lin..</text>
</g>
<g >
<title>do_dentry_open (874,483,282 samples, 2.64%)</title><rect x="975.3" y="229" width="31.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="978.34" y="239.5" >do..</text>
</g>
<g >
<title>ttwu_do_activate (14,862,208 samples, 0.04%)</title><rect x="480.7" y="341" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="483.68" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (106,615,567 samples, 0.32%)</title><rect x="1061.5" y="293" width="3.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1064.53" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,500,243 samples, 0.02%)</title><rect x="921.4" y="261" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="924.35" y="271.5" ></text>
</g>
<g >
<title>__unfreeze_partials (8,995,068 samples, 0.03%)</title><rect x="825.0" y="261" width="0.3" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="827.97" y="271.5" ></text>
</g>
<g >
<title>__enqueue_entity (9,434,947 samples, 0.03%)</title><rect x="589.8" y="245" width="0.3" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="592.80" y="255.5" ></text>
</g>
<g >
<title>try_to_unlazy (87,243,660 samples, 0.26%)</title><rect x="972.2" y="213" width="3.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="975.23" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (29,605,112 samples, 0.09%)</title><rect x="472.8" y="405" width="1.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="475.80" y="415.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (740,706,241 samples, 2.24%)</title><rect x="558.2" y="373" width="26.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="561.20" y="383.5" >m..</text>
</g>
<g >
<title>posix.close (1,621,154,872 samples, 4.90%)</title><rect x="804.9" y="405" width="57.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="807.90" y="415.5" >posix...</text>
</g>
<g >
<title>perf_event_task_tick (14,506,749 samples, 0.04%)</title><rect x="638.2" y="101" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="641.17" y="111.5" ></text>
</g>
<g >
<title>combined_runner.main (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="453" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.80" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (7,016,668 samples, 0.02%)</title><rect x="329.8" y="437" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="332.81" y="447.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (19,874,757 samples, 0.06%)</title><rect x="567.3" y="309" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="570.28" y="319.5" ></text>
</g>
<g >
<title>legitimize_links (7,805,182 samples, 0.02%)</title><rect x="975.1" y="197" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="978.06" y="207.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (44,038,046 samples, 0.13%)</title><rect x="995.8" y="133" width="1.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="998.80" y="143.5" ></text>
</g>
<g >
<title>update_cfs_group (7,500,243 samples, 0.02%)</title><rect x="921.4" y="165" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="924.35" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="277" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1182.14" y="287.5" ></text>
</g>
<g >
<title>dput (8,564,454 samples, 0.03%)</title><rect x="1032.7" y="213" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1035.68" y="223.5" ></text>
</g>
<g >
<title>filldir64 (546,001,430 samples, 1.65%)</title><rect x="621.7" y="261" width="19.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="624.72" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,141,187,416 samples, 3.45%)</title><rect x="807.8" y="357" width="40.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="810.83" y="367.5" >ent..</text>
</g>
<g >
<title>ext4_getblk (1,087,674,311 samples, 3.29%)</title><rect x="658.1" y="213" width="38.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="661.08" y="223.5" >ext..</text>
</g>
<g >
<title>common_interrupt (7,016,668 samples, 0.02%)</title><rect x="329.8" y="421" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="332.81" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,714,557 samples, 0.04%)</title><rect x="770.1" y="261" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="773.13" y="271.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (6,821,691 samples, 0.02%)</title><rect x="950.1" y="181" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="953.11" y="191.5" ></text>
</g>
<g >
<title>iterate_dir (4,525,764,259 samples, 13.67%)</title><rect x="608.0" y="309" width="161.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="611.00" y="319.5" >iterate_dir</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,014,626,945 samples, 15.15%)</title><rect x="594.6" y="357" width="178.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="597.57" y="367.5" >entry_SYSCALL_64_after_..</text>
</g>
<g >
<title>update_curr_se (10,133,054 samples, 0.03%)</title><rect x="559.8" y="165" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="562.82" y="175.5" ></text>
</g>
<g >
<title>__schedule (8,921,447 samples, 0.03%)</title><rect x="584.0" y="261" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="587.03" y="271.5" ></text>
</g>
<g >
<title>xas_start (54,237,985 samples, 0.16%)</title><rect x="681.4" y="117" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="684.41" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (7,034,473 samples, 0.02%)</title><rect x="928.9" y="245" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="931.95" y="255.5" ></text>
</g>
<g >
<title>__memset (37,307,095 samples, 0.11%)</title><rect x="751.4" y="245" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="754.42" y="255.5" ></text>
</g>
<g >
<title>task_work_run (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="437" width="9.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1183.47" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (29,902,482 samples, 0.09%)</title><rect x="1059.3" y="261" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1062.34" y="271.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (167,623,166 samples, 0.51%)</title><rect x="1006.5" y="229" width="6.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1009.51" y="239.5" ></text>
</g>
<g >
<title>ktime_get (7,315,355 samples, 0.02%)</title><rect x="584.3" y="229" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="587.35" y="239.5" ></text>
</g>
<g >
<title>__put_user_8 (38,292,675 samples, 0.12%)</title><rect x="605.8" y="309" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="608.83" y="319.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (7,748,162 samples, 0.02%)</title><rect x="999.5" y="117" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1002.47" y="127.5" ></text>
</g>
<g >
<title>__virt_addr_valid (53,809,493 samples, 0.16%)</title><rect x="1055.6" y="213" width="2.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1058.64" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,133,054 samples, 0.03%)</title><rect x="559.8" y="245" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="562.82" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,913,018 samples, 0.04%)</title><rect x="545.9" y="309" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="548.90" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (14,714,557 samples, 0.04%)</title><rect x="770.1" y="213" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="773.13" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (227,815,872 samples, 0.69%)</title><rect x="897.9" y="405" width="8.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="900.94" y="415.5" ></text>
</g>
<g >
<title>__legitimize_mnt (42,102,681 samples, 0.13%)</title><rect x="972.7" y="181" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="975.74" y="191.5" ></text>
</g>
<g >
<title>debug.assert (14,951,294 samples, 0.05%)</title><rect x="566.4" y="341" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="569.41" y="351.5" ></text>
</g>
<g >
<title>kmalloc_slab (74,705,780 samples, 0.23%)</title><rect x="715.0" y="213" width="2.7" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="718.00" y="223.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="357" width="9.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1183.47" y="367.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (7,360,552 samples, 0.02%)</title><rect x="584.6" y="389" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="587.61" y="399.5" ></text>
</g>
<g >
<title>locks_remove_file (7,318,652 samples, 0.02%)</title><rect x="829.6" y="293" width="0.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="832.59" y="303.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (29,195,337 samples, 0.09%)</title><rect x="811.4" y="293" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="814.38" y="303.5" ></text>
</g>
<g >
<title>may_open (125,575,374 samples, 0.38%)</title><rect x="1019.3" y="229" width="4.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1022.30" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="373" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1182.14" y="383.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (22,320,032 samples, 0.07%)</title><rect x="1105.9" y="405" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1108.95" y="415.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (87,611,678 samples, 0.26%)</title><rect x="914.7" y="341" width="3.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="917.72" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,054,206 samples, 0.04%)</title><rect x="1030.1" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1033.09" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (398,145,505 samples, 1.20%)</title><rect x="1037.7" y="245" width="14.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1040.67" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_free (23,793,253 samples, 0.07%)</title><rect x="740.2" y="261" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="743.22" y="271.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (21,343,791 samples, 0.06%)</title><rect x="966.9" y="165" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="969.92" y="175.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (547,198,880 samples, 1.65%)</title><rect x="535.0" y="389" width="19.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="537.99" y="399.5" ></text>
</g>
<g >
<title>terminate_walk (34,466,508 samples, 0.10%)</title><rect x="1032.7" y="229" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1035.68" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (52,594,588 samples, 0.16%)</title><rect x="771.2" y="309" width="1.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="774.18" y="319.5" ></text>
</g>
<g >
<title>errseq_sample (95,311,754 samples, 0.29%)</title><rect x="979.5" y="213" width="3.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="982.52" y="223.5" ></text>
</g>
<g >
<title>__getblk_gfp (775,442,701 samples, 2.34%)</title><rect x="659.4" y="197" width="27.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="662.40" y="207.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (7,748,162 samples, 0.02%)</title><rect x="999.5" y="69" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1002.47" y="79.5" ></text>
</g>
<g >
<title>generic_permission (43,562,163 samples, 0.13%)</title><rect x="1021.5" y="197" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1024.46" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (112,550,403 samples, 0.34%)</title><rect x="10.5" y="501" width="4.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.53" y="511.5" ></text>
</g>
<g >
<title>__find_get_block (775,442,701 samples, 2.34%)</title><rect x="659.4" y="181" width="27.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="662.40" y="191.5" >_..</text>
</g>
<g >
<title>mas_wr_slot_store (7,387,712 samples, 0.02%)</title><rect x="478.0" y="101" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="480.95" y="111.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (147,877,317 samples, 0.45%)</title><rect x="953.0" y="181" width="5.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="956.01" y="191.5" ></text>
</g>
<g >
<title>array_list.addOrOom (40,252,890 samples, 0.12%)</title><rect x="478.2" y="405" width="1.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="481.22" y="415.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (141,116,917 samples, 0.43%)</title><rect x="838.8" y="261" width="5.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="841.82" y="271.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (334,438,992 samples, 1.01%)</title><rect x="990.4" y="197" width="11.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="993.35" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,141,187,416 samples, 3.45%)</title><rect x="807.8" y="341" width="40.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="810.83" y="351.5" >do_..</text>
</g>
<g >
<title>compiler_rt.memset.memset (13,202,403 samples, 0.04%)</title><rect x="524.3" y="421" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="527.29" y="431.5" ></text>
</g>
<g >
<title>enqueue_task_fair (14,862,208 samples, 0.04%)</title><rect x="480.7" y="309" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="483.68" y="319.5" ></text>
</g>
<g >
<title>do_group_exit (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="469" width="9.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1183.47" y="479.5" ></text>
</g>
<g >
<title>lockref_get (44,570,719 samples, 0.13%)</title><rect x="986.8" y="213" width="1.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="989.83" y="223.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (814,255,473 samples, 2.46%)</title><rect x="555.6" y="389" width="29.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="558.58" y="399.5" >me..</text>
</g>
<g >
<title>syscall_return_via_sysret (59,151,966 samples, 0.18%)</title><rect x="1084.0" y="325" width="2.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1086.99" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="197" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.48" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (17,833,328 samples, 0.05%)</title><rect x="465.6" y="405" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="468.59" y="415.5" ></text>
</g>
<g >
<title>down_read_killable (28,951,290 samples, 0.09%)</title><rect x="610.4" y="293" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="613.42" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,133,054 samples, 0.03%)</title><rect x="559.8" y="277" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="562.82" y="287.5" ></text>
</g>
<g >
<title>xas_descend (147,110,094 samples, 0.44%)</title><rect x="676.2" y="117" width="5.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="679.16" y="127.5" ></text>
</g>
<g >
<title>handle_softirqs (7,278,986 samples, 0.02%)</title><rect x="621.5" y="213" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="624.46" y="223.5" ></text>
</g>
<g >
<title>task_tick_fair (10,133,054 samples, 0.03%)</title><rect x="559.8" y="197" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="562.82" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (15,673,753 samples, 0.05%)</title><rect x="914.2" y="341" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="917.16" y="351.5" ></text>
</g>
<g >
<title>__memset (134,305,860 samples, 0.41%)</title><rect x="708.3" y="197" width="4.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="711.29" y="207.5" ></text>
</g>
<g >
<title>__memset (37,403,880 samples, 0.11%)</title><rect x="943.9" y="165" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="946.90" y="175.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="261" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1182.48" y="271.5" ></text>
</g>
<g >
<title>ext4_bread (1,087,674,311 samples, 3.29%)</title><rect x="658.1" y="229" width="38.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="661.08" y="239.5" >ext..</text>
</g>
<g >
<title>pick_file (27,527,233 samples, 0.08%)</title><rect x="836.0" y="293" width="1.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="839.01" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="309" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1182.14" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (10,544,492 samples, 0.03%)</title><rect x="610.0" y="293" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="613.04" y="303.5" ></text>
</g>
<g >
<title>task_mm_cid_work (14,452,785 samples, 0.04%)</title><rect x="480.2" y="357" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="483.16" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,899,834 samples, 0.03%)</title><rect x="762.4" y="261" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="765.43" y="271.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (14,958,359 samples, 0.05%)</title><rect x="571.0" y="325" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="574.02" y="335.5" ></text>
</g>
<g >
<title>inode_query_iversion (46,411,775 samples, 0.14%)</title><rect x="744.3" y="277" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="747.31" y="287.5" ></text>
</g>
<g >
<title>update_curr (10,133,054 samples, 0.03%)</title><rect x="559.8" y="181" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="562.82" y="191.5" ></text>
</g>
<g >
<title>build_open_flags (37,345,564 samples, 0.11%)</title><rect x="929.5" y="261" width="1.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="932.55" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_se (14,862,208 samples, 0.04%)</title><rect x="480.7" y="261" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="483.68" y="271.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (40,823,036 samples, 0.12%)</title><rect x="1034.8" y="261" width="1.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1037.79" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9,434,947 samples, 0.03%)</title><rect x="589.8" y="341" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="592.80" y="351.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_7915 (20,945,067 samples, 0.06%)</title><rect x="477.5" y="341" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="480.47" y="351.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (65,042,785 samples, 0.20%)</title><rect x="473.9" y="421" width="2.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="476.85" y="431.5" ></text>
</g>
<g >
<title>update_process_times (11,913,018 samples, 0.04%)</title><rect x="545.9" y="261" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="548.90" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (24,104,554 samples, 0.07%)</title><rect x="554.7" y="389" width="0.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="557.72" y="399.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (5,973,735,327 samples, 18.05%)</title><rect x="584.9" y="389" width="212.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="587.87" y="399.5" >os.linux.getdents64</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (137,769,233 samples, 0.42%)</title><rect x="467.6" y="421" width="4.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="470.55" y="431.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.80" y="287.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (20,945,067 samples, 0.06%)</title><rect x="477.5" y="357" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="480.47" y="367.5" ></text>
</g>
<g >
<title>os.linux.mmap (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="229" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1182.48" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,921,447 samples, 0.03%)</title><rect x="584.0" y="293" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="587.03" y="303.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (51,520,917 samples, 0.16%)</title><rect x="570.8" y="341" width="1.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="573.78" y="351.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (30,098,577 samples, 0.09%)</title><rect x="945.2" y="165" width="1.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="948.23" y="175.5" ></text>
</g>
<g >
<title>__slab_free (29,001,521 samples, 0.09%)</title><rect x="823.9" y="261" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="826.94" y="271.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.join (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.80" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,434,947 samples, 0.03%)</title><rect x="589.8" y="325" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="592.80" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1060.28" y="191.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (662,607,198 samples, 2.00%)</title><rect x="773.3" y="357" width="23.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="776.33" y="367.5" >e..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (14,463,790 samples, 0.04%)</title><rect x="480.2" y="405" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="483.16" y="415.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (98,020,243 samples, 0.30%)</title><rect x="967.7" y="197" width="3.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="970.68" y="207.5" ></text>
</g>
<g >
<title>housekeeping_test_cpu (6,762,468 samples, 0.02%)</title><rect x="686.8" y="165" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="689.81" y="175.5" ></text>
</g>
<g >
<title>start._start (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.80" y="527.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (2,506,922,544 samples, 7.57%)</title><rect x="240.7" y="453" width="89.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="243.69" y="463.5" >linreg.Lin..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="405" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.14" y="415.5" ></text>
</g>
<g >
<title>rcu_core (7,278,986 samples, 0.02%)</title><rect x="621.5" y="197" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="624.46" y="207.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (720,322,540 samples, 2.18%)</title><rect x="398.2" y="469" width="25.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="401.16" y="479.5" >l..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (45,032,290 samples, 0.14%)</title><rect x="713.1" y="197" width="1.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="716.08" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,002,584,572 samples, 12.09%)</title><rect x="922.6" y="309" width="142.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="925.65" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (15,869,719 samples, 0.05%)</title><rect x="1086.1" y="357" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1089.09" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (28,800,249 samples, 0.09%)</title><rect x="958.3" y="181" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="961.28" y="191.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (177,433,512 samples, 0.54%)</title><rect x="690.5" y="181" width="6.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="693.53" y="191.5" ></text>
</g>
<g >
<title>xhci_irq (7,016,668 samples, 0.02%)</title><rect x="329.8" y="341" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="332.81" y="351.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (7,716,709 samples, 0.02%)</title><rect x="739.9" y="245" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="742.95" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (39,061,423 samples, 0.12%)</title><rect x="568.0" y="293" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="570.98" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="325" width="0.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1182.14" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (112,550,403 samples, 0.34%)</title><rect x="10.5" y="485" width="4.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.53" y="495.5" ></text>
</g>
<g >
<title>[[x_tables]] (296,817,169 samples, 0.90%)</title><rect x="991.2" y="181" width="10.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="994.17" y="191.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (22,512,326 samples, 0.07%)</title><rect x="571.6" y="325" width="0.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="574.56" y="335.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (7,016,668 samples, 0.02%)</title><rect x="329.8" y="357" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="332.81" y="367.5" ></text>
</g>
<g >
<title>fsnotify (30,093,799 samples, 0.09%)</title><rect x="985.8" y="197" width="1.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="988.75" y="207.5" ></text>
</g>
<g >
<title>update_process_times (7,500,243 samples, 0.02%)</title><rect x="921.4" y="213" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="924.35" y="223.5" ></text>
</g>
<g >
<title>path_get (16,091,542 samples, 0.05%)</title><rect x="988.4" y="213" width="0.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="991.42" y="223.5" ></text>
</g>
<g >
<title>os.linux.openat (4,719,846,753 samples, 14.26%)</title><rect x="917.8" y="357" width="168.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="920.84" y="367.5" >os.linux.openat</text>
</g>
<g >
<title>tick_sched_handle (11,913,018 samples, 0.04%)</title><rect x="545.9" y="277" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="548.90" y="287.5" ></text>
</g>
<g >
<title>verify_dirent_name (69,963,886 samples, 0.21%)</title><rect x="638.7" y="245" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="641.69" y="255.5" ></text>
</g>
<g >
<title>handle_edge_irq (7,016,668 samples, 0.02%)</title><rect x="329.8" y="389" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="332.81" y="399.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (6,420,642 samples, 0.02%)</title><rect x="554.5" y="389" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="557.49" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (124,154,477 samples, 0.38%)</title><rect x="590.1" y="357" width="4.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="593.14" y="367.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (7,748,162 samples, 0.02%)</title><rect x="999.5" y="165" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1002.47" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,133,054 samples, 0.03%)</title><rect x="559.8" y="293" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="562.82" y="303.5" ></text>
</g>
<g >
<title>__fput (590,452,917 samples, 1.78%)</title><rect x="812.6" y="309" width="21.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="815.63" y="319.5" ></text>
</g>
<g >
<title>__mutex_init (24,429,433 samples, 0.07%)</title><rect x="939.1" y="197" width="0.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="942.10" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (49,815,352 samples, 0.15%)</title><rect x="1057.6" y="213" width="1.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1060.56" y="223.5" ></text>
</g>
<g >
<title>security_file_open (491,547,196 samples, 1.48%)</title><rect x="989.0" y="213" width="17.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="991.99" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (20,688,430 samples, 0.06%)</title><rect x="526.0" y="405" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="529.01" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (14,506,749 samples, 0.04%)</title><rect x="638.2" y="149" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="641.17" y="159.5" ></text>
</g>
<g >
<title>__slab_free (54,958,247 samples, 0.17%)</title><rect x="741.1" y="261" width="1.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="744.07" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (14,714,557 samples, 0.04%)</title><rect x="770.1" y="165" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="773.13" y="175.5" ></text>
</g>
<g >
<title>mutex_lock (114,752,945 samples, 0.35%)</title><rect x="601.7" y="293" width="4.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="604.74" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,133,054 samples, 0.03%)</title><rect x="559.8" y="261" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="562.82" y="271.5" ></text>
</g>
<g >
<title>update_process_times (14,506,749 samples, 0.04%)</title><rect x="638.2" y="133" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="641.17" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,500,243 samples, 0.02%)</title><rect x="921.4" y="309" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="924.35" y="319.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (675,149,507 samples, 2.04%)</title><rect x="696.9" y="245" width="24.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="699.86" y="255.5" >e..</text>
</g>
<g >
<title>posix.mmap (20,945,067 samples, 0.06%)</title><rect x="477.5" y="277" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="480.47" y="287.5" ></text>
</g>
<g >
<title>fs.Dir.close (1,761,056,565 samples, 5.32%)</title><rect x="799.9" y="421" width="62.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="802.92" y="431.5" >fs.Dir..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (38,951,835 samples, 0.12%)</title><rect x="472.5" y="421" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="475.46" y="431.5" ></text>
</g>
<g >
<title>os.linux.munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1192.80" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (24,892,672 samples, 0.08%)</title><rect x="1000.6" y="149" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1003.57" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="133" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1060.28" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,031,275,116 samples, 12.18%)</title><rect x="921.6" y="325" width="143.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="924.62" y="335.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>__rcu_read_unlock (8,068,589 samples, 0.02%)</title><rect x="1001.5" y="165" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1004.46" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="517" width="9.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1183.47" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,506,749 samples, 0.04%)</title><rect x="638.2" y="245" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="641.17" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (27,107,265 samples, 0.08%)</title><rect x="828.6" y="293" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="831.62" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (14,898,800 samples, 0.05%)</title><rect x="10.0" y="485" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>fput (22,418,361 samples, 0.07%)</title><rect x="607.2" y="309" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="610.20" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,133,054 samples, 0.03%)</title><rect x="559.8" y="341" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="562.82" y="351.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (176,807,269 samples, 0.53%)</title><rect x="1013.0" y="213" width="6.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1016.00" y="223.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="277" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1182.48" y="287.5" ></text>
</g>
<g >
<title>perf_event_task_tick (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="53" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1060.28" y="63.5" ></text>
</g>
<g >
<title>up_read (47,963,033 samples, 0.14%)</title><rect x="767.6" y="293" width="1.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="770.62" y="303.5" ></text>
</g>
<g >
<title>hook_file_open (118,875,536 samples, 0.36%)</title><rect x="1002.3" y="197" width="4.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1005.27" y="207.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (11,914,003,883 samples, 35.99%)</title><rect x="17.1" y="501" width="424.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="20.05" y="511.5" >Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn</text>
</g>
<g >
<title>ext4_readdir (4,053,295,053 samples, 12.25%)</title><rect x="611.4" y="293" width="144.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="614.45" y="303.5" >ext4_readdir</text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (7,748,162 samples, 0.02%)</title><rect x="999.5" y="133" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1002.47" y="143.5" ></text>
</g>
<g >
<title>put_prev_entity (9,434,947 samples, 0.03%)</title><rect x="589.8" y="261" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="592.80" y="271.5" ></text>
</g>
<g >
<title>is_dx_dir (75,484,062 samples, 0.23%)</title><rect x="746.0" y="277" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="748.97" y="287.5" ></text>
</g>
<g >
<title>enqueue_entity (14,862,208 samples, 0.04%)</title><rect x="480.7" y="293" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="483.68" y="303.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (349,719,865 samples, 1.06%)</title><rect x="1089.1" y="373" width="12.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1092.06" y="383.5" ></text>
</g>
<g >
<title>dnotify_flush (178,430,879 samples, 0.54%)</title><rect x="837.5" y="293" width="6.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="840.49" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,315,355 samples, 0.02%)</title><rect x="584.3" y="309" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="587.35" y="319.5" ></text>
</g>
<g >
<title>__fput (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="421" width="9.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1183.47" y="431.5" ></text>
</g>
<g >
<title>[unknown] (189,220,320 samples, 0.57%)</title><rect x="991.4" y="165" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="994.43" y="175.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (23,069,736 samples, 0.07%)</title><rect x="974.2" y="181" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="977.24" y="191.5" ></text>
</g>
<g >
<title>[unknown] (103,285,431 samples, 0.31%)</title><rect x="914.2" y="357" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="917.16" y="367.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (14,728,118 samples, 0.04%)</title><rect x="1179.9" y="421" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1182.94" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (46,797,723 samples, 0.14%)</title><rect x="464.6" y="421" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="467.56" y="431.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (7,387,712 samples, 0.02%)</title><rect x="478.0" y="117" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="480.95" y="127.5" ></text>
</g>
<g >
<title>init_file (262,117,353 samples, 0.79%)</title><rect x="937.0" y="213" width="9.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="939.96" y="223.5" ></text>
</g>
<g >
<title>security_file_permission (78,038,071 samples, 0.24%)</title><rect x="762.7" y="293" width="2.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="765.75" y="303.5" ></text>
</g>
<g >
<title>posix.openatZ (4,895,384,014 samples, 14.79%)</title><rect x="912.1" y="373" width="174.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="915.15" y="383.5" >posix.openatZ</text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="213" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1182.48" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (11,913,018 samples, 0.04%)</title><rect x="545.9" y="245" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="548.90" y="255.5" ></text>
</g>
<g >
<title>path_init (213,688,787 samples, 0.65%)</title><rect x="1023.8" y="229" width="7.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1026.78" y="239.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (181,575,347 samples, 0.55%)</title><rect x="733.5" y="213" width="6.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="736.47" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="245" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1182.14" y="255.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="437" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.14" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,450,134 samples, 0.04%)</title><rect x="994.9" y="133" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="997.92" y="143.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (262,245,658 samples, 0.79%)</title><rect x="648.5" y="245" width="9.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="651.47" y="255.5" ></text>
</g>
<g >
<title>[unknown] (14,898,800 samples, 0.05%)</title><rect x="10.0" y="501" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>folio_add_lru (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="181" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1182.14" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,899,834 samples, 0.03%)</title><rect x="762.4" y="229" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="765.43" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (23,656,751 samples, 0.07%)</title><rect x="471.1" y="389" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="474.10" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,898,800 samples, 0.05%)</title><rect x="10.0" y="469" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>htab_map_hash (48,742,753 samples, 0.15%)</title><rect x="991.4" y="133" width="1.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="994.43" y="143.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (647,772,976 samples, 1.96%)</title><rect x="1036.2" y="261" width="23.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1039.24" y="271.5" >g..</text>
</g>
<g >
<title>alloc_fd (84,515,298 samples, 0.26%)</title><rect x="926.5" y="261" width="3.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="929.53" y="271.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (8,899,834 samples, 0.03%)</title><rect x="762.4" y="117" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="765.43" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (14,714,557 samples, 0.04%)</title><rect x="770.1" y="197" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="773.13" y="207.5" ></text>
</g>
<g >
<title>alloc_empty_file (974,743,039 samples, 2.94%)</title><rect x="937.0" y="229" width="34.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="939.96" y="239.5" >al..</text>
</g>
<g >
<title>__fdget_pos (208,384,292 samples, 0.63%)</title><rect x="598.4" y="309" width="7.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="601.40" y="319.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (14,861,942 samples, 0.04%)</title><rect x="971.2" y="213" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="974.18" y="223.5" ></text>
</g>
<g >
<title>security_file_free (41,026,591 samples, 0.12%)</title><rect x="832.2" y="293" width="1.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="835.22" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (67,304,295 samples, 0.20%)</title><rect x="770.7" y="325" width="2.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="773.66" y="335.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (2,030,858,209 samples, 6.14%)</title><rect x="1106.7" y="405" width="72.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1109.75" y="415.5" >mem.inde..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (150,885,771 samples, 0.46%)</title><rect x="748.7" y="261" width="5.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="751.66" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (4,697,541,645 samples, 14.19%)</title><rect x="918.6" y="341" width="167.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="921.63" y="351.5" >os.linux.x86_64.sysca..</text>
</g>
<g >
<title>__memcpy (53,357,675 samples, 0.16%)</title><rect x="717.7" y="229" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="720.67" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (81,805,383 samples, 0.25%)</title><rect x="943.4" y="181" width="2.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="946.39" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (14,532,771 samples, 0.04%)</title><rect x="471.9" y="405" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="474.94" y="415.5" ></text>
</g>
<g >
<title>__slab_free (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="373" width="9.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1183.47" y="383.5" ></text>
</g>
<g >
<title>handle_softirqs (14,862,208 samples, 0.04%)</title><rect x="480.7" y="373" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="483.68" y="383.5" ></text>
</g>
<g >
<title>mem.eqlBytes (1,240,216,529 samples, 3.75%)</title><rect x="1120.5" y="373" width="44.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1123.53" y="383.5" >mem...</text>
</g>
<g >
<title>mem.eql__anon_4894 (8,492,173 samples, 0.03%)</title><rect x="799.6" y="405" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="802.61" y="415.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (397,847,334 samples, 1.20%)</title><rect x="848.5" y="357" width="14.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="851.51" y="367.5" ></text>
</g>
<g >
<title>rb_next_postorder (28,524,283 samples, 0.09%)</title><rect x="743.3" y="261" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="746.30" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="357" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1182.14" y="367.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (67,214,008 samples, 0.20%)</title><rect x="984.4" y="213" width="2.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="987.43" y="223.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (21,343,791 samples, 0.06%)</title><rect x="966.9" y="149" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="969.92" y="159.5" ></text>
</g>
<g >
<title>xas_load (263,882,949 samples, 0.80%)</title><rect x="673.9" y="133" width="9.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="676.93" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,899,834 samples, 0.03%)</title><rect x="762.4" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="765.43" y="255.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (22,085,687 samples, 0.07%)</title><rect x="742.2" y="245" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="745.24" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,913,018 samples, 0.04%)</title><rect x="545.9" y="325" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="548.90" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="101" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1060.28" y="111.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (54,264,706 samples, 0.16%)</title><rect x="995.4" y="149" width="2.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="998.43" y="159.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (14,049,382 samples, 0.04%)</title><rect x="870.6" y="421" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="873.58" y="431.5" ></text>
</g>
<g >
<title>task_mm_cid_work (8,587,487 samples, 0.03%)</title><rect x="772.7" y="277" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="775.75" y="287.5" ></text>
</g>
<g >
<title>__schedule (7,748,162 samples, 0.02%)</title><rect x="999.5" y="101" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1002.47" y="111.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1192.80" y="271.5" ></text>
</g>
<g >
<title>do_sys_openat2 (3,786,248,643 samples, 11.44%)</title><rect x="926.3" y="277" width="135.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="929.28" y="287.5" >do_sys_openat2</text>
</g>
<g >
<title>debug.inValgrind (68,157,918 samples, 0.21%)</title><rect x="566.9" y="341" width="2.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="569.95" y="351.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (20,667,060,423 samples, 62.44%)</title><rect x="442.4" y="453" width="736.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="445.39" y="463.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>combined_runner (33,100,933,503 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >combined_runner</text>
</g>
<g >
<title>start.callMainWithArgs (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1192.80" y="495.5" ></text>
</g>
<g >
<title>kmalloc_trace (150,885,771 samples, 0.46%)</title><rect x="748.7" y="277" width="5.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="751.66" y="287.5" ></text>
</g>
<g >
<title>security_inode_permission (90,040,705 samples, 0.27%)</title><rect x="1009.3" y="213" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1012.28" y="223.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (1,410,445,074 samples, 4.26%)</title><rect x="190.4" y="453" width="50.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="193.41" y="463.5" >linre..</text>
</g>
<g >
<title>valgrind.doClientRequestExpr (9,221,738 samples, 0.03%)</title><rect x="566.9" y="325" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="569.95" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (20,945,067 samples, 0.06%)</title><rect x="477.5" y="245" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="480.47" y="255.5" ></text>
</g>
<g >
<title>pick_next_task_fair (9,434,947 samples, 0.03%)</title><rect x="589.8" y="277" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="592.80" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11,913,018 samples, 0.04%)</title><rect x="545.9" y="213" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="548.90" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (14,862,208 samples, 0.04%)</title><rect x="480.7" y="357" width="0.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="483.68" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (14,506,749 samples, 0.04%)</title><rect x="638.2" y="213" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="641.17" y="223.5" ></text>
</g>
<g >
<title>migrate_disable (23,131,106 samples, 0.07%)</title><rect x="998.6" y="149" width="0.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1001.65" y="159.5" ></text>
</g>
<g >
<title>___slab_alloc (33,694,432 samples, 0.10%)</title><rect x="949.1" y="197" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="952.15" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,899,834 samples, 0.03%)</title><rect x="762.4" y="213" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="765.43" y="223.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (214,558,781 samples, 0.65%)</title><rect x="951.7" y="197" width="7.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="954.66" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (7,278,986 samples, 0.02%)</title><rect x="621.5" y="165" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="624.46" y="175.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (11,914,003,883 samples, 35.99%)</title><rect x="17.1" y="485" width="424.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="20.05" y="495.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>hook_file_alloc_security (44,504,631 samples, 0.13%)</title><rect x="941.8" y="181" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="944.80" y="191.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (20,721,666,260 samples, 62.60%)</title><rect x="441.8" y="469" width="738.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="444.77" y="479.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (724,371,959 samples, 2.19%)</title><rect x="872.1" y="405" width="25.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="875.12" y="415.5" >c..</text>
</g>
<g >
<title>memchr (55,916,467 samples, 0.17%)</title><rect x="639.2" y="229" width="2.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="642.19" y="239.5" ></text>
</g>
<g >
<title>putname (23,813,793 samples, 0.07%)</title><rect x="1060.4" y="261" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1063.40" y="271.5" ></text>
</g>
<g >
<title>posix.munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.80" y="415.5" ></text>
</g>
<g >
<title>kfree (7,716,709 samples, 0.02%)</title><rect x="739.9" y="229" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="742.95" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (43,755,069 samples, 0.13%)</title><rect x="474.6" y="405" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="477.61" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,675,272 samples, 0.04%)</title><rect x="847.8" y="309" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="850.84" y="319.5" ></text>
</g>
<g >
<title>do_anonymous_page (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="197" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1182.14" y="207.5" ></text>
</g>
<g >
<title>__fput_sync (36,801,355 samples, 0.11%)</title><rect x="833.7" y="309" width="1.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="836.68" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (14,728,118 samples, 0.04%)</title><rect x="1179.9" y="405" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1182.94" y="415.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (29,813,154 samples, 0.09%)</title><rect x="831.2" y="293" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="834.15" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_lock (8,970,666 samples, 0.03%)</title><rect x="673.6" y="133" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="676.61" y="143.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (85,346,297 samples, 0.26%)</title><rect x="1176.1" y="389" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1179.10" y="399.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (6,840,225 samples, 0.02%)</title><rect x="997.1" y="117" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1000.12" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,236,802 samples, 0.05%)</title><rect x="584.0" y="325" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="587.03" y="335.5" ></text>
</g>
<g >
<title>__schedule (9,434,947 samples, 0.03%)</title><rect x="589.8" y="293" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="592.80" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,913,018 samples, 0.04%)</title><rect x="545.9" y="373" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="548.90" y="383.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (20,945,067 samples, 0.06%)</title><rect x="477.5" y="197" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="480.47" y="207.5" ></text>
</g>
<g >
<title>lockref_put_return (42,476,382 samples, 0.13%)</title><rect x="815.1" y="277" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="818.10" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="37" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1060.28" y="47.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,871,284 samples, 0.02%)</title><rect x="1061.3" y="293" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1064.25" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (14,686,158 samples, 0.04%)</title><rect x="1088.0" y="389" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1091.01" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,714,557 samples, 0.04%)</title><rect x="770.1" y="245" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="773.13" y="255.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (7,748,162 samples, 0.02%)</title><rect x="999.5" y="85" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1002.47" y="95.5" ></text>
</g>
<g >
<title>do_mmap (7,387,712 samples, 0.02%)</title><rect x="478.0" y="181" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="480.95" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (13,721,620 samples, 0.04%)</title><rect x="835.5" y="293" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="838.52" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,714,557 samples, 0.04%)</title><rect x="770.1" y="293" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="773.13" y="303.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (63,609,745 samples, 0.19%)</title><rect x="993.2" y="149" width="2.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="996.17" y="159.5" ></text>
</g>
<g >
<title>mmap_region (7,387,712 samples, 0.02%)</title><rect x="478.0" y="165" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="480.95" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.80" y="351.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="293" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1182.48" y="303.5" ></text>
</g>
<g >
<title>mntget (16,091,542 samples, 0.05%)</title><rect x="988.4" y="197" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="991.42" y="207.5" ></text>
</g>
<g >
<title>vma_expand (7,387,712 samples, 0.02%)</title><rect x="478.0" y="149" width="0.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="480.95" y="159.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (7,099,752 samples, 0.02%)</title><rect x="572.4" y="325" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="575.36" y="335.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="165" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1182.48" y="175.5" ></text>
</g>
<g >
<title>fsnotify (77,563,719 samples, 0.23%)</title><rect x="760.0" y="277" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="762.98" y="287.5" ></text>
</g>
<g >
<title>[unknown] (14,797,114 samples, 0.04%)</title><rect x="1001.7" y="181" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1004.75" y="191.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="389" width="9.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1183.47" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,899,834 samples, 0.03%)</title><rect x="762.4" y="165" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="765.43" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,500,243 samples, 0.02%)</title><rect x="921.4" y="325" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="924.35" y="335.5" ></text>
</g>
<g >
<title>kfree (14,526,941 samples, 0.04%)</title><rect x="827.0" y="277" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="830.00" y="287.5" ></text>
</g>
<g >
<title>fd_install (24,646,055 samples, 0.07%)</title><rect x="1033.9" y="261" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1036.91" y="271.5" ></text>
</g>
<g >
<title>schedule (8,921,447 samples, 0.03%)</title><rect x="584.0" y="277" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="587.03" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (28,964,395 samples, 0.09%)</title><rect x="464.6" y="405" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="467.56" y="415.5" ></text>
</g>
<g >
<title>__memset (36,678,758 samples, 0.11%)</title><rect x="950.3" y="197" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="953.35" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="197" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1060.28" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (18,127,894,719 samples, 54.77%)</title><rect x="455.3" y="437" width="646.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="458.30" y="447.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (29,358,176 samples, 0.09%)</title><rect x="1064.3" y="277" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1067.28" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="117" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1060.28" y="127.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (23,145,120 samples, 0.07%)</title><rect x="466.7" y="405" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="469.73" y="415.5" ></text>
</g>
<g >
<title>__call_rcu_common (85,860,539 samples, 0.26%)</title><rect x="809.6" y="309" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="812.57" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (50,148,985 samples, 0.15%)</title><rect x="797.8" y="389" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="800.83" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,506,749 samples, 0.04%)</title><rect x="638.2" y="229" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="641.17" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (36,156,858 samples, 0.11%)</title><rect x="752.7" y="245" width="1.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="755.75" y="255.5" ></text>
</g>
<g >
<title>mod_objcg_state (93,266,948 samples, 0.28%)</title><rect x="964.4" y="181" width="3.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="967.36" y="191.5" ></text>
</g>
<g >
<title>debug.inValgrind (9,640,252 samples, 0.03%)</title><rect x="1101.2" y="357" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1104.19" y="367.5" ></text>
</g>
<g >
<title>xhci_update_erst_dequeue (7,016,668 samples, 0.02%)</title><rect x="329.8" y="325" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="332.81" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacityPrecise (20,945,067 samples, 0.06%)</title><rect x="477.5" y="389" width="0.7" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="480.47" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,088,160,120 samples, 3.29%)</title><rect x="808.5" y="325" width="38.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="811.52" y="335.5" >__x..</text>
</g>
<g >
<title>__srcu_read_unlock (14,776,104 samples, 0.04%)</title><rect x="843.3" y="245" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="846.33" y="255.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (48,742,753 samples, 0.15%)</title><rect x="991.4" y="149" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="994.43" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,315,355 samples, 0.02%)</title><rect x="584.3" y="261" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="587.35" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,500,243 samples, 0.02%)</title><rect x="921.4" y="277" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="924.35" y="287.5" ></text>
</g>
<g >
<title>__check_object_size (103,624,845 samples, 0.31%)</title><rect x="1055.6" y="229" width="3.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1058.64" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (5,965,809,250 samples, 18.02%)</title><rect x="585.2" y="373" width="212.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="588.15" y="383.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (14,872,025 samples, 0.04%)</title><rect x="572.6" y="325" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="575.61" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,827,582 samples, 0.02%)</title><rect x="1030.6" y="213" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1033.59" y="223.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (5,829,858 samples, 0.02%)</title><rect x="812.4" y="293" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="815.42" y="303.5" ></text>
</g>
<g >
<title>mntput (14,291,115 samples, 0.04%)</title><rect x="1033.0" y="213" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1035.99" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,133,054 samples, 0.03%)</title><rect x="559.8" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="562.82" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_free (129,397,822 samples, 0.39%)</title><rect x="819.3" y="261" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="822.33" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,278,986 samples, 0.02%)</title><rect x="621.5" y="261" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="624.46" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (37,074,272 samples, 0.11%)</title><rect x="769.3" y="309" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="772.33" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (7,500,243 samples, 0.02%)</title><rect x="921.4" y="181" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="924.35" y="191.5" ></text>
</g>
<g >
<title>touch_atime (58,824,938 samples, 0.18%)</title><rect x="765.5" y="293" width="2.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="768.53" y="303.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (39,061,423 samples, 0.12%)</title><rect x="568.0" y="309" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="570.98" y="319.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (15,326,291 samples, 0.05%)</title><rect x="928.2" y="245" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="931.16" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (4,932,451,812 samples, 14.90%)</title><rect x="910.8" y="389" width="175.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="913.83" y="399.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>tick_sched_timer (7,500,243 samples, 0.02%)</title><rect x="921.4" y="245" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="924.35" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (8,921,447 samples, 0.03%)</title><rect x="584.0" y="309" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="587.03" y="319.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (2,162,428,231 samples, 6.53%)</title><rect x="1102.1" y="437" width="77.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1105.05" y="447.5" >mem.inde..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (7,099,752 samples, 0.02%)</title><rect x="572.4" y="309" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="575.36" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_openat (3,814,883,178 samples, 11.53%)</title><rect x="925.3" y="293" width="136.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="928.26" y="303.5" >__x64_sys_openat</text>
</g>
<g >
<title>perf_event_task_tick (11,913,018 samples, 0.04%)</title><rect x="545.9" y="229" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="548.90" y="239.5" ></text>
</g>
<g >
<title>ext4_release_dir (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="405" width="9.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1183.47" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="165" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1060.28" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="389" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1182.14" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,506,749 samples, 0.04%)</title><rect x="638.2" y="197" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="641.17" y="207.5" ></text>
</g>
<g >
<title>close_fd_get_file (56,173,688 samples, 0.17%)</title><rect x="835.0" y="309" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="837.99" y="319.5" ></text>
</g>
<g >
<title>file_ra_state_init (21,567,491 samples, 0.07%)</title><rect x="982.9" y="213" width="0.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="985.91" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (14,832,628 samples, 0.04%)</title><rect x="847.3" y="325" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="850.31" y="335.5" ></text>
</g>
<g >
<title>rcu_do_batch (7,278,986 samples, 0.02%)</title><rect x="621.5" y="181" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="624.46" y="191.5" ></text>
</g>
<g >
<title>strncpy_from_user (209,536,547 samples, 0.63%)</title><rect x="1051.9" y="245" width="7.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1054.87" y="255.5" ></text>
</g>
<g >
<title>step_into (35,961,082 samples, 0.11%)</title><rect x="1031.4" y="229" width="1.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1034.40" y="239.5" ></text>
</g>
<g >
<title>native_read_msr (8,899,834 samples, 0.03%)</title><rect x="762.4" y="101" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="765.43" y="111.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (9,387,263 samples, 0.03%)</title><rect x="1179.1" y="293" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1182.14" y="303.5" ></text>
</g>
<g >
<title>os.linux.openat (15,209,002 samples, 0.05%)</title><rect x="911.6" y="373" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="914.60" y="383.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (229,955,881 samples, 0.69%)</title><rect x="818.8" y="277" width="8.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="821.80" y="287.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (20,721,666,260 samples, 62.60%)</title><rect x="441.8" y="485" width="738.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="444.77" y="495.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (20,721,666,260 samples, 62.60%)</title><rect x="441.8" y="501" width="738.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="444.77" y="511.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>__common_interrupt (7,016,668 samples, 0.02%)</title><rect x="329.8" y="405" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="332.81" y="415.5" ></text>
</g>
<g >
<title>fsnotify (30,985,435 samples, 0.09%)</title><rect x="827.5" y="293" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="830.52" y="303.5" ></text>
</g>
<g >
<title>memcg_account_kmem (14,713,906 samples, 0.04%)</title><rect x="970.7" y="181" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="973.65" y="191.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9314 (20,945,067 samples, 0.06%)</title><rect x="477.5" y="373" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="480.47" y="383.5" ></text>
</g>
<g >
<title>__vm_munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.80" y="319.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.80" y="511.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (17,435,558 samples, 0.05%)</title><rect x="441.8" y="453" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="444.77" y="463.5" ></text>
</g>
<g >
<title>update_process_times (7,729,224 samples, 0.02%)</title><rect x="1057.3" y="85" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1060.28" y="95.5" ></text>
</g>
<g >
<title>__brelse (14,661,716 samples, 0.04%)</title><rect x="647.9" y="245" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="650.95" y="255.5" ></text>
</g>
<g >
<title>update_process_times (10,133,054 samples, 0.03%)</title><rect x="559.8" y="229" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="562.82" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,899,834 samples, 0.03%)</title><rect x="762.4" y="197" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="765.43" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (70,409,265 samples, 0.21%)</title><rect x="14.5" y="501" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="17.54" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (261,682,062 samples, 0.79%)</title><rect x="1180.5" y="501" width="9.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1183.47" y="511.5" ></text>
</g>
<g >
<title>scheduler_tick (7,500,243 samples, 0.02%)</title><rect x="921.4" y="197" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="924.35" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,714,557 samples, 0.04%)</title><rect x="770.1" y="229" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="773.13" y="239.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (141,116,917 samples, 0.43%)</title><rect x="838.8" y="277" width="5.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="841.82" y="287.5" ></text>
</g>
<g >
<title>security_mmap_file (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="149" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1182.48" y="159.5" ></text>
</g>
<g >
<title>kfree (7,469,941 samples, 0.02%)</title><rect x="743.0" y="261" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="746.03" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall2 (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1192.80" y="383.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (523,285,239 samples, 1.58%)</title><rect x="1065.3" y="325" width="18.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1068.33" y="335.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (48,023,480 samples, 0.15%)</title><rect x="999.7" y="165" width="1.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1002.75" y="175.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (25,716,057 samples, 0.08%)</title><rect x="559.3" y="357" width="0.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="562.26" y="367.5" ></text>
</g>
<g >
<title>do_vmi_munmap (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.80" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (68,174,491 samples, 0.21%)</title><rect x="1061.9" y="277" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1064.85" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (13,054,898 samples, 0.04%)</title><rect x="1179.5" y="181" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1182.48" y="191.5" ></text>
</g>
<g >
<title>mntput_no_expire (11,610,939 samples, 0.04%)</title><rect x="1033.5" y="213" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1036.50" y="223.5" ></text>
</g>
<g >
<title>task_work_run (8,587,487 samples, 0.03%)</title><rect x="772.7" y="293" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="775.75" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,315,355 samples, 0.02%)</title><rect x="584.3" y="277" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="587.35" y="287.5" ></text>
</g>
<g >
<title>posix.toPosixPath (417,130,828 samples, 1.26%)</title><rect x="1086.7" y="405" width="14.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1089.66" y="415.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (70,130,796 samples, 0.21%)</title><rect x="552.0" y="373" width="2.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="554.99" y="383.5" ></text>
</g>
<g >
<title>fs.Dir.walk (22,442,161 samples, 0.07%)</title><rect x="1179.1" y="421" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1182.14" y="431.5" ></text>
</g>
<g >
<title>complete_walk (101,868,158 samples, 0.31%)</title><rect x="971.7" y="229" width="3.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="974.71" y="239.5" ></text>
</g>
<g >
<title>fsnotify (20,966,686 samples, 0.06%)</title><rect x="983.7" y="213" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="986.68" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (29,325,998 samples, 0.09%)</title><rect x="480.2" y="421" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="483.16" y="431.5" ></text>
</g>
<g >
<title>search_name.openRootDir (14,728,118 samples, 0.04%)</title><rect x="1179.9" y="437" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1182.94" y="447.5" ></text>
</g>
<g >
<title>__srcu_read_lock (126,340,813 samples, 0.38%)</title><rect x="838.8" y="245" width="4.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="841.82" y="255.5" ></text>
</g>
<g >
<title>lru_add_drain (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.80" y="255.5" ></text>
</g>
<g >
<title>debug.assert (26,725,929 samples, 0.08%)</title><rect x="569.8" y="325" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="572.82" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,278,986 samples, 0.02%)</title><rect x="621.5" y="245" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="624.46" y="255.5" ></text>
</g>
<g >
<title>update_process_times (14,714,557 samples, 0.04%)</title><rect x="770.1" y="181" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="773.13" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (8,899,834 samples, 0.03%)</title><rect x="762.4" y="133" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="765.43" y="143.5" ></text>
</g>
<g >
<title>inode_permission (15,083,522 samples, 0.05%)</title><rect x="1008.7" y="213" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1011.74" y="223.5" ></text>
</g>
<g >
<title>fput (14,842,300 samples, 0.04%)</title><rect x="1030.9" y="213" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1033.87" y="223.5" ></text>
</g>
<g >
<title>make_vfsuid (14,989,098 samples, 0.05%)</title><rect x="767.1" y="261" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="770.09" y="271.5" ></text>
</g>
<g >
<title>start.callMain (5,722,830 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1192.80" y="479.5" ></text>
</g>
<g >
<title>all (33,100,933,503 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (7,343,390 samples, 0.02%)</title><rect x="848.3" y="325" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="851.25" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (221,040,695 samples, 0.67%)</title><rect x="862.7" y="421" width="7.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="865.70" y="431.5" ></text>
</g>
<g >
<title>__memset (246,396,721 samples, 0.74%)</title><rect x="1043.1" y="229" width="8.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1046.08" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,673,753 samples, 0.05%)</title><rect x="914.2" y="325" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="917.16" y="335.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_8728 (20,945,067 samples, 0.06%)</title><rect x="477.5" y="325" width="0.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="480.47" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,913,018 samples, 0.04%)</title><rect x="545.9" y="293" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="548.90" y="303.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (42,452,413 samples, 0.13%)</title><rect x="1174.6" y="373" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1177.59" y="383.5" ></text>
</g>
<g >
<title>enqueue_task (14,862,208 samples, 0.04%)</title><rect x="480.7" y="325" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="483.68" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (37,075,826 samples, 0.11%)</title><rect x="466.2" y="421" width="1.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="469.23" y="431.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (64,111,742 samples, 0.19%)</title><rect x="868.3" y="405" width="2.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="871.29" y="415.5" ></text>
</g>
<g >
<title>mem.isAligned (14,872,025 samples, 0.04%)</title><rect x="572.6" y="341" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="575.61" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (7,016,668 samples, 0.02%)</title><rect x="329.8" y="373" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="332.81" y="383.5" ></text>
</g>
<g >
<title>__legitimize_path (79,438,478 samples, 0.24%)</title><rect x="972.2" y="197" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="975.23" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (7,748,162 samples, 0.02%)</title><rect x="999.5" y="149" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1002.47" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (45,573,701 samples, 0.14%)</title><rect x="906.1" y="405" width="1.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="909.06" y="415.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (51,268,879 samples, 0.15%)</title><rect x="868.7" y="389" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="871.75" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (70,409,265 samples, 0.21%)</title><rect x="14.5" y="485" width="2.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="17.54" y="495.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (20,945,067 samples, 0.06%)</title><rect x="477.5" y="293" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="480.47" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,434,947 samples, 0.03%)</title><rect x="589.8" y="357" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="592.80" y="367.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (2,778,275,395 samples, 8.39%)</title><rect x="641.2" y="277" width="99.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="644.18" y="287.5" >ext4_htree_..</text>
</g>
<g >
<title>__filemap_get_folio (405,173,151 samples, 1.22%)</title><rect x="668.9" y="165" width="14.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="671.90" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,463,790 samples, 0.04%)</title><rect x="480.2" y="389" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="483.16" y="399.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (5,695,124 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.80" y="239.5" ></text>
</g>
</g>
</svg>
