<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>_raw_spin_lock (11,618,448 samples, 0.03%)</title><rect x="614.2" y="213" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="617.16" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,472,989 samples, 0.03%)</title><rect x="262.1" y="437" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="265.13" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (147,050,261 samples, 0.32%)</title><rect x="765.5" y="357" width="3.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="768.51" y="367.5" ></text>
</g>
<g >
<title>update_min_vruntime (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="261" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1169.83" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (30,339,280 samples, 0.07%)</title><rect x="130.3" y="389" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="133.26" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (18,904,876 samples, 0.04%)</title><rect x="945.3" y="165" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="948.27" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="549" width="2.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1190.36" y="559.5" ></text>
</g>
<g >
<title>__kmem_cache_free (42,000,407 samples, 0.09%)</title><rect x="751.4" y="341" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="754.39" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (11,960,977 samples, 0.03%)</title><rect x="130.7" y="373" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="133.73" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="581" width="2.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.36" y="591.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (11,046,144 samples, 0.02%)</title><rect x="996.0" y="261" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="998.96" y="271.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (797,832,628 samples, 1.74%)</title><rect x="131.0" y="517" width="20.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="134.04" y="527.5" ></text>
</g>
<g >
<title>array_list.addOrOom (15,922,803 samples, 0.03%)</title><rect x="332.9" y="485" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="335.87" y="495.5" ></text>
</g>
<g >
<title>mem.isAligned (40,992,517 samples, 0.09%)</title><rect x="457.3" y="405" width="1.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="460.34" y="415.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,615,076,036 samples, 3.52%)</title><rect x="195.8" y="533" width="41.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="198.83" y="543.5" >lin..</text>
</g>
<g >
<title>fsnotify (228,196,445 samples, 0.50%)</title><rect x="697.5" y="357" width="5.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="700.46" y="367.5" ></text>
</g>
<g >
<title>task_tick_fair (10,921,089 samples, 0.02%)</title><rect x="927.5" y="69" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="930.53" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="389" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1169.83" y="399.5" ></text>
</g>
<g >
<title>xas_load (456,922,117 samples, 1.00%)</title><rect x="583.6" y="197" width="11.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="586.59" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (37,285,528 samples, 0.08%)</title><rect x="1032.3" y="357" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1035.32" y="367.5" ></text>
</g>
<g >
<title>place_entity (11,069,970 samples, 0.02%)</title><rect x="972.2" y="117" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="975.19" y="127.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (12,663,735,985 samples, 27.62%)</title><rect x="401.3" y="469" width="326.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="404.34" y="479.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (191,735,852 samples, 0.42%)</title><rect x="319.5" y="469" width="4.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="322.50" y="479.5" ></text>
</g>
<g >
<title>task_tick_fair (12,472,989 samples, 0.03%)</title><rect x="262.1" y="373" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="265.13" y="383.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,511,289,433 samples, 3.30%)</title><rect x="560.5" y="261" width="38.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="563.46" y="271.5" >__g..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,013,810,556 samples, 4.39%)</title><rect x="333.6" y="485" width="51.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="336.57" y="495.5" >compi..</text>
</g>
<g >
<title>__irq_exit_rcu (11,255,218 samples, 0.02%)</title><rect x="333.3" y="453" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="336.28" y="463.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,487,767 samples, 0.04%)</title><rect x="929.4" y="261" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="932.40" y="271.5" ></text>
</g>
<g >
<title>ext4_map_blocks (587,125,633 samples, 1.28%)</title><rect x="599.4" y="261" width="15.1" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="602.35" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (83,868,749 samples, 0.18%)</title><rect x="330.7" y="485" width="2.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="333.72" y="495.5" ></text>
</g>
<g >
<title>__slab_free (99,352,063 samples, 0.22%)</title><rect x="757.3" y="325" width="2.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="760.33" y="335.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (107,312,756 samples, 0.23%)</title><rect x="451.7" y="357" width="2.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="454.68" y="367.5" ></text>
</g>
<g >
<title>kmalloc_trace (107,349,562 samples, 0.23%)</title><rect x="692.6" y="341" width="2.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="695.62" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (30,339,280 samples, 0.07%)</title><rect x="130.3" y="453" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="133.26" y="463.5" ></text>
</g>
<g >
<title>errseq_sample (47,772,806 samples, 0.10%)</title><rect x="952.4" y="277" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="955.41" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (30,061,635 samples, 0.07%)</title><rect x="1033.3" y="357" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1036.28" y="367.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (633,720,215 samples, 1.38%)</title><rect x="420.6" y="453" width="16.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="423.57" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,046,345,695 samples, 4.46%)</title><rect x="737.7" y="421" width="52.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="740.71" y="431.5" >entry..</text>
</g>
<g >
<title>put_prev_entity (11,180,372 samples, 0.02%)</title><rect x="865.6" y="357" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="868.58" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (35,232,714 samples, 0.08%)</title><rect x="972.9" y="229" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="975.94" y="239.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (439,210,251 samples, 0.96%)</title><rect x="982.2" y="277" width="11.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="985.17" y="287.5" ></text>
</g>
<g >
<title>lockref_put_return (25,401,611 samples, 0.06%)</title><rect x="750.7" y="341" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="753.73" y="351.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (425,437,930 samples, 0.93%)</title><rect x="547.4" y="309" width="11.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="550.42" y="319.5" ></text>
</g>
<g >
<title>try_to_unlazy (232,940,072 samples, 0.51%)</title><rect x="940.4" y="277" width="6.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="943.45" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (17,722,409 samples, 0.04%)</title><rect x="310.8" y="485" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="313.84" y="495.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (15,063,168 samples, 0.03%)</title><rect x="477.6" y="421" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="480.62" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (149,377,738 samples, 0.33%)</title><rect x="483.4" y="421" width="3.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="486.38" y="431.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (427,626,136 samples, 0.93%)</title><rect x="752.5" y="341" width="11.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="755.47" y="351.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,827,563 samples, 0.03%)</title><rect x="130.0" y="437" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="132.96" y="447.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (11,048,264 samples, 0.02%)</title><rect x="639.3" y="245" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="642.33" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (6,643,925,822 samples, 14.49%)</title><rect x="866.2" y="469" width="170.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="869.15" y="479.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>__kmem_cache_alloc_node (571,553,407 samples, 1.25%)</title><rect x="628.7" y="277" width="14.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="631.66" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,455,253 samples, 0.04%)</title><rect x="856.3" y="421" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="859.27" y="431.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (29,399,253 samples, 0.06%)</title><rect x="678.0" y="309" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="681.00" y="319.5" ></text>
</g>
<g >
<title>ext4_release_dir (496,354,183 samples, 1.08%)</title><rect x="751.4" y="357" width="12.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="754.39" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (16,020,653 samples, 0.03%)</title><rect x="932.8" y="245" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="935.77" y="255.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (23,692,458 samples, 0.05%)</title><rect x="926.9" y="229" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="929.92" y="239.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,069,354,552 samples, 2.33%)</title><rect x="912.5" y="293" width="27.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="915.46" y="303.5" >a..</text>
</g>
<g >
<title>_raw_spin_unlock (18,413,327 samples, 0.04%)</title><rect x="598.4" y="229" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="601.44" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (8,725,052,175 samples, 19.03%)</title><rect x="489.9" y="389" width="224.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="492.92" y="399.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_9108 (40,992,517 samples, 0.09%)</title><rect x="457.3" y="357" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="460.34" y="367.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (220,389,256 samples, 0.48%)</title><rect x="678.8" y="341" width="5.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="681.75" y="351.5" ></text>
</g>
<g >
<title>__legitimize_mnt (74,403,014 samples, 0.16%)</title><rect x="941.7" y="245" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="944.66" y="255.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (1,390,845,645 samples, 3.03%)</title><rect x="442.2" y="437" width="35.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="445.21" y="447.5" >mem..</text>
</g>
<g >
<title>is_dx_dir (238,283,989 samples, 0.52%)</title><rect x="686.5" y="341" width="6.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="689.49" y="351.5" ></text>
</g>
<g >
<title>__fput (954,547,527 samples, 2.08%)</title><rect x="748.7" y="373" width="24.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="751.71" y="383.5" >_..</text>
</g>
<g >
<title>ext4fs_dirhash (1,168,391,748 samples, 2.55%)</title><rect x="647.9" y="309" width="30.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="650.93" y="319.5" >ex..</text>
</g>
<g >
<title>task_tick_fair (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="277" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1169.83" y="287.5" ></text>
</g>
<g >
<title>debug.assert (57,740,679 samples, 0.13%)</title><rect x="449.3" y="405" width="1.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="452.31" y="415.5" ></text>
</g>
<g >
<title>dput (51,350,368 samples, 0.11%)</title><rect x="1002.8" y="277" width="1.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1005.80" y="287.5" ></text>
</g>
<g >
<title>update_process_times (16,916,262 samples, 0.04%)</title><rect x="611.1" y="101" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="614.13" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (12,472,989 samples, 0.03%)</title><rect x="262.1" y="389" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="265.13" y="399.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (1,375,782,477 samples, 3.00%)</title><rect x="442.2" y="421" width="35.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="445.21" y="431.5" >mem..</text>
</g>
<g >
<title>Thread.callFn__anon_7622 (9,547,495,089 samples, 20.82%)</title><rect x="16.7" y="549" width="245.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="19.73" y="559.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>build_open_flags (75,153,848 samples, 0.16%)</title><rect x="903.9" y="325" width="2.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="906.94" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="341" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1169.83" y="351.5" ></text>
</g>
<g >
<title>os.linux.openat (5,779,851,431 samples, 12.61%)</title><rect x="887.7" y="421" width="148.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="890.73" y="431.5" >os.linux.openat</text>
</g>
<g >
<title>x64_sys_call (26,340,373 samples, 0.06%)</title><rect x="721.3" y="389" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="724.25" y="399.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (36,643,000 samples, 0.08%)</title><rect x="478.0" y="453" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="481.01" y="463.5" ></text>
</g>
<g >
<title>update_curr (12,381,369 samples, 0.03%)</title><rect x="457.7" y="181" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="460.70" y="191.5" ></text>
</g>
<g >
<title>migrate_disable (23,324,230 samples, 0.05%)</title><rect x="970.5" y="213" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="973.52" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (115,154,392 samples, 0.25%)</title><rect x="800.0" y="469" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="803.02" y="479.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (29,809,267 samples, 0.07%)</title><rect x="315.7" y="453" width="0.7" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="318.68" y="463.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (57,624,378 samples, 0.13%)</title><rect x="641.6" y="261" width="1.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="644.56" y="271.5" ></text>
</g>
<g >
<title>mntput_no_expire (70,041,652 samples, 0.15%)</title><rect x="769.7" y="357" width="1.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="772.66" y="367.5" ></text>
</g>
<g >
<title>__memset (75,545,231 samples, 0.16%)</title><rect x="639.6" y="261" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="642.61" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (18,891,277 samples, 0.04%)</title><rect x="716.0" y="245" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="719.00" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,891,277 samples, 0.04%)</title><rect x="716.0" y="309" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="719.00" y="319.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (182,165,761 samples, 0.40%)</title><rect x="601.4" y="229" width="4.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="604.41" y="239.5" ></text>
</g>
<g >
<title>path_openat (3,694,401,381 samples, 8.06%)</title><rect x="909.3" y="309" width="95.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="912.33" y="319.5" >path_openat</text>
</g>
<g >
<title>handle_fasteoi_irq (18,904,876 samples, 0.04%)</title><rect x="945.3" y="181" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="948.27" y="191.5" ></text>
</g>
<g >
<title>kfree (27,096,593 samples, 0.06%)</title><rect x="683.2" y="325" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="686.18" y="335.5" ></text>
</g>
<g >
<title>__srcu_read_lock (47,608,917 samples, 0.10%)</title><rect x="779.1" y="309" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="782.10" y="319.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (146,099,234 samples, 0.32%)</title><rect x="933.2" y="261" width="3.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="936.18" y="271.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (40,992,517 samples, 0.09%)</title><rect x="457.3" y="373" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="460.34" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,472,989 samples, 0.03%)</title><rect x="262.1" y="485" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="265.13" y="495.5" ></text>
</g>
<g >
<title>acpi_hw_gpe_read (18,904,876 samples, 0.04%)</title><rect x="945.3" y="69" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="948.27" y="79.5" ></text>
</g>
<g >
<title>do_dentry_open (1,180,200,330 samples, 2.57%)</title><rect x="946.4" y="293" width="30.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="949.44" y="303.5" >do..</text>
</g>
<g >
<title>migrate_enable (35,032,912 samples, 0.08%)</title><rect x="971.6" y="213" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="974.58" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (99,011,860 samples, 0.22%)</title><rect x="922.1" y="245" width="2.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="925.12" y="255.5" ></text>
</g>
<g >
<title>combined_runner (45,848,656,260 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >combined_runner</text>
</g>
<g >
<title>mem.alignForward__anon_3584 (44,888,467 samples, 0.10%)</title><rect x="456.2" y="405" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="459.19" y="415.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (184,998,795 samples, 0.40%)</title><rect x="917.4" y="245" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="920.36" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (255,620,700 samples, 0.56%)</title><rect x="793.4" y="469" width="6.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="796.44" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (72,436,681 samples, 0.16%)</title><rect x="724.3" y="421" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="727.33" y="431.5" ></text>
</g>
<g >
<title>mntget (18,414,519 samples, 0.04%)</title><rect x="961.2" y="261" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="964.17" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (10,758,027 samples, 0.02%)</title><rect x="790.4" y="421" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="793.37" y="431.5" ></text>
</g>
<g >
<title>debug.assert (15,849,787 samples, 0.03%)</title><rect x="880.4" y="437" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="883.43" y="447.5" ></text>
</g>
<g >
<title>debug.assert (38,536,089 samples, 0.08%)</title><rect x="455.2" y="389" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="458.19" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (12,472,989 samples, 0.03%)</title><rect x="262.1" y="341" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="265.13" y="351.5" ></text>
</g>
<g >
<title>kfree (84,599,760 samples, 0.18%)</title><rect x="759.9" y="325" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="762.88" y="335.5" ></text>
</g>
<g >
<title>[[x_tables]] (17,912,491 samples, 0.04%)</title><rect x="893.0" y="389" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="895.97" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,120,109 samples, 0.04%)</title><rect x="328.5" y="357" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="331.50" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,255,218 samples, 0.02%)</title><rect x="333.3" y="485" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="336.28" y="495.5" ></text>
</g>
<g >
<title>__rcu_read_lock (22,231,958 samples, 0.05%)</title><rect x="770.6" y="341" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="773.64" y="351.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (124,948,627 samples, 0.27%)</title><rect x="451.2" y="373" width="3.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="454.23" y="383.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (81,158,021 samples, 0.18%)</title><rect x="899.0" y="309" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="902.03" y="319.5" ></text>
</g>
<g >
<title>pick_file (58,444,612 samples, 0.13%)</title><rect x="776.5" y="357" width="1.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="779.48" y="367.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (28,868,497 samples, 0.06%)</title><rect x="1066.5" y="469" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1069.46" y="479.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,130,774 samples, 0.04%)</title><rect x="972.5" y="213" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="975.48" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (15,129,835 samples, 0.03%)</title><rect x="1187.0" y="469" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1189.97" y="479.5" ></text>
</g>
<g >
<title>legitimize_links (26,496,775 samples, 0.06%)</title><rect x="945.8" y="261" width="0.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="948.76" y="271.5" ></text>
</g>
<g >
<title>security_file_alloc (332,234,537 samples, 0.72%)</title><rect x="916.1" y="261" width="8.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="919.12" y="271.5" ></text>
</g>
<g >
<title>memchr (104,628,599 samples, 0.23%)</title><rect x="537.2" y="293" width="2.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="540.19" y="303.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (18,130,774 samples, 0.04%)</title><rect x="972.5" y="229" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="975.48" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (100,353,481 samples, 0.22%)</title><rect x="885.1" y="405" width="2.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="888.15" y="415.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (11,069,970 samples, 0.02%)</title><rect x="972.2" y="181" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="975.19" y="191.5" ></text>
</g>
<g >
<title>lockref_get (50,127,267 samples, 0.11%)</title><rect x="959.9" y="277" width="1.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="962.88" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (54,422,841 samples, 0.12%)</title><rect x="327.6" y="469" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="330.57" y="479.5" ></text>
</g>
<g >
<title>__legitimize_path (195,961,043 samples, 0.43%)</title><rect x="940.7" y="261" width="5.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="943.72" y="271.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (9,856,535 samples, 0.02%)</title><rect x="263.3" y="517" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="266.32" y="527.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (28,986,627 samples, 0.06%)</title><rect x="720.5" y="373" width="0.8" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="723.51" y="383.5" ></text>
</g>
<g >
<title>complete_walk (250,958,882 samples, 0.55%)</title><rect x="940.0" y="293" width="6.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="942.98" y="303.5" ></text>
</g>
<g >
<title>task_tick_fair (12,381,369 samples, 0.03%)</title><rect x="457.7" y="197" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="460.70" y="207.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (40,992,517 samples, 0.09%)</title><rect x="457.3" y="389" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="460.34" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock (39,322,095 samples, 0.09%)</title><rect x="775.5" y="357" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="778.47" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,451,769 samples, 0.02%)</title><rect x="670.0" y="245" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="673.02" y="255.5" ></text>
</g>
<g >
<title>acpi_ev_detect_gpe (18,904,876 samples, 0.04%)</title><rect x="945.3" y="85" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="948.27" y="95.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (291,042,313 samples, 0.63%)</title><rect x="311.3" y="485" width="7.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="314.29" y="495.5" ></text>
</g>
<g >
<title>atime_needs_update (34,491,911 samples, 0.08%)</title><rect x="709.3" y="341" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="712.28" y="351.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (179,763,028 samples, 0.39%)</title><rect x="976.8" y="293" width="4.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="979.82" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (21,139,215 samples, 0.05%)</title><rect x="1032.3" y="341" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1035.32" y="351.5" ></text>
</g>
<g >
<title>inode_permission (40,671,052 samples, 0.09%)</title><rect x="979.8" y="277" width="1.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="982.81" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (16,146,313 samples, 0.04%)</title><rect x="1032.9" y="341" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1035.86" y="351.5" ></text>
</g>
<g >
<title>debug.assert (14,837,932 samples, 0.03%)</title><rect x="458.0" y="341" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="461.01" y="351.5" ></text>
</g>
<g >
<title>down_read_killable (59,889,374 samples, 0.13%)</title><rect x="511.7" y="357" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="514.66" y="367.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (18,276,764 samples, 0.04%)</title><rect x="195.4" y="533" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="198.36" y="543.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (10,901,755 samples, 0.02%)</title><rect x="727.0" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="729.98" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,381,369 samples, 0.03%)</title><rect x="457.7" y="309" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="460.70" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (11,086,936 samples, 0.02%)</title><rect x="732.9" y="469" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="735.95" y="479.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (63,037,470 samples, 0.14%)</title><rect x="303.0" y="469" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="306.04" y="479.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (79,655,305 samples, 0.17%)</title><rect x="779.1" y="325" width="2.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="782.10" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (30,339,280 samples, 0.07%)</title><rect x="130.3" y="421" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="133.26" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (185,237,698 samples, 0.40%)</title><rect x="716.5" y="389" width="4.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="719.49" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (30,339,280 samples, 0.07%)</title><rect x="130.3" y="469" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="133.26" y="479.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (173,712,274 samples, 0.38%)</title><rect x="12.3" y="565" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="15.26" y="575.5" ></text>
</g>
<g >
<title>rb_next (62,011,394 samples, 0.14%)</title><rect x="695.9" y="341" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="698.86" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (9,940,598 samples, 0.02%)</title><rect x="500.3" y="341" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="503.27" y="351.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (32,046,388 samples, 0.07%)</title><rect x="780.3" y="309" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="783.33" y="319.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (44,888,467 samples, 0.10%)</title><rect x="456.2" y="389" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="459.19" y="399.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (102,156,744 samples, 0.22%)</title><rect x="967.5" y="213" width="2.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="970.53" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,472,989 samples, 0.03%)</title><rect x="262.1" y="453" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="265.13" y="463.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (30,531,160,811 samples, 66.59%)</title><rect x="278.3" y="501" width="785.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="281.33" y="511.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>kmalloc_slab (50,248,777 samples, 0.11%)</title><rect x="643.4" y="277" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="646.37" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (18,904,876 samples, 0.04%)</title><rect x="945.3" y="229" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="948.27" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (36,938,635 samples, 0.08%)</title><rect x="939.0" y="277" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="942.03" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,451,769 samples, 0.02%)</title><rect x="670.0" y="229" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="673.02" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (145,441,518 samples, 0.32%)</title><rect x="12.3" y="549" width="3.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="15.26" y="559.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (221,882,736 samples, 0.48%)</title><rect x="304.7" y="485" width="5.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="307.66" y="495.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (52,843,241 samples, 0.12%)</title><rect x="771.5" y="357" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="774.47" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (11,451,769 samples, 0.02%)</title><rect x="670.0" y="133" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="673.02" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_openat (5,295,789,826 samples, 11.55%)</title><rect x="895.4" y="357" width="136.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="898.40" y="367.5" >__x64_sys_openat</text>
</g>
<g >
<title>syscall_exit_to_user_mode (51,325,800 samples, 0.11%)</title><rect x="788.0" y="389" width="1.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="790.97" y="399.5" ></text>
</g>
<g >
<title>filp_flush (351,669,565 samples, 0.77%)</title><rect x="778.0" y="373" width="9.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="780.98" y="383.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,921,089 samples, 0.02%)</title><rect x="927.5" y="117" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="930.53" y="127.5" ></text>
</g>
<g >
<title>lookup_fast (467,564,400 samples, 1.02%)</title><rect x="981.4" y="293" width="12.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="984.44" y="303.5" ></text>
</g>
<g >
<title>ext4_readdir (7,159,262,011 samples, 15.61%)</title><rect x="513.2" y="357" width="184.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="516.20" y="367.5" >ext4_readdir</text>
</g>
<g >
<title>touch_atime (34,491,911 samples, 0.08%)</title><rect x="709.3" y="357" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="712.28" y="367.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="421" width="2.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1190.36" y="431.5" ></text>
</g>
<g >
<title>dput (55,560,662 samples, 0.12%)</title><rect x="750.0" y="357" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="752.96" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,048,264 samples, 0.02%)</title><rect x="639.3" y="229" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="642.33" y="239.5" ></text>
</g>
<g >
<title>security_file_free (17,619,385 samples, 0.04%)</title><rect x="772.8" y="357" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="775.83" y="367.5" ></text>
</g>
<g >
<title>__schedule (18,455,253 samples, 0.04%)</title><rect x="856.3" y="389" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="859.27" y="399.5" ></text>
</g>
<g >
<title>__schedule (11,180,372 samples, 0.02%)</title><rect x="865.6" y="389" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="868.58" y="399.5" ></text>
</g>
<g >
<title>filemap_get_entry (725,229,156 samples, 1.58%)</title><rect x="576.7" y="213" width="18.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="579.68" y="223.5" ></text>
</g>
<g >
<title>should_failslab (15,459,052 samples, 0.03%)</title><rect x="924.3" y="229" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="927.27" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,495,582 samples, 0.03%)</title><rect x="262.1" y="517" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="265.13" y="527.5" ></text>
</g>
<g >
<title>inode_permission (28,309,119 samples, 0.06%)</title><rect x="995.2" y="277" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="998.23" y="287.5" ></text>
</g>
<g >
<title>__check_object_size (306,082,493 samples, 0.67%)</title><rect x="1020.6" y="293" width="7.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1023.56" y="303.5" ></text>
</g>
<g >
<title>xas_start (65,516,867 samples, 0.14%)</title><rect x="593.7" y="181" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="596.66" y="191.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (204,325,470 samples, 0.45%)</title><rect x="600.8" y="245" width="5.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="603.84" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (93,216,591 samples, 0.20%)</title><rect x="721.9" y="421" width="2.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="724.93" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,381,369 samples, 0.03%)</title><rect x="457.7" y="293" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="460.70" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,120,109 samples, 0.04%)</title><rect x="328.5" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="331.50" y="447.5" ></text>
</g>
<g >
<title>mntput (14,478,666 samples, 0.03%)</title><rect x="769.3" y="357" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="772.29" y="367.5" ></text>
</g>
<g >
<title>__fget_light (82,238,595 samples, 0.18%)</title><rect x="998.8" y="277" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1001.80" y="287.5" ></text>
</g>
<g >
<title>rb_next_postorder (54,932,887 samples, 0.12%)</title><rect x="762.1" y="325" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="765.06" y="335.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (40,422,749 samples, 0.09%)</title><rect x="758.8" y="309" width="1.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="761.84" y="319.5" ></text>
</g>
<g >
<title>update_process_times (12,381,369 samples, 0.03%)</title><rect x="457.7" y="229" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="460.70" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (53,891,457 samples, 0.12%)</title><rect x="885.1" y="389" width="1.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="888.15" y="399.5" ></text>
</g>
<g >
<title>check_stack_object (55,758,312 samples, 0.12%)</title><rect x="1027.0" y="277" width="1.4" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1030.00" y="287.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (57,300,477 samples, 0.12%)</title><rect x="1062.6" y="373" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1065.63" y="383.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (11,323,161 samples, 0.02%)</title><rect x="727.3" y="469" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="730.26" y="479.5" ></text>
</g>
<g >
<title>mem.eqlBytes (156,788,778 samples, 0.34%)</title><rect x="422.2" y="437" width="4.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="425.24" y="447.5" ></text>
</g>
<g >
<title>__find_get_block (1,489,128,411 samples, 3.25%)</title><rect x="561.0" y="245" width="38.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="564.03" y="255.5" >__f..</text>
</g>
<g >
<title>fs.Dir.close (2,501,330,016 samples, 5.46%)</title><rect x="728.6" y="485" width="64.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="731.59" y="495.5" >fs.Dir...</text>
</g>
<g >
<title>ext4_es_lookup_extent (324,866,714 samples, 0.71%)</title><rect x="606.1" y="245" width="8.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="609.10" y="255.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,120,109 samples, 0.04%)</title><rect x="328.5" y="293" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="331.50" y="303.5" ></text>
</g>
<g >
<title>fsnotify (52,213,888 samples, 0.11%)</title><rect x="764.2" y="357" width="1.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="767.16" y="367.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (20,495,148 samples, 0.04%)</title><rect x="441.7" y="437" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="444.68" y="447.5" ></text>
</g>
<g >
<title>__fsnotify_parent (42,234,290 samples, 0.09%)</title><rect x="510.6" y="357" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="513.57" y="367.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,948,437,129 samples, 8.61%)</title><rect x="1083.4" y="453" width="101.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1086.39" y="463.5" >mem.eql__ano..</text>
</g>
<g >
<title>hrtimer_interrupt (16,916,262 samples, 0.04%)</title><rect x="611.1" y="165" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="614.13" y="175.5" ></text>
</g>
<g >
<title>enqueue_entity (11,069,970 samples, 0.02%)</title><rect x="972.2" y="133" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="975.19" y="143.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,528,647 samples, 0.01%)</title><rect x="1014.2" y="293" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1017.23" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (162,631,828 samples, 0.35%)</title><rect x="300.5" y="485" width="4.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="303.47" y="495.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (865,437,769 samples, 1.89%)</title><rect x="1006.2" y="325" width="22.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1009.16" y="335.5" >g..</text>
</g>
<g >
<title>do_group_exit (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="533" width="2.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1190.36" y="543.5" ></text>
</g>
<g >
<title>debug.assert (47,380,746 samples, 0.10%)</title><rect x="331.7" y="469" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="334.65" y="479.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (67,716,633 samples, 0.15%)</title><rect x="454.4" y="405" width="1.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="457.44" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,381,369 samples, 0.03%)</title><rect x="457.7" y="261" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="460.70" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,921,089 samples, 0.02%)</title><rect x="927.5" y="213" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="930.53" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,378,303 samples, 0.04%)</title><rect x="130.3" y="373" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="133.26" y="383.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (27,806,416 samples, 0.06%)</title><rect x="1184.3" y="437" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1187.30" y="447.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (29,924,637 samples, 0.07%)</title><rect x="923.5" y="229" width="0.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="926.50" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,891,277 samples, 0.04%)</title><rect x="716.0" y="325" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="719.00" y="335.5" ></text>
</g>
<g >
<title>debug.assert (36,612,562 samples, 0.08%)</title><rect x="323.5" y="453" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="326.49" y="463.5" ></text>
</g>
<g >
<title>up_read (120,683,656 samples, 0.26%)</title><rect x="710.2" y="357" width="3.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="713.16" y="367.5" ></text>
</g>
<g >
<title>fsnotify (18,427,113 samples, 0.04%)</title><rect x="511.2" y="341" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="514.18" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (354,535,635 samples, 0.77%)</title><rect x="856.7" y="469" width="9.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="859.74" y="479.5" ></text>
</g>
<g >
<title>__memcpy (63,235,529 samples, 0.14%)</title><rect x="644.7" y="293" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="647.66" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_lock (11,190,279 samples, 0.02%)</title><rect x="1004.1" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1007.12" y="271.5" ></text>
</g>
<g >
<title>posix.lseek_SET (10,901,755 samples, 0.02%)</title><rect x="727.0" y="453" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="729.98" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (33,584,775 samples, 0.07%)</title><rect x="902.2" y="309" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="905.25" y="319.5" ></text>
</g>
<g >
<title>init_file (462,840,760 samples, 1.01%)</title><rect x="912.8" y="277" width="11.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="915.75" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (12,005,091 samples, 0.03%)</title><rect x="925.4" y="229" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="928.44" y="239.5" ></text>
</g>
<g >
<title>all (45,848,656,260 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>fsnotify (170,104,885 samples, 0.37%)</title><rect x="704.1" y="341" width="4.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="707.08" y="351.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (11,180,372 samples, 0.02%)</title><rect x="865.6" y="325" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="868.58" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_free (166,393,440 samples, 0.36%)</title><rect x="753.0" y="325" width="4.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="756.04" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,891,277 samples, 0.04%)</title><rect x="716.0" y="213" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="719.00" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (99,086,796 samples, 0.22%)</title><rect x="1039.9" y="453" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1042.91" y="463.5" ></text>
</g>
<g >
<title>__fdget_pos (361,598,335 samples, 0.79%)</title><rect x="493.0" y="373" width="9.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="495.95" y="383.5" ></text>
</g>
<g >
<title>security_file_permission (31,908,137 samples, 0.07%)</title><rect x="708.5" y="357" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="711.45" y="367.5" ></text>
</g>
<g >
<title>update_curr_se (12,381,369 samples, 0.03%)</title><rect x="457.7" y="165" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="460.70" y="175.5" ></text>
</g>
<g >
<title>try_module_get (11,815,579 samples, 0.03%)</title><rect x="976.5" y="277" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="979.51" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (16,916,262 samples, 0.04%)</title><rect x="611.1" y="53" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="614.13" y="63.5" ></text>
</g>
<g >
<title>__brelse (41,056,299 samples, 0.09%)</title><rect x="546.4" y="309" width="1.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="549.36" y="319.5" ></text>
</g>
<g >
<title>os.linux.close (2,212,642,344 samples, 4.83%)</title><rect x="733.7" y="453" width="57.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="736.70" y="463.5" >os.lin..</text>
</g>
<g >
<title>path_get (18,414,519 samples, 0.04%)</title><rect x="961.2" y="277" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="964.17" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,921,089 samples, 0.02%)</title><rect x="927.5" y="149" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="930.53" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,441,657 samples, 0.04%)</title><rect x="856.3" y="357" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="859.27" y="367.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (4,737,408,799 samples, 10.33%)</title><rect x="1065.0" y="485" width="122.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1068.05" y="495.5" >mem.indexOfPos_..</text>
</g>
<g >
<title>update_process_times (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="309" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1169.83" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,017,262 samples, 0.03%)</title><rect x="932.5" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="935.46" y="255.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (35,937,359,380 samples, 78.38%)</title><rect x="262.4" y="549" width="925.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="265.45" y="559.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>[[x_tables]] (447,072,486 samples, 0.98%)</title><rect x="962.3" y="245" width="11.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="965.34" y="255.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (44,888,467 samples, 0.10%)</title><rect x="456.2" y="373" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="459.19" y="383.5" ></text>
</g>
<g >
<title>mem.eqlBytes (18,920,532 samples, 0.04%)</title><rect x="420.1" y="453" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="423.09" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1169.83" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (10,923,302 samples, 0.02%)</title><rect x="865.9" y="469" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="868.87" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,891,277 samples, 0.04%)</title><rect x="716.0" y="341" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="719.00" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (16,916,262 samples, 0.04%)</title><rect x="611.1" y="69" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="614.13" y="79.5" ></text>
</g>
<g >
<title>posix.close (2,307,420,729 samples, 5.03%)</title><rect x="733.2" y="469" width="59.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="736.23" y="479.5" >posix...</text>
</g>
<g >
<title>perf_event_task_tick (18,120,109 samples, 0.04%)</title><rect x="328.5" y="309" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="331.50" y="319.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (89,131,229 samples, 0.19%)</title><rect x="957.6" y="277" width="2.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="960.59" y="287.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (76,454,248 samples, 0.17%)</title><rect x="790.7" y="453" width="1.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="793.65" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (19,807,148 samples, 0.04%)</title><rect x="884.6" y="405" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="887.64" y="415.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,010,823,427 samples, 4.39%)</title><rect x="805.0" y="469" width="51.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="807.99" y="479.5" >compi..</text>
</g>
<g >
<title>mod_objcg_state (93,919,036 samples, 0.20%)</title><rect x="934.5" y="245" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="937.52" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,381,369 samples, 0.03%)</title><rect x="457.7" y="341" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="460.70" y="351.5" ></text>
</g>
<g >
<title>__call_rcu_common (196,197,578 samples, 0.43%)</title><rect x="743.7" y="373" width="5.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="746.66" y="383.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (1,069,082,907 samples, 2.33%)</title><rect x="650.5" y="293" width="27.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="653.48" y="303.5" >_..</text>
</g>
<g >
<title>posix.openatZ (6,073,370,321 samples, 13.25%)</title><rect x="880.8" y="437" width="156.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="883.83" y="447.5" >posix.openatZ</text>
</g>
<g >
<title>rb_insert_color (63,656,085 samples, 0.14%)</title><rect x="646.3" y="293" width="1.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="649.29" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,891,277 samples, 0.04%)</title><rect x="716.0" y="293" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="719.00" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,049,514,613 samples, 19.74%)</title><rect x="489.0" y="405" width="232.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="492.03" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (30,518,267 samples, 0.07%)</title><rect x="726.2" y="453" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="729.20" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (46,462,024 samples, 0.10%)</title><rect x="886.5" y="389" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="889.53" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (12,381,369 samples, 0.03%)</title><rect x="457.7" y="213" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="460.70" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (42,209,952 samples, 0.09%)</title><rect x="130.0" y="517" width="1.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="132.96" y="527.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (54,996,152 samples, 0.12%)</title><rect x="746.7" y="357" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="749.72" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (67,775,676 samples, 0.15%)</title><rect x="329.0" y="485" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="331.97" y="495.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (96,567,848 samples, 0.21%)</title><rect x="417.6" y="453" width="2.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="420.60" y="463.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (17,411,094 samples, 0.04%)</title><rect x="317.6" y="469" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="320.61" y="479.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (33,811,604 samples, 0.07%)</title><rect x="262.4" y="517" width="0.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="265.45" y="527.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (28,079,812 samples, 0.06%)</title><rect x="318.1" y="469" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="321.06" y="479.5" ></text>
</g>
<g >
<title>handle_softirqs (11,255,218 samples, 0.02%)</title><rect x="333.3" y="437" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="336.28" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,916,262 samples, 0.04%)</title><rect x="611.1" y="213" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="614.13" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (30,339,280 samples, 0.07%)</title><rect x="130.3" y="485" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="133.26" y="495.5" ></text>
</g>
<g >
<title>update_process_times (12,472,989 samples, 0.03%)</title><rect x="262.1" y="405" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="265.13" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,180,372 samples, 0.02%)</title><rect x="865.6" y="421" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="868.58" y="431.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (22,390,823 samples, 0.05%)</title><rect x="748.1" y="357" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="751.14" y="367.5" ></text>
</g>
<g >
<title>make_vfsuid (22,874,659 samples, 0.05%)</title><rect x="980.9" y="277" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="983.86" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (16,916,262 samples, 0.04%)</title><rect x="611.1" y="85" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="614.13" y="95.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (128,514,661 samples, 0.28%)</title><rect x="929.9" y="261" width="3.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="932.87" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,718,979,311 samples, 3.75%)</title><rect x="742.8" y="389" width="44.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="745.79" y="399.5" >__x6..</text>
</g>
<g >
<title>__mod_lruvec_state (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="405" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.36" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,180,372 samples, 0.02%)</title><rect x="865.6" y="453" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="868.58" y="463.5" ></text>
</g>
<g >
<title>call_filldir (917,637,211 samples, 2.00%)</title><rect x="516.3" y="341" width="23.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="519.27" y="351.5" >c..</text>
</g>
<g >
<title>do_sys_openat2 (5,227,417,180 samples, 11.40%)</title><rect x="897.2" y="341" width="134.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="900.15" y="351.5" >do_sys_openat2</text>
</g>
<g >
<title>tick_sched_timer (16,916,262 samples, 0.04%)</title><rect x="611.1" y="133" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="614.13" y="143.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,827,563 samples, 0.03%)</title><rect x="130.0" y="485" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="132.96" y="495.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (52,549,194 samples, 0.11%)</title><rect x="971.1" y="229" width="1.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="974.13" y="239.5" ></text>
</g>
<g >
<title>lockref_put_return (36,129,835 samples, 0.08%)</title><rect x="1003.2" y="261" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1006.19" y="271.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (68,896,126 samples, 0.15%)</title><rect x="930.7" y="245" width="1.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="933.68" y="255.5" ></text>
</g>
<g >
<title>__fput_sync (13,909,336 samples, 0.03%)</title><rect x="773.3" y="373" width="0.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="776.28" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,455,253 samples, 0.04%)</title><rect x="856.3" y="453" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="859.27" y="463.5" ></text>
</g>
<g >
<title>__memset (61,562,832 samples, 0.13%)</title><rect x="927.8" y="261" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="930.81" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (10,969,317 samples, 0.02%)</title><rect x="605.8" y="213" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="608.82" y="223.5" ></text>
</g>
<g >
<title>verify_dirent_name (197,419,385 samples, 0.43%)</title><rect x="534.8" y="309" width="5.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="537.80" y="319.5" ></text>
</g>
<g >
<title>lockref_put_return (23,807,177 samples, 0.05%)</title><rect x="510.6" y="325" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="513.57" y="335.5" ></text>
</g>
<g >
<title>[unknown] (14,297,988 samples, 0.03%)</title><rect x="973.9" y="245" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="976.85" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (12,310,533 samples, 0.03%)</title><rect x="1002.5" y="277" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1005.48" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,451,769 samples, 0.02%)</title><rect x="670.0" y="277" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="673.02" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19,807,148 samples, 0.04%)</title><rect x="884.6" y="389" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="887.64" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (17,763,103 samples, 0.04%)</title><rect x="1064.1" y="501" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1067.10" y="511.5" ></text>
</g>
<g >
<title>fput (24,973,170 samples, 0.05%)</title><rect x="1000.9" y="277" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1003.92" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,451,769 samples, 0.02%)</title><rect x="670.0" y="197" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="673.02" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (13,293,661,933 samples, 28.99%)</title><rect x="386.5" y="485" width="342.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="389.45" y="495.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11,451,769 samples, 0.02%)</title><rect x="670.0" y="117" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="673.02" y="127.5" ></text>
</g>
<g >
<title>c.clone (45,484,854,469 samples, 99.21%)</title><rect x="16.7" y="581" width="1170.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.73" y="591.5" >c.clone</text>
</g>
<g >
<title>tick_sched_timer (30,339,280 samples, 0.07%)</title><rect x="130.3" y="437" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="133.26" y="447.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,120,109 samples, 0.04%)</title><rect x="328.5" y="421" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="331.50" y="431.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (746,857,429 samples, 1.63%)</title><rect x="458.4" y="405" width="19.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="461.40" y="415.5" ></text>
</g>
<g >
<title>__slab_free (11,827,563 samples, 0.03%)</title><rect x="130.0" y="421" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="132.96" y="431.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (11,337,469 samples, 0.02%)</title><rect x="278.0" y="501" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="281.03" y="511.5" ></text>
</g>
<g >
<title>___slab_alloc (42,503,803 samples, 0.09%)</title><rect x="638.5" y="261" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="641.52" y="271.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (461,370,474 samples, 1.01%)</title><rect x="962.3" y="261" width="11.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="965.34" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (65,590,430 samples, 0.14%)</title><rect x="1185.0" y="453" width="1.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1188.01" y="463.5" ></text>
</g>
<g >
<title>os.linux.lseek (10,901,755 samples, 0.02%)</title><rect x="727.0" y="437" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="729.98" y="447.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (74,192,391 samples, 0.16%)</title><rect x="1062.2" y="405" width="1.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1065.19" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,472,989 samples, 0.03%)</title><rect x="262.1" y="469" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="265.13" y="479.5" ></text>
</g>
<g >
<title>call_rcu (13,311,582 samples, 0.03%)</title><rect x="773.6" y="373" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="776.64" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (417,222,027 samples, 0.91%)</title><rect x="390.6" y="469" width="10.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="393.60" y="479.5" ></text>
</g>
<g >
<title>do_filp_open (3,828,459,173 samples, 8.35%)</title><rect x="905.9" y="325" width="98.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="908.88" y="335.5" >do_filp_open</text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (29,716,115 samples, 0.06%)</title><rect x="385.7" y="485" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="388.69" y="495.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (4,643,100,812 samples, 10.13%)</title><rect x="1067.2" y="469" width="119.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1070.20" y="479.5" >mem.indexOfPos..</text>
</g>
<g >
<title>update_load_avg (12,472,989 samples, 0.03%)</title><rect x="262.1" y="357" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="265.13" y="367.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (25,591,831 samples, 0.06%)</title><rect x="1036.5" y="421" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1039.49" y="431.5" ></text>
</g>
<g >
<title>mntput_no_expire (11,190,279 samples, 0.02%)</title><rect x="1004.1" y="277" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1007.12" y="287.5" ></text>
</g>
<g >
<title>schedule (11,180,372 samples, 0.02%)</title><rect x="865.6" y="405" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="868.58" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,921,089 samples, 0.02%)</title><rect x="927.5" y="133" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="930.53" y="143.5" ></text>
</g>
<g >
<title>debug.inValgrind (141,692,952 samples, 0.31%)</title><rect x="450.8" y="405" width="3.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="453.80" y="415.5" ></text>
</g>
<g >
<title>fd_install (45,789,661 samples, 0.10%)</title><rect x="1004.4" y="325" width="1.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1007.41" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (11,127,587 samples, 0.02%)</title><rect x="385.4" y="485" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="388.40" y="495.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (10,707,209 samples, 0.02%)</title><rect x="1186.7" y="469" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1189.70" y="479.5" ></text>
</g>
<g >
<title>amd_clear_divider (24,069,418 samples, 0.05%)</title><rect x="717.5" y="373" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="720.46" y="383.5" ></text>
</g>
<g >
<title>[unknown] (120,160,629 samples, 0.26%)</title><rect x="884.6" y="421" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="887.64" y="431.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (5,318,845,754 samples, 11.60%)</title><rect x="541.9" y="325" width="136.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="544.86" y="335.5" >htree_dirblock_to..</text>
</g>
<g >
<title>tick_sched_handle (12,381,369 samples, 0.03%)</title><rect x="457.7" y="245" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="460.70" y="255.5" ></text>
</g>
<g >
<title>update_process_times (18,120,109 samples, 0.04%)</title><rect x="328.5" y="341" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="331.50" y="351.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (173,620,297 samples, 0.38%)</title><rect x="313.1" y="469" width="4.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="316.14" y="479.5" ></text>
</g>
<g >
<title>xas_descend (233,532,033 samples, 0.51%)</title><rect x="587.6" y="181" width="6.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="590.65" y="191.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (27,550,724 samples, 0.06%)</title><rect x="727.9" y="469" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="730.88" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,017,913,658 samples, 4.40%)</title><rect x="738.4" y="405" width="52.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="741.44" y="415.5" >do_sy..</text>
</g>
<g >
<title>security_inode_permission (11,046,144 samples, 0.02%)</title><rect x="996.0" y="277" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="998.96" y="287.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (87,675,059 samples, 0.19%)</title><rect x="10.0" y="565" width="2.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (18,904,876 samples, 0.04%)</title><rect x="945.3" y="117" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="948.27" y="127.5" ></text>
</g>
<g >
<title>file_ra_state_init (47,074,843 samples, 0.10%)</title><rect x="953.6" y="277" width="1.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="956.64" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (29,174,992 samples, 0.06%)</title><rect x="1034.1" y="389" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1037.05" y="399.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (132,571,641 samples, 0.29%)</title><rect x="437.2" y="453" width="3.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="440.17" y="463.5" ></text>
</g>
<g >
<title>__virt_addr_valid (176,942,752 samples, 0.39%)</title><rect x="1022.4" y="277" width="4.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1025.44" y="287.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (81,374,636 samples, 0.18%)</title><rect x="936.9" y="261" width="2.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="939.94" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (219,580,601 samples, 0.48%)</title><rect x="318.8" y="485" width="5.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="321.78" y="495.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (91,395,550 samples, 0.20%)</title><rect x="778.8" y="341" width="2.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="781.80" y="351.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (35,878,561,406 samples, 78.25%)</title><rect x="263.6" y="517" width="923.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="266.57" y="527.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>update_process_times (18,891,277 samples, 0.04%)</title><rect x="716.0" y="261" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="719.00" y="271.5" ></text>
</g>
<g >
<title>strncpy_from_user (531,186,626 samples, 1.16%)</title><rect x="1014.8" y="309" width="13.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1017.76" y="319.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (389,022,135 samples, 0.85%)</title><rect x="793.0" y="485" width="10.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="795.97" y="495.5" ></text>
</g>
<g >
<title>security_file_open (577,715,525 samples, 1.26%)</title><rect x="961.6" y="277" width="14.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="964.64" y="287.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (80,028,939 samples, 0.17%)</title><rect x="925.8" y="245" width="2.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="928.75" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,451,769 samples, 0.02%)</title><rect x="670.0" y="213" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="673.02" y="223.5" ></text>
</g>
<g >
<title>__check_heap_object (9,827,367 samples, 0.02%)</title><rect x="1022.2" y="277" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1025.19" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,166,843 samples, 0.09%)</title><rect x="130.0" y="501" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="132.96" y="511.5" ></text>
</g>
<g >
<title>scheduler_tick (11,451,769 samples, 0.02%)</title><rect x="670.0" y="149" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="673.02" y="159.5" ></text>
</g>
<g >
<title>debug.assert (26,282,627 samples, 0.06%)</title><rect x="876.8" y="453" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="879.77" y="463.5" ></text>
</g>
<g >
<title>generic_permission (22,621,625 samples, 0.05%)</title><rect x="980.3" y="261" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="983.27" y="271.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (67,298,328 samples, 0.15%)</title><rect x="965.8" y="213" width="1.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="968.79" y="223.5" ></text>
</g>
<g >
<title>avg_vruntime (10,921,089 samples, 0.02%)</title><rect x="927.5" y="37" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="930.53" y="47.5" ></text>
</g>
<g >
<title>tick_sched_handle (16,916,262 samples, 0.04%)</title><rect x="611.1" y="117" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="614.13" y="127.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (812,526,537 samples, 1.77%)</title><rect x="1043.2" y="453" width="20.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1046.19" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,472,989 samples, 0.03%)</title><rect x="262.1" y="421" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="265.13" y="431.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (667,020,678 samples, 1.45%)</title><rect x="1167.1" y="437" width="17.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1170.13" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,381,369 samples, 0.03%)</title><rect x="457.7" y="277" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="460.70" y="287.5" ></text>
</g>
<g >
<title>generic_permission (17,524,067 samples, 0.04%)</title><rect x="995.5" y="261" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="998.51" y="271.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (40,670,148 samples, 0.09%)</title><rect x="964.7" y="213" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="967.75" y="223.5" ></text>
</g>
<g >
<title>hook_file_open (89,151,158 samples, 0.19%)</title><rect x="974.2" y="261" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="977.22" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (12,005,091 samples, 0.03%)</title><rect x="925.4" y="213" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="928.44" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (15,135,927 samples, 0.03%)</title><rect x="803.0" y="485" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="805.98" y="495.5" ></text>
</g>
<g >
<title>handle_softirqs (11,827,563 samples, 0.03%)</title><rect x="130.0" y="469" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="132.96" y="479.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (124,948,627 samples, 0.27%)</title><rect x="451.2" y="389" width="3.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="454.23" y="399.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (114,700,709 samples, 0.25%)</title><rect x="307.4" y="469" width="3.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="310.42" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (41,538,434 samples, 0.09%)</title><rect x="1028.4" y="325" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1031.43" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (61,063,909 samples, 0.13%)</title><rect x="612.9" y="229" width="1.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="615.89" y="239.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (4,756,427,042 samples, 10.37%)</title><rect x="1064.6" y="501" width="122.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1067.56" y="511.5" >mem.indexOf__an..</text>
</g>
<g >
<title>reweight_entity (10,921,089 samples, 0.02%)</title><rect x="927.5" y="53" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="930.53" y="63.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (18,904,876 samples, 0.04%)</title><rect x="945.3" y="101" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="948.27" y="111.5" ></text>
</g>
<g >
<title>enqueue_task_fair (11,069,970 samples, 0.02%)</title><rect x="972.2" y="149" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="975.19" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (35,392,610 samples, 0.08%)</title><rect x="694.5" y="309" width="0.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="697.47" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,891,277 samples, 0.04%)</title><rect x="716.0" y="373" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="719.00" y="383.5" ></text>
</g>
<g >
<title>path_init (206,602,281 samples, 0.45%)</title><rect x="996.2" y="293" width="5.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="999.24" y="303.5" ></text>
</g>
<g >
<title>__put_user_8 (158,314,121 samples, 0.35%)</title><rect x="502.3" y="373" width="4.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="505.26" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (18,120,109 samples, 0.04%)</title><rect x="328.5" y="325" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="331.50" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,921,089 samples, 0.02%)</title><rect x="927.5" y="197" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="930.53" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (29,681,132 samples, 0.06%)</title><rect x="316.4" y="453" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="319.45" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,921,089 samples, 0.02%)</title><rect x="927.5" y="165" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="930.53" y="175.5" ></text>
</g>
<g >
<title>rb_next_postorder (21,332,650 samples, 0.05%)</title><rect x="683.9" y="325" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="686.88" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,916,262 samples, 0.04%)</title><rect x="611.1" y="149" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="614.13" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (28,270,756 samples, 0.06%)</title><rect x="16.0" y="549" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="19.00" y="559.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (25,914,173 samples, 0.06%)</title><rect x="969.5" y="197" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="972.49" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18,891,277 samples, 0.04%)</title><rect x="716.0" y="197" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="719.00" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,390,320 samples, 0.03%)</title><rect x="970.2" y="213" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="973.15" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,255,218 samples, 0.02%)</title><rect x="333.3" y="469" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="336.28" y="479.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (36,146,975 samples, 0.08%)</title><rect x="787.0" y="389" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="790.04" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (18,441,657 samples, 0.04%)</title><rect x="856.3" y="373" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="859.27" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (10,921,089 samples, 0.02%)</title><rect x="927.5" y="229" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="930.53" y="239.5" ></text>
</g>
<g >
<title>putname (85,082,214 samples, 0.19%)</title><rect x="1029.5" y="325" width="2.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1032.50" y="335.5" ></text>
</g>
<g >
<title>acpi_os_read_port (18,904,876 samples, 0.04%)</title><rect x="945.3" y="53" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="948.27" y="63.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (10,130,750,534 samples, 22.10%)</title><rect x="803.4" y="485" width="260.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="806.37" y="495.5" >fs.Dir.openDir</text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (35,937,359,380 samples, 78.38%)</title><rect x="262.4" y="533" width="925.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="265.45" y="543.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (9,596,110,410 samples, 20.93%)</title><rect x="479.2" y="437" width="247.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="482.22" y="447.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (973,285,571 samples, 2.12%)</title><rect x="237.4" y="533" width="25.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="240.40" y="543.5" >m..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (18,512,006 samples, 0.04%)</title><rect x="1044.0" y="437" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1046.95" y="447.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr (11,069,970 samples, 0.02%)</title><rect x="972.2" y="197" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="975.19" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (18,161,685 samples, 0.04%)</title><rect x="310.4" y="485" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="313.37" y="495.5" ></text>
</g>
<g >
<title>mutex_unlock (46,800,933 samples, 0.10%)</title><rect x="713.3" y="373" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="716.27" y="383.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (22,273,899 samples, 0.05%)</title><rect x="1005.6" y="325" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1008.59" y="335.5" ></text>
</g>
<g >
<title>schedule (18,455,253 samples, 0.04%)</title><rect x="856.3" y="405" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="859.27" y="415.5" ></text>
</g>
<g >
<title>fput (28,755,430 samples, 0.06%)</title><rect x="506.3" y="373" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="509.33" y="383.5" ></text>
</g>
<g >
<title>fsnotify (77,792,110 samples, 0.17%)</title><rect x="957.9" y="261" width="2.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="960.88" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (11,180,372 samples, 0.02%)</title><rect x="865.6" y="437" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="868.58" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1169.83" y="415.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (27,178,269 samples, 0.06%)</title><rect x="456.6" y="357" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="459.64" y="367.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (10,937,278 samples, 0.02%)</title><rect x="1061.9" y="405" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1064.91" y="415.5" ></text>
</g>
<g >
<title>fs.Dir.walk (15,129,835 samples, 0.03%)</title><rect x="1187.0" y="485" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1189.97" y="495.5" ></text>
</g>
<g >
<title>debug.assert (15,557,405 samples, 0.03%)</title><rect x="317.2" y="453" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="320.21" y="463.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (298,573,859 samples, 0.65%)</title><rect x="670.3" y="277" width="7.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="673.31" y="287.5" ></text>
</g>
<g >
<title>ext4_getblk (2,138,219,423 samples, 4.66%)</title><rect x="559.4" y="277" width="55.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="562.43" y="287.5" >ext4_..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (16,023,737 samples, 0.03%)</title><rect x="265.6" y="501" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="268.58" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,284,124 samples, 0.02%)</title><rect x="789.0" y="373" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="792.00" y="383.5" ></text>
</g>
<g >
<title>mem.eqlBytes (51,363,057 samples, 0.11%)</title><rect x="1082.1" y="453" width="1.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1085.07" y="463.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (78,212,342 samples, 0.17%)</title><rect x="714.5" y="389" width="2.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="717.47" y="399.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (764,443,925 samples, 1.67%)</title><rect x="1044.4" y="437" width="19.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1047.43" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="373" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1169.83" y="383.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (71,740,480 samples, 0.16%)</title><rect x="681.3" y="309" width="1.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="684.33" y="319.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="453" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1190.36" y="463.5" ></text>
</g>
<g >
<title>__kmem_cache_free (13,113,709 samples, 0.03%)</title><rect x="679.5" y="325" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="682.48" y="335.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (85,024,370 samples, 0.19%)</title><rect x="943.6" y="245" width="2.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="946.57" y="255.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (72,501,402 samples, 0.16%)</title><rect x="596.6" y="213" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="599.57" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (65,568,780 samples, 0.14%)</title><rect x="300.9" y="453" width="1.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="303.88" y="463.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (6,205,060,801 samples, 13.53%)</title><rect x="877.4" y="453" width="159.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="880.45" y="463.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (105,470,125 samples, 0.23%)</title><rect x="800.3" y="453" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="803.26" y="463.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,891,277 samples, 0.04%)</title><rect x="716.0" y="229" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="719.00" y="239.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (2,179,712,985 samples, 4.75%)</title><rect x="558.4" y="309" width="56.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="561.36" y="319.5" >__ext..</text>
</g>
<g >
<title>__do_set_cpus_allowed (11,069,970 samples, 0.02%)</title><rect x="972.2" y="165" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="975.19" y="175.5" ></text>
</g>
<g >
<title>cache_from_obj (35,890,615 samples, 0.08%)</title><rect x="768.4" y="341" width="0.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="771.37" y="351.5" ></text>
</g>
<g >
<title>put_cpu_partial (11,800,394 samples, 0.03%)</title><rect x="763.9" y="341" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="766.86" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,438,771,366 samples, 11.86%)</title><rect x="894.1" y="373" width="140.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="897.07" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>debug.inValgrind (106,851,807 samples, 0.23%)</title><rect x="1061.4" y="421" width="2.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1064.35" y="431.5" ></text>
</g>
<g >
<title>__common_interrupt (18,904,876 samples, 0.04%)</title><rect x="945.3" y="197" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="948.27" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,381,369 samples, 0.03%)</title><rect x="457.7" y="325" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="460.70" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (2,212,642,344 samples, 4.83%)</title><rect x="733.7" y="437" width="57.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="736.70" y="447.5" >os.lin..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (176,278,280 samples, 0.38%)</title><rect x="324.4" y="485" width="4.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="327.43" y="495.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (37,714,550 samples, 0.08%)</title><rect x="970.2" y="229" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="973.15" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (18,891,277 samples, 0.04%)</title><rect x="716.0" y="277" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="719.00" y="287.5" ></text>
</g>
<g >
<title>update_process_times (11,451,769 samples, 0.02%)</title><rect x="670.0" y="165" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="673.02" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,921,089 samples, 0.02%)</title><rect x="927.5" y="181" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="930.53" y="191.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (199,114,494 samples, 0.43%)</title><rect x="703.3" y="357" width="5.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="706.33" y="367.5" ></text>
</g>
<g >
<title>close_fd_get_file (155,583,861 samples, 0.34%)</title><rect x="774.0" y="373" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="776.98" y="383.5" ></text>
</g>
<g >
<title>dx_probe (18,821,771 samples, 0.04%)</title><rect x="541.4" y="325" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="544.38" y="335.5" ></text>
</g>
<g >
<title>common_interrupt (18,904,876 samples, 0.04%)</title><rect x="945.3" y="213" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="948.27" y="223.5" ></text>
</g>
<g >
<title>x64_sys_call (42,241,187 samples, 0.09%)</title><rect x="789.3" y="389" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="792.29" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,120,109 samples, 0.04%)</title><rect x="328.5" y="405" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="331.50" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,916,262 samples, 0.04%)</title><rect x="611.1" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="614.13" y="207.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,918,588,718 samples, 6.37%)</title><rect x="1092.0" y="437" width="75.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1095.01" y="447.5" >mem.eqlB..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (24,300,480 samples, 0.05%)</title><rect x="11.6" y="549" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="14.63" y="559.5" ></text>
</g>
<g >
<title>expand_files (32,212,612 samples, 0.07%)</title><rect x="903.1" y="309" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="906.11" y="319.5" ></text>
</g>
<g >
<title>__mutex_init (11,266,743 samples, 0.02%)</title><rect x="915.8" y="261" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="918.83" y="271.5" ></text>
</g>
<g >
<title>exit_mmap (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="485" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.36" y="495.5" ></text>
</g>
<g >
<title>_raw_read_unlock (51,531,679 samples, 0.11%)</title><rect x="611.6" y="229" width="1.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="614.57" y="239.5" ></text>
</g>
<g >
<title>___slab_alloc (92,034,030 samples, 0.20%)</title><rect x="925.4" y="261" width="2.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="928.44" y="271.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (412,347,239 samples, 0.90%)</title><rect x="426.3" y="437" width="10.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="429.27" y="447.5" ></text>
</g>
<g >
<title>update_load_avg (11,180,372 samples, 0.02%)</title><rect x="865.6" y="341" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="868.58" y="351.5" ></text>
</g>
<g >
<title>__fget_light (211,045,072 samples, 0.46%)</title><rect x="495.1" y="357" width="5.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="498.10" y="367.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (24,291,943 samples, 0.05%)</title><rect x="1031.7" y="357" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1034.69" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,120,109 samples, 0.04%)</title><rect x="328.5" y="453" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="331.50" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,120,109 samples, 0.04%)</title><rect x="328.5" y="373" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="331.50" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (12,005,091 samples, 0.03%)</title><rect x="925.4" y="197" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="928.44" y="207.5" ></text>
</g>
<g >
<title>avg_vruntime (11,069,970 samples, 0.02%)</title><rect x="972.2" y="101" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="975.19" y="111.5" ></text>
</g>
<g >
<title>__kmalloc (722,073,818 samples, 1.57%)</title><rect x="626.1" y="293" width="18.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="629.08" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1169.83" y="303.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (713,791,799 samples, 1.56%)</title><rect x="177.0" y="517" width="18.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="179.99" y="527.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (74,192,391 samples, 0.16%)</title><rect x="1062.2" y="389" width="1.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1065.19" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (11,167,383 samples, 0.02%)</title><rect x="1000.6" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1003.63" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (18,104,319 samples, 0.04%)</title><rect x="302.6" y="469" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="305.57" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,451,769 samples, 0.02%)</title><rect x="670.0" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="673.02" y="271.5" ></text>
</g>
<g >
<title>update_process_times (30,339,280 samples, 0.07%)</title><rect x="130.3" y="405" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="133.26" y="415.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,300,153,289 samples, 2.84%)</title><rect x="614.5" y="309" width="33.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="617.46" y="319.5" >ex..</text>
</g>
<g >
<title>dnotify_flush (122,987,402 samples, 0.27%)</title><rect x="778.0" y="357" width="3.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="780.98" y="367.5" ></text>
</g>
<g >
<title>dput (23,807,177 samples, 0.05%)</title><rect x="510.6" y="341" width="0.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="513.57" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (18,904,876 samples, 0.04%)</title><rect x="945.3" y="149" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="948.27" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (120,131,930 samples, 0.26%)</title><rect x="595.3" y="229" width="3.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="598.35" y="239.5" ></text>
</g>
<g >
<title>ext4_bread (2,155,503,295 samples, 4.70%)</title><rect x="559.0" y="293" width="55.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="561.99" y="303.5" >ext4_..</text>
</g>
<g >
<title>os.linux.getdents64 (9,606,737,682 samples, 20.95%)</title><rect x="478.9" y="453" width="247.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="481.95" y="463.5" >os.linux.getdents64</text>
</g>
<g >
<title>__slab_free (130,630,515 samples, 0.28%)</title><rect x="679.8" y="325" width="3.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="682.82" y="335.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (15,129,835 samples, 0.03%)</title><rect x="1187.0" y="501" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1189.97" y="511.5" ></text>
</g>
<g >
<title>__filemap_get_folio (775,047,019 samples, 1.69%)</title><rect x="575.4" y="229" width="19.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="578.40" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (65,431,319 samples, 0.14%)</title><rect x="1034.8" y="389" width="1.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1037.80" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (9,945,297 samples, 0.02%)</title><rect x="771.2" y="341" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="774.21" y="351.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="469" width="2.5" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1190.36" y="479.5" ></text>
</g>
<g >
<title>should_failslab (12,675,916 samples, 0.03%)</title><rect x="643.0" y="261" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="646.04" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (18,455,253 samples, 0.04%)</title><rect x="856.3" y="437" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="859.27" y="447.5" ></text>
</g>
<g >
<title>debug.assert (28,516,709 samples, 0.06%)</title><rect x="1042.5" y="453" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1045.46" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (10,921,089 samples, 0.02%)</title><rect x="927.5" y="85" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="930.53" y="95.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,451,769 samples, 0.02%)</title><rect x="670.0" y="181" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="673.02" y="191.5" ></text>
</g>
<g >
<title>iterate_dir (8,011,674,444 samples, 17.47%)</title><rect x="507.1" y="373" width="206.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="510.07" y="383.5" >iterate_dir</text>
</g>
<g >
<title>exit_to_user_mode_prepare (94,346,168 samples, 0.21%)</title><rect x="718.1" y="373" width="2.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="721.08" y="383.5" ></text>
</g>
<g >
<title>htab_map_hash (12,570,246 samples, 0.03%)</title><rect x="965.5" y="197" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="968.47" y="207.5" ></text>
</g>
<g >
<title>mutex_lock (67,209,533 samples, 0.15%)</title><rect x="500.5" y="357" width="1.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="503.53" y="367.5" ></text>
</g>
<g >
<title>__mmput (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="501" width="2.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1190.36" y="511.5" ></text>
</g>
<g >
<title>filldir64 (798,127,095 samples, 1.74%)</title><rect x="519.3" y="325" width="20.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="522.34" y="335.5" ></text>
</g>
<g >
<title>array_list.addOrOom (48,916,796 samples, 0.11%)</title><rect x="329.5" y="469" width="1.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="332.46" y="479.5" ></text>
</g>
<g >
<title>__mod_node_page_state (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="389" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.36" y="399.5" ></text>
</g>
<g >
<title>update_process_times (10,921,089 samples, 0.02%)</title><rect x="927.5" y="101" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="930.53" y="111.5" ></text>
</g>
<g >
<title>[unknown] (261,387,333 samples, 0.57%)</title><rect x="10.0" y="581" width="6.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (63,374,579 samples, 0.14%)</title><rect x="10.0" y="549" width="1.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (94,259,216 samples, 0.21%)</title><rect x="693.0" y="325" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="695.96" y="335.5" ></text>
</g>
<g >
<title>acpi_irq (18,904,876 samples, 0.04%)</title><rect x="945.3" y="133" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="948.27" y="143.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (987,547,529 samples, 2.15%)</title><rect x="151.6" y="517" width="25.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="154.58" y="527.5" >l..</text>
</g>
<g >
<title>rcu_core (11,827,563 samples, 0.03%)</title><rect x="130.0" y="453" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="132.96" y="463.5" ></text>
</g>
<g >
<title>inode_query_iversion (80,147,406 samples, 0.17%)</title><rect x="684.4" y="341" width="2.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="687.43" y="351.5" ></text>
</g>
<g >
<title>allocate_slab (12,005,091 samples, 0.03%)</title><rect x="925.4" y="245" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="928.44" y="255.5" ></text>
</g>
<g >
<title>do_exit (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="517" width="2.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1190.36" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock (43,953,724 samples, 0.10%)</title><rect x="901.1" y="309" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="904.12" y="319.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (558,248,277 samples, 1.22%)</title><rect x="924.7" y="277" width="14.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="927.67" y="287.5" ></text>
</g>
<g >
<title>__memset (10,711,363 samples, 0.02%)</title><rect x="923.2" y="229" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="926.22" y="239.5" ></text>
</g>
<g >
<title>fsnotify (106,208,591 samples, 0.23%)</title><rect x="954.9" y="277" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="957.85" y="287.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (13,539,531 samples, 0.03%)</title><rect x="792.6" y="469" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="795.62" y="479.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (35,937,359,380 samples, 78.38%)</title><rect x="262.4" y="565" width="925.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="265.45" y="575.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>housekeeping_test_cpu (17,151,233 samples, 0.04%)</title><rect x="598.9" y="229" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="601.91" y="239.5" ></text>
</g>
<g >
<title>release_pages (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="437" width="2.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1190.36" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,534,006 samples, 0.03%)</title><rect x="1166.8" y="357" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1169.83" y="367.5" ></text>
</g>
<g >
<title>kfree (14,927,246 samples, 0.03%)</title><rect x="763.5" y="341" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="766.47" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,120,109 samples, 0.04%)</title><rect x="328.5" y="389" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="331.50" y="399.5" ></text>
</g>
<g >
<title>__memset (273,610,916 samples, 0.60%)</title><rect x="1007.2" y="293" width="7.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1010.19" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (5,635,152,830 samples, 12.29%)</title><rect x="891.5" y="405" width="145.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="894.45" y="415.5" >os.linux.x86_64.sy..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,119,468,853 samples, 19.89%)</title><rect x="487.2" y="421" width="234.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="490.23" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>do_syscall_64 (100,305,469 samples, 0.22%)</title><rect x="1187.4" y="565" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.36" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,398,451 samples, 0.03%)</title><rect x="1166.8" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1169.81" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,463,566,924 samples, 11.92%)</title><rect x="893.4" y="389" width="140.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="896.44" y="399.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>may_open (107,503,279 samples, 0.23%)</title><rect x="993.5" y="293" width="2.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="996.48" y="303.5" ></text>
</g>
<g >
<title>pick_next_task_fair (11,180,372 samples, 0.02%)</title><rect x="865.6" y="373" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="868.58" y="383.5" ></text>
</g>
<g >
<title>alloc_fd (236,382,085 samples, 0.52%)</title><rect x="897.9" y="325" width="6.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="900.86" y="335.5" ></text>
</g>
<g >
<title>_raw_read_lock (136,231,681 samples, 0.30%)</title><rect x="608.1" y="229" width="3.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="611.06" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,916,262 samples, 0.04%)</title><rect x="611.1" y="181" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="614.13" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (318,485,731 samples, 0.69%)</title><rect x="1006.6" y="309" width="8.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1009.57" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,891,277 samples, 0.04%)</title><rect x="716.0" y="357" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="719.00" y="367.5" ></text>
</g>
<g >
<title>debug.assert (10,684,521 samples, 0.02%)</title><rect x="302.3" y="437" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="305.29" y="447.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (9,547,495,089 samples, 20.82%)</title><rect x="16.7" y="565" width="245.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="19.73" y="575.5" >Thread.LinuxThreadImpl.spawn__an..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (81,490,039 samples, 0.18%)</title><rect x="300.5" y="469" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="303.47" y="479.5" ></text>
</g>
<g >
<title>terminate_walk (110,579,171 samples, 0.24%)</title><rect x="1001.6" y="293" width="2.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1004.56" y="303.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (12,752,617 samples, 0.03%)</title><rect x="727.6" y="469" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="730.55" y="479.5" ></text>
</g>
<g >
<title>search_name.searchName (15,129,835 samples, 0.03%)</title><rect x="1187.0" y="517" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1189.97" y="527.5" ></text>
</g>
<g >
<title>locks_remove_posix (228,682,163 samples, 0.50%)</title><rect x="781.1" y="357" width="5.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="784.15" y="367.5" ></text>
</g>
<g >
<title>should_failslab (16,041,256 samples, 0.03%)</title><rect x="1014.3" y="293" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1017.35" y="303.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (5,395,729,076 samples, 11.77%)</title><rect x="539.9" y="341" width="138.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="542.88" y="351.5" >ext4_htree_fill_t..</text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (6,940,856,718 samples, 15.14%)</title><rect x="16.7" y="533" width="178.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.73" y="543.5" >combined_runner.linreg_..</text>
</g>
<g >
<title>posix.toPosixPath (1,047,450,952 samples, 2.28%)</title><rect x="1037.1" y="469" width="27.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1040.14" y="479.5" >p..</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,378,303 samples, 0.04%)</title><rect x="130.3" y="357" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="133.26" y="367.5" ></text>
</g>
<g >
<title>make_vfsuid (11,395,696 samples, 0.02%)</title><rect x="980.6" y="245" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="983.56" y="255.5" ></text>
</g>
<g >
<title>rb_first (18,554,861 samples, 0.04%)</title><rect x="695.4" y="341" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="698.38" y="351.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (10,979,481 samples, 0.02%)</title><rect x="436.9" y="453" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="439.88" y="463.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (468,060,071 samples, 1.02%)</title><rect x="266.0" y="501" width="12.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="268.99" y="511.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,472,989 samples, 0.03%)</title><rect x="262.1" y="501" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="265.13" y="511.5" ></text>
</g>
<g >
<title>[unknown] (269,420,621 samples, 0.59%)</title><rect x="963.2" y="229" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="966.22" y="239.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (1,454,247,673 samples, 3.17%)</title><rect x="440.6" y="453" width="37.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="443.58" y="463.5" >mem..</text>
</g>
</g>
</svg>
