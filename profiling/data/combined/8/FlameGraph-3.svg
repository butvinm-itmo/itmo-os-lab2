<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>mntput (8,774,085 samples, 0.04%)</title><rect x="850.6" y="229" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="853.59" y="239.5" ></text>
</g>
<g >
<title>lapic_next_deadline (6,395,593 samples, 0.03%)</title><rect x="650.7" y="181" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="653.69" y="191.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (101,202,709 samples, 0.44%)</title><rect x="1024.7" y="165" width="5.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1027.67" y="175.5" ></text>
</g>
<g >
<title>[unknown] (109,909,021 samples, 0.48%)</title><rect x="1010.3" y="101" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1013.29" y="111.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (12,855,955,671 samples, 55.59%)</title><rect x="534.0" y="405" width="656.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="537.00" y="415.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>__fsnotify_parent (14,850,669 samples, 0.06%)</title><rect x="839.3" y="229" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="842.29" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (70,924,658 samples, 0.31%)</title><rect x="914.3" y="277" width="3.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="917.30" y="287.5" ></text>
</g>
<g >
<title>__memset (21,982,399 samples, 0.10%)</title><rect x="784.1" y="181" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="787.11" y="191.5" ></text>
</g>
<g >
<title>rcu_do_batch (15,074,943 samples, 0.07%)</title><rect x="751.8" y="53" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="754.84" y="63.5" ></text>
</g>
<g >
<title>__schedule (14,870,027 samples, 0.06%)</title><rect x="1010.6" y="37" width="0.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1013.61" y="47.5" ></text>
</g>
<g >
<title>do_dentry_open (585,109,448 samples, 2.53%)</title><rect x="994.8" y="165" width="29.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="997.82" y="175.5" >do..</text>
</g>
<g >
<title>__wake_up_common (5,928,929 samples, 0.03%)</title><rect x="183.3" y="245" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="186.29" y="255.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (1,561,654,053 samples, 6.75%)</title><rect x="1108.1" y="341" width="79.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1111.13" y="351.5" >mem.index..</text>
</g>
<g >
<title>kmem_cache_free (15,062,266 samples, 0.07%)</title><rect x="893.4" y="229" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="896.40" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,614,452 samples, 0.03%)</title><rect x="829.9" y="341" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="832.92" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,614,452 samples, 0.03%)</title><rect x="829.9" y="293" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="832.92" y="303.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (10,175,532,143 samples, 44.00%)</title><rect x="14.8" y="437" width="519.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="17.77" y="447.5" >Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn</text>
</g>
<g >
<title>rcu_cblist_dequeue (6,934,026 samples, 0.03%)</title><rect x="681.0" y="117" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="683.97" y="127.5" ></text>
</g>
<g >
<title>[[x_tables]] (14,827,133 samples, 0.06%)</title><rect x="922.5" y="261" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="925.46" y="271.5" ></text>
</g>
<g >
<title>make_vfsuid (6,515,379 samples, 0.03%)</title><rect x="1028.2" y="117" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1031.20" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,395,970 samples, 0.03%)</title><rect x="923.2" y="261" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="926.21" y="271.5" ></text>
</g>
<g >
<title>[[jbd2]] (6,786,711 samples, 0.03%)</title><rect x="1180.1" y="197" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1183.06" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (18,973,822 samples, 0.08%)</title><rect x="602.2" y="357" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="605.22" y="367.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (29,461,428 samples, 0.13%)</title><rect x="1188.5" y="197" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.50" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (34,886,007 samples, 0.15%)</title><rect x="553.4" y="357" width="1.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="556.37" y="367.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (14,870,027 samples, 0.06%)</title><rect x="1010.6" y="53" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1013.61" y="63.5" ></text>
</g>
<g >
<title>dx_probe (21,824,341 samples, 0.09%)</title><rect x="697.5" y="197" width="1.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="700.51" y="207.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (79,500,529 samples, 0.34%)</title><rect x="729.0" y="101" width="4.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="731.95" y="111.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (4,409,277,265 samples, 19.07%)</title><rect x="603.9" y="357" width="225.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="606.94" y="367.5" >fs.Dir.Iterator__struct_8657...</text>
</g>
<g >
<title>mntput_no_expire (12,348,026 samples, 0.05%)</title><rect x="1046.8" y="149" width="0.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1049.77" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (27,678,685 samples, 0.12%)</title><rect x="249.3" y="293" width="1.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="252.34" y="303.5" ></text>
</g>
<g >
<title>locks_remove_posix (14,010,936 samples, 0.06%)</title><rect x="858.5" y="229" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="861.47" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (6,084,993 samples, 0.03%)</title><rect x="534.0" y="389" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="537.00" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,395,593 samples, 0.03%)</title><rect x="650.7" y="213" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="653.69" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,014,981 samples, 0.06%)</title><rect x="626.2" y="293" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="629.22" y="303.5" ></text>
</g>
<g >
<title>security_file_alloc (414,601,832 samples, 1.79%)</title><rect x="946.0" y="133" width="21.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="948.99" y="143.5" ></text>
</g>
<g >
<title>fput (12,999,371 samples, 0.06%)</title><rect x="670.0" y="245" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="673.04" y="255.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (21,854,977 samples, 0.09%)</title><rect x="808.0" y="261" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="810.96" y="271.5" ></text>
</g>
<g >
<title>inode_query_iversion (13,709,388 samples, 0.06%)</title><rect x="780.0" y="213" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="783.05" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="293" width="2.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1190.81" y="303.5" ></text>
</g>
<g >
<title>path_init (114,953,416 samples, 0.50%)</title><rect x="1039.0" y="165" width="5.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1041.98" y="175.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (74,589,776 samples, 0.32%)</title><rect x="1180.7" y="309" width="3.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1183.74" y="319.5" ></text>
</g>
<g >
<title>debug.inValgrind (13,590,457 samples, 0.06%)</title><rect x="1104.8" y="293" width="0.7" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1107.81" y="303.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (1,599,619,085 samples, 6.92%)</title><rect x="1106.2" y="373" width="81.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1109.19" y="383.5" >mem.index..</text>
</g>
<g >
<title>debug.assert (14,511,778 samples, 0.06%)</title><rect x="641.4" y="261" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="644.40" y="271.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="261" width="2.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1190.81" y="271.5" ></text>
</g>
<g >
<title>hook_file_open (69,454,026 samples, 0.30%)</title><rect x="1021.1" y="133" width="3.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1024.13" y="143.5" ></text>
</g>
<g >
<title>__slab_free (28,940,535 samples, 0.13%)</title><rect x="777.1" y="197" width="1.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="780.14" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (7,816,476 samples, 0.03%)</title><rect x="1046.4" y="133" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1049.37" y="143.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (15,074,943 samples, 0.07%)</title><rect x="751.8" y="101" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="754.84" y="111.5" ></text>
</g>
<g >
<title>enqueue_task (13,014,981 samples, 0.06%)</title><rect x="626.2" y="197" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="629.22" y="207.5" ></text>
</g>
<g >
<title>file_ra_state_init (21,969,459 samples, 0.10%)</title><rect x="1001.4" y="149" width="1.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1004.42" y="159.5" ></text>
</g>
<g >
<title>terminate_walk (41,606,671 samples, 0.18%)</title><rect x="1045.3" y="165" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1048.27" y="175.5" ></text>
</g>
<g >
<title>debug.assert (6,776,137 samples, 0.03%)</title><rect x="911.6" y="309" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="914.60" y="319.5" ></text>
</g>
<g >
<title>__fput (304,758,614 samples, 1.32%)</title><rect x="837.2" y="245" width="15.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="840.22" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (14,027,442 samples, 0.06%)</title><rect x="250.0" y="245" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="253.04" y="255.5" ></text>
</g>
<g >
<title>update_process_times (6,457,821 samples, 0.03%)</title><rect x="183.0" y="277" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="185.96" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (6,818,648 samples, 0.03%)</title><rect x="601.9" y="357" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="604.87" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,074,943 samples, 0.07%)</title><rect x="751.8" y="117" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="754.84" y="127.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (9,577,533 samples, 0.04%)</title><rect x="834.5" y="261" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="837.46" y="271.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (9,789,325 samples, 0.04%)</title><rect x="1069.7" y="229" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1072.72" y="239.5" ></text>
</g>
<g >
<title>build_open_flags (58,357,186 samples, 0.25%)</title><rect x="934.9" y="197" width="2.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="937.87" y="207.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (397,427,936 samples, 1.72%)</title><rect x="736.5" y="181" width="20.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="739.49" y="191.5" ></text>
</g>
<g >
<title>generic_permission (6,515,379 samples, 0.03%)</title><rect x="1028.2" y="133" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1031.20" y="143.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (16,325,131 samples, 0.07%)</title><rect x="835.0" y="229" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="837.95" y="239.5" ></text>
</g>
<g >
<title>debug.assert (14,183,426 samples, 0.06%)</title><rect x="552.6" y="325" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="555.64" y="335.5" ></text>
</g>
<g >
<title>posix.openatZ (3,296,749,618 samples, 14.26%)</title><rect x="911.9" y="309" width="168.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="914.94" y="319.5" >posix.openatZ</text>
</g>
<g >
<title>linreg.LinReg(20).fit (290,523,168 samples, 1.26%)</title><rect x="456.8" y="405" width="14.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="459.79" y="415.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (9,577,533 samples, 0.04%)</title><rect x="834.5" y="181" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="837.46" y="191.5" ></text>
</g>
<g >
<title>__getblk_gfp (14,785,715 samples, 0.06%)</title><rect x="697.9" y="133" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="700.87" y="143.5" ></text>
</g>
<g >
<title>down_read_killable (7,125,505 samples, 0.03%)</title><rect x="674.2" y="229" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="677.21" y="239.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (1,574,437,354 samples, 6.81%)</title><rect x="695.0" y="213" width="80.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="698.01" y="223.5" >ext4_htre..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (57,069,678 samples, 0.25%)</title><rect x="865.8" y="341" width="2.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="868.83" y="351.5" ></text>
</g>
<g >
<title>rcu_core (22,949,735 samples, 0.10%)</title><rect x="893.4" y="261" width="1.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="896.40" y="271.5" ></text>
</g>
<g >
<title>rcu_do_batch (6,934,026 samples, 0.03%)</title><rect x="681.0" y="133" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="683.97" y="143.5" ></text>
</g>
<g >
<title>switch_fpu_return (5,847,853 samples, 0.03%)</title><rect x="400.0" y="325" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="402.98" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,884,369 samples, 0.03%)</title><rect x="793.6" y="165" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="796.60" y="175.5" ></text>
</g>
<g >
<title>filemap_get_entry (250,167,598 samples, 1.08%)</title><rect x="712.2" y="85" width="12.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="715.23" y="95.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (6,423,552 samples, 0.03%)</title><rect x="639.6" y="245" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="642.55" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (76,134,644 samples, 0.33%)</title><rect x="861.2" y="293" width="3.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="864.20" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (47,034,411 samples, 0.20%)</title><rect x="1065.6" y="149" width="2.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1068.58" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (5,847,853 samples, 0.03%)</title><rect x="400.0" y="357" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="402.98" y="367.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (21,842,068 samples, 0.09%)</title><rect x="630.5" y="325" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="633.53" y="335.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (17,686,403 samples, 0.08%)</title><rect x="1028.9" y="133" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1031.94" y="143.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (451,336,475 samples, 1.95%)</title><rect x="1082.5" y="325" width="23.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1085.47" y="335.5" >m..</text>
</g>
<g >
<title>rb_first_postorder (14,971,307 samples, 0.06%)</title><rect x="779.3" y="197" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="782.28" y="207.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (13,590,457 samples, 0.06%)</title><rect x="1104.8" y="277" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1107.81" y="287.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (14,785,715 samples, 0.06%)</title><rect x="697.9" y="181" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="700.87" y="191.5" ></text>
</g>
<g >
<title>ext4_getblk (14,785,715 samples, 0.06%)</title><rect x="697.9" y="149" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="700.87" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (36,144,225 samples, 0.16%)</title><rect x="809.1" y="245" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="812.08" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.walk (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="357" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1190.81" y="367.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (38,308,520 samples, 0.17%)</title><rect x="1080.5" y="325" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1083.52" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="325" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1120.85" y="335.5" ></text>
</g>
<g >
<title>enqueue_task_fair (5,928,929 samples, 0.03%)</title><rect x="183.3" y="165" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="186.29" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="277" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1183.41" y="287.5" ></text>
</g>
<g >
<title>__fget_light (37,558,097 samples, 0.16%)</title><rect x="1042.3" y="149" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1045.30" y="159.5" ></text>
</g>
<g >
<title>should_failslab (12,963,495 samples, 0.06%)</title><rect x="786.6" y="181" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="789.62" y="191.5" ></text>
</g>
<g >
<title>timerfd_tmrproc (5,928,929 samples, 0.03%)</title><rect x="183.3" y="309" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="186.29" y="319.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (27,025,214 samples, 0.12%)</title><rect x="785.2" y="181" width="1.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="788.24" y="191.5" ></text>
</g>
<g >
<title>fsnotify (36,805,222 samples, 0.16%)</title><rect x="1004.3" y="133" width="1.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1007.35" y="143.5" ></text>
</g>
<g >
<title>os.linux.mmap (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="165" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.24" y="175.5" ></text>
</g>
<g >
<title>debug.inValgrind (29,603,190 samples, 0.13%)</title><rect x="639.2" y="277" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="642.18" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (123,687,437 samples, 0.53%)</title><rect x="1029.8" y="149" width="6.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1032.84" y="159.5" ></text>
</g>
<g >
<title>inode_permission (27,238,013 samples, 0.12%)</title><rect x="1037.6" y="149" width="1.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1040.59" y="159.5" ></text>
</g>
<g >
<title>posix.toPosixPath (489,644,995 samples, 2.12%)</title><rect x="1080.5" y="341" width="25.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1083.52" y="351.5" >p..</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (58,723,547 samples, 0.25%)</title><rect x="11.8" y="437" width="3.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.77" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (27,678,685 samples, 0.12%)</title><rect x="249.3" y="325" width="1.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="252.34" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (7,152,362 samples, 0.03%)</title><rect x="851.4" y="229" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="854.35" y="239.5" ></text>
</g>
<g >
<title>enqueue_task (5,928,929 samples, 0.03%)</title><rect x="183.3" y="181" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="186.29" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (484,833,489 samples, 2.10%)</title><rect x="869.8" y="341" width="24.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="872.84" y="351.5" >c..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,074,943 samples, 0.07%)</title><rect x="751.8" y="133" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="754.84" y="143.5" ></text>
</g>
<g >
<title>_raw_read_unlock (12,194,845 samples, 0.05%)</title><rect x="735.9" y="101" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="738.87" y="111.5" ></text>
</g>
<g >
<title>[[x_tables]] (205,556,904 samples, 0.89%)</title><rect x="1010.3" y="117" width="10.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1013.29" y="127.5" ></text>
</g>
<g >
<title>mod_objcg_state (29,788,484 samples, 0.13%)</title><rect x="978.2" y="117" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="981.21" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,014,981 samples, 0.06%)</title><rect x="626.2" y="277" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="629.22" y="287.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (1,107,440,413 samples, 4.79%)</title><rect x="400.3" y="389" width="56.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="403.28" y="399.5" >mem.d..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,949,735 samples, 0.10%)</title><rect x="893.4" y="309" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="896.40" y="319.5" ></text>
</g>
<g >
<title>ext4_release_dir (96,672,081 samples, 0.42%)</title><rect x="841.2" y="229" width="4.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="844.18" y="239.5" ></text>
</g>
<g >
<title>is_dx_dir (35,241,980 samples, 0.15%)</title><rect x="780.7" y="213" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="783.75" y="223.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (7,923,747 samples, 0.03%)</title><rect x="642.9" y="261" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="645.85" y="271.5" ></text>
</g>
<g >
<title>mod_objcg_state (15,062,266 samples, 0.07%)</title><rect x="893.4" y="213" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="896.40" y="223.5" ></text>
</g>
<g >
<title>os.linux.openat (3,157,813,619 samples, 13.66%)</title><rect x="917.9" y="293" width="161.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="920.92" y="303.5" >os.linux.openat</text>
</g>
<g >
<title>do_mmap (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="85" width="0.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.24" y="95.5" ></text>
</g>
<g >
<title>ext4_readdir (2,258,632,852 samples, 9.77%)</title><rect x="674.6" y="229" width="115.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="677.57" y="239.5" >ext4_readdir</text>
</g>
<g >
<title>__irq_exit_rcu (13,014,981 samples, 0.06%)</title><rect x="626.2" y="261" width="0.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="629.22" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (6,596,333 samples, 0.03%)</title><rect x="906.5" y="309" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="909.51" y="319.5" ></text>
</g>
<g >
<title>__put_user_8 (30,005,246 samples, 0.13%)</title><rect x="668.5" y="245" width="1.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="671.51" y="255.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (34,710,802 samples, 0.15%)</title><rect x="10.0" y="437" width="1.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>task_tick_fair (7,884,369 samples, 0.03%)</title><rect x="793.6" y="69" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="796.60" y="79.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (98,311,288 samples, 0.43%)</title><rect x="700.5" y="181" width="5.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="703.47" y="191.5" ></text>
</g>
<g >
<title>close_fd_get_file (34,031,309 samples, 0.15%)</title><rect x="853.5" y="245" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="856.53" y="255.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (5,928,929 samples, 0.03%)</title><rect x="183.3" y="229" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="186.29" y="239.5" ></text>
</g>
<g >
<title>update_irq_load_avg (14,027,442 samples, 0.06%)</title><rect x="250.0" y="213" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="253.04" y="223.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (152,894,436 samples, 0.66%)</title><rect x="1070.9" y="261" width="7.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1073.91" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (12,348,026 samples, 0.05%)</title><rect x="1046.8" y="133" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1049.77" y="143.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (45,102,957 samples, 0.20%)</title><rect x="555.1" y="357" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="558.15" y="367.5" ></text>
</g>
<g >
<title>rebalance_domains (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="261" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1120.85" y="271.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (241,177,918 samples, 1.04%)</title><rect x="1008.8" y="133" width="12.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1011.82" y="143.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (62,878,085 samples, 0.27%)</title><rect x="855.3" y="213" width="3.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="858.27" y="223.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (8,522,710 samples, 0.04%)</title><rect x="1079.1" y="293" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1082.05" y="303.5" ></text>
</g>
<g >
<title>__slab_free (9,577,533 samples, 0.04%)</title><rect x="834.5" y="197" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="837.46" y="207.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1183.41" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (7,884,369 samples, 0.03%)</title><rect x="793.6" y="117" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="796.60" y="127.5" ></text>
</g>
<g >
<title>kmalloc_trace (92,726,638 samples, 0.40%)</title><rect x="782.5" y="213" width="4.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="785.55" y="223.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (22,858,952 samples, 0.10%)</title><rect x="933.1" y="181" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="936.09" y="191.5" ></text>
</g>
<g >
<title>fsnotify (15,046,542 samples, 0.07%)</title><rect x="846.1" y="229" width="0.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="849.11" y="239.5" ></text>
</g>
<g >
<title>__srcu_read_lock (21,866,052 samples, 0.09%)</title><rect x="856.6" y="181" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="859.64" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (27,678,685 samples, 0.12%)</title><rect x="249.3" y="277" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="252.34" y="287.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (15,106,010 samples, 0.07%)</title><rect x="1013.9" y="53" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1016.93" y="63.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (97,416,940 samples, 0.42%)</title><rect x="791.7" y="229" width="5.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="794.70" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (2,814,805,425 samples, 12.17%)</title><rect x="664.3" y="261" width="143.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="667.33" y="271.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (7,449,671 samples, 0.03%)</title><rect x="547.9" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="550.89" y="351.5" ></text>
</g>
<g >
<title>do_filp_open (2,146,979,147 samples, 9.28%)</title><rect x="937.8" y="197" width="109.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="940.84" y="207.5" >do_filp_open</text>
</g>
<g >
<title>complete_walk (51,364,563 samples, 0.22%)</title><rect x="992.2" y="165" width="2.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="995.20" y="175.5" ></text>
</g>
<g >
<title>__kmem_cache_free (55,002,740 samples, 0.24%)</title><rect x="841.9" y="197" width="2.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="844.92" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,596,333 samples, 0.03%)</title><rect x="906.5" y="293" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="909.51" y="303.5" ></text>
</g>
<g >
<title>[unknown] (70,924,658 samples, 0.31%)</title><rect x="914.3" y="293" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="917.30" y="303.5" ></text>
</g>
<g >
<title>__fput_sync (14,833,564 samples, 0.06%)</title><rect x="852.8" y="245" width="0.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="855.77" y="255.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (438,556,895 samples, 1.90%)</title><rect x="1083.1" y="309" width="22.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1086.12" y="319.5" >m..</text>
</g>
<g >
<title>bpf_get_current_cgroup_id (21,191,783 samples, 0.09%)</title><rect x="1010.3" y="85" width="1.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1013.29" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (6,596,333 samples, 0.03%)</title><rect x="906.5" y="325" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="909.51" y="335.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (27,457,345 samples, 0.12%)</title><rect x="949.6" y="117" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="952.57" y="127.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (15,074,943 samples, 0.07%)</title><rect x="751.8" y="37" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="754.84" y="47.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (8,662,469,672 samples, 37.46%)</title><rect x="14.8" y="405" width="442.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="17.77" y="415.5" >combined_runner.linreg_task__anon_8510</text>
</g>
<g >
<title>rcu_do_batch (9,577,533 samples, 0.04%)</title><rect x="834.5" y="213" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="837.46" y="223.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (6,841,003 samples, 0.03%)</title><rect x="993.4" y="117" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="996.38" y="127.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (89,234,253 samples, 0.39%)</title><rect x="841.6" y="213" width="4.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="844.56" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,457,821 samples, 0.03%)</title><rect x="183.0" y="293" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="185.96" y="303.5" ></text>
</g>
<g >
<title>xas_descend (49,420,491 samples, 0.21%)</title><rect x="720.1" y="53" width="2.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="723.07" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,457,821 samples, 0.03%)</title><rect x="183.0" y="309" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="185.96" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (70,924,658 samples, 0.31%)</title><rect x="914.3" y="261" width="3.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="917.30" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_free (65,318,121 samples, 0.28%)</title><rect x="846.9" y="229" width="3.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="849.88" y="239.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (34,689,578 samples, 0.15%)</title><rect x="1048.8" y="197" width="1.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1051.85" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,386,750 samples, 0.05%)</title><rect x="183.0" y="325" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="185.96" y="335.5" ></text>
</g>
<g >
<title>lookup_fast (123,687,437 samples, 0.53%)</title><rect x="1029.8" y="165" width="6.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1032.84" y="175.5" ></text>
</g>
<g >
<title>__fdget_raw (29,248,300 samples, 0.13%)</title><rect x="1040.8" y="149" width="1.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1043.81" y="159.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (12,439,800 samples, 0.05%)</title><rect x="859.2" y="261" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="862.19" y="271.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (807,386,390 samples, 3.49%)</title><rect x="492.8" y="405" width="41.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="495.80" y="415.5" >mem..</text>
</g>
<g >
<title>__hrtimer_run_queues (7,884,369 samples, 0.03%)</title><rect x="793.6" y="149" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="796.60" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (9,577,533 samples, 0.04%)</title><rect x="834.5" y="277" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="837.46" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,960,085,380 samples, 12.80%)</title><rect x="661.4" y="293" width="151.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="664.38" y="303.5" >entry_SYSCALL_64_af..</text>
</g>
<g >
<title>array_list.addOrOom (16,451,411 samples, 0.07%)</title><rect x="556.6" y="341" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="559.61" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (156,330,775 samples, 0.68%)</title><rect x="742.3" y="149" width="8.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="745.33" y="159.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="341" width="2.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.81" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (4,333,759,493 samples, 18.74%)</title><rect x="607.8" y="341" width="221.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="610.79" y="351.5" >fs.Dir.Iterator__struct_8657...</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (7,005,655 samples, 0.03%)</title><rect x="810.9" y="245" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="813.92" y="255.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (144,700,636 samples, 0.63%)</title><rect x="768.0" y="149" width="7.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="770.96" y="159.5" ></text>
</g>
<g >
<title>ext4_map_blocks (182,739,427 samples, 0.79%)</title><rect x="727.2" y="133" width="9.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="730.17" y="143.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (62,878,085 samples, 0.27%)</title><rect x="855.3" y="197" width="3.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="858.27" y="207.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (13,358,836 samples, 0.06%)</title><rect x="968.3" y="101" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="971.26" y="111.5" ></text>
</g>
<g >
<title>ttwu_do_activate (5,928,929 samples, 0.03%)</title><rect x="183.3" y="197" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="186.29" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (9,577,533 samples, 0.04%)</title><rect x="834.5" y="245" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="837.46" y="255.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="149" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.24" y="159.5" ></text>
</g>
<g >
<title>call_filldir (268,226,555 samples, 1.16%)</title><rect x="681.3" y="213" width="13.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="684.32" y="223.5" ></text>
</g>
<g >
<title>rcu_core (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="229" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1183.41" y="239.5" ></text>
</g>
<g >
<title>migrate_enable (23,433,267 samples, 0.10%)</title><rect x="1015.9" y="85" width="1.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1018.90" y="95.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,410,274 samples, 0.03%)</title><rect x="993.7" y="133" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="996.73" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (27,703,717 samples, 0.12%)</title><rect x="249.3" y="373" width="1.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="252.34" y="383.5" ></text>
</g>
<g >
<title>errseq_sample (64,003,278 samples, 0.28%)</title><rect x="998.2" y="149" width="3.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1001.15" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (22,692,104 samples, 0.10%)</title><rect x="966.0" y="117" width="1.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="968.99" y="127.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (240,424,106 samples, 1.04%)</title><rect x="894.6" y="341" width="12.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="897.58" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,395,593 samples, 0.03%)</title><rect x="650.7" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="653.69" y="255.5" ></text>
</g>
<g >
<title>fsnotify (35,358,518 samples, 0.15%)</title><rect x="1002.5" y="149" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1005.54" y="159.5" ></text>
</g>
<g >
<title>handle_softirqs (15,074,943 samples, 0.07%)</title><rect x="751.8" y="85" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="754.84" y="95.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (26,364,696 samples, 0.11%)</title><rect x="552.0" y="357" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="555.02" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (7,884,369 samples, 0.03%)</title><rect x="793.6" y="85" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="796.60" y="95.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (6,878,613 samples, 0.03%)</title><rect x="1080.2" y="341" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1083.17" y="351.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (13,590,457 samples, 0.06%)</title><rect x="1104.8" y="245" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1107.81" y="255.5" ></text>
</g>
<g >
<title>security_file_permission (119,807,083 samples, 0.52%)</title><rect x="796.7" y="229" width="6.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="799.67" y="239.5" ></text>
</g>
<g >
<title>try_to_unlazy (35,928,178 samples, 0.16%)</title><rect x="993.0" y="149" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="995.98" y="159.5" ></text>
</g>
<g >
<title>may_open (55,540,524 samples, 0.24%)</title><rect x="1036.1" y="165" width="2.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1039.15" y="175.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (335,585,045 samples, 1.45%)</title><rect x="633.9" y="293" width="17.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="636.89" y="303.5" ></text>
</g>
<g >
<title>mutex_lock (26,205,405 samples, 0.11%)</title><rect x="667.2" y="229" width="1.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="670.17" y="239.5" ></text>
</g>
<g >
<title>mmap_region (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="69" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.24" y="79.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (1,299,460,303 samples, 5.62%)</title><rect x="1118.2" y="325" width="66.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1121.24" y="335.5" >mem.eql..</text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="277" width="2.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.81" y="287.5" ></text>
</g>
<g >
<title>security_inode_permission (25,493,546 samples, 0.11%)</title><rect x="1028.5" y="149" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1031.54" y="159.5" ></text>
</g>
<g >
<title>dnotify_flush (62,878,085 samples, 0.27%)</title><rect x="855.3" y="229" width="3.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="858.27" y="239.5" ></text>
</g>
<g >
<title>search_name.searchName (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="389" width="2.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1190.81" y="399.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (58,530,599 samples, 0.25%)</title><rect x="1011.7" y="69" width="3.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1014.71" y="79.5" ></text>
</g>
<g >
<title>mem.eqlBytes (13,980,825 samples, 0.06%)</title><rect x="619.1" y="325" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="622.14" y="335.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (6,934,026 samples, 0.03%)</title><rect x="681.0" y="181" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="683.97" y="191.5" ></text>
</g>
<g >
<title>__wake_up_common (5,928,929 samples, 0.03%)</title><rect x="183.3" y="293" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="186.29" y="303.5" ></text>
</g>
<g >
<title>__slab_free (19,982,600 samples, 0.09%)</title><rect x="844.7" y="197" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="847.72" y="207.5" ></text>
</g>
<g >
<title>__fdget_pos (63,575,540 samples, 0.27%)</title><rect x="665.3" y="245" width="3.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="668.26" y="255.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (28,159,857 samples, 0.12%)</title><rect x="835.8" y="229" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="838.78" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (7,449,671 samples, 0.03%)</title><rect x="547.9" y="357" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="550.89" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,585,226 samples, 0.03%)</title><rect x="1180.4" y="293" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1183.41" y="303.5" ></text>
</g>
<g >
<title>kfree (7,255,349 samples, 0.03%)</title><rect x="845.7" y="197" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="848.74" y="207.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (607,595,921 samples, 2.63%)</title><rect x="705.5" y="181" width="31.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="708.49" y="191.5" >__..</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (3,128,857,366 samples, 13.53%)</title><rect x="919.4" y="277" width="159.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="922.40" y="287.5" >os.linux.x86_64.sysc..</text>
</g>
<g >
<title>__common_interrupt (14,853,993 samples, 0.06%)</title><rect x="1179.7" y="261" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1182.65" y="271.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (340,206,137 samples, 1.47%)</title><rect x="1050.6" y="197" width="17.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1053.62" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (3,454,403,125 samples, 14.94%)</title><rect x="652.7" y="309" width="176.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="655.67" y="319.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>get_obj_cgroup_from_current (68,774,472 samples, 0.30%)</title><rect x="970.7" y="133" width="3.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="973.69" y="143.5" ></text>
</g>
<g >
<title>__getblk_gfp (410,077,117 samples, 1.77%)</title><rect x="706.2" y="133" width="21.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="709.24" y="143.5" ></text>
</g>
<g >
<title>path_openat (2,096,538,251 samples, 9.07%)</title><rect x="940.4" y="181" width="107.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="943.42" y="191.5" >path_openat</text>
</g>
<g >
<title>do_sys_openat2 (2,729,510,532 samples, 11.80%)</title><rect x="930.4" y="213" width="139.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="933.44" y="223.5" >do_sys_openat2</text>
</g>
<g >
<title>rcu_report_qs_rnp (7,887,469 samples, 0.03%)</title><rect x="894.2" y="245" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="897.17" y="255.5" ></text>
</g>
<g >
<title>lockref_get (43,730,847 samples, 0.19%)</title><rect x="1006.2" y="149" width="2.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1009.22" y="159.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (19,982,600 samples, 0.09%)</title><rect x="844.7" y="181" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="847.72" y="191.5" ></text>
</g>
<g >
<title>mem.eqlBytes (121,073,637 samples, 0.52%)</title><rect x="620.7" y="309" width="6.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="623.71" y="319.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (10,161,872 samples, 0.04%)</title><rect x="651.8" y="325" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="654.77" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (26,364,696 samples, 0.11%)</title><rect x="552.0" y="341" width="1.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="555.02" y="351.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,440,132 samples, 0.05%)</title><rect x="860.6" y="245" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="863.61" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,998,651 samples, 0.05%)</title><rect x="934.3" y="181" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="937.25" y="191.5" ></text>
</g>
<g >
<title>pick_file (27,174,812 samples, 0.12%)</title><rect x="853.9" y="229" width="1.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="856.88" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="149" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1190.81" y="159.5" ></text>
</g>
<g >
<title>ttwu_do_activate (13,014,981 samples, 0.06%)</title><rect x="626.2" y="213" width="0.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="629.22" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,386,750 samples, 0.05%)</title><rect x="183.0" y="357" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="185.96" y="367.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (7,184,692 samples, 0.03%)</title><rect x="642.1" y="277" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="645.14" y="287.5" ></text>
</g>
<g >
<title>alloc_empty_file (973,402,501 samples, 4.21%)</title><rect x="942.5" y="165" width="49.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="945.53" y="175.5" >alloc..</text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (14,870,027 samples, 0.06%)</title><rect x="1010.6" y="69" width="0.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1013.61" y="79.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (13,892,553 samples, 0.06%)</title><rect x="554.4" y="341" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="557.44" y="351.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="309" width="2.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1190.81" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,416,495 samples, 0.05%)</title><rect x="1044.2" y="149" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1047.22" y="159.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (316,165,907 samples, 1.37%)</title><rect x="812.4" y="293" width="16.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="815.43" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,934,026 samples, 0.03%)</title><rect x="681.0" y="197" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="683.97" y="207.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (1,316,311,817 samples, 5.69%)</title><rect x="183.6" y="389" width="67.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="186.59" y="399.5" >linreg...</text>
</g>
<g >
<title>rcu_do_batch (15,062,266 samples, 0.07%)</title><rect x="893.4" y="245" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="896.40" y="255.5" ></text>
</g>
<g >
<title>up_read (50,920,340 samples, 0.22%)</title><rect x="803.9" y="229" width="2.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="806.94" y="239.5" ></text>
</g>
<g >
<title>__call_rcu_common (44,484,988 samples, 0.19%)</title><rect x="835.0" y="245" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="837.95" y="255.5" ></text>
</g>
<g >
<title>kfree (13,137,146 samples, 0.06%)</title><rect x="778.6" y="197" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="781.61" y="207.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (7,923,747 samples, 0.03%)</title><rect x="642.9" y="245" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="645.85" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (21,800,512 samples, 0.09%)</title><rect x="549.7" y="341" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="552.73" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (6,532,762 samples, 0.03%)</title><rect x="541.2" y="373" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="544.25" y="383.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (387,164,495 samples, 1.67%)</title><rect x="632.0" y="309" width="19.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="635.01" y="319.5" ></text>
</g>
<g >
<title>touch_atime (22,647,937 samples, 0.10%)</title><rect x="802.8" y="229" width="1.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="805.78" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (26,917,560 samples, 0.12%)</title><rect x="859.8" y="261" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="862.82" y="271.5" ></text>
</g>
<g >
<title>posix.mmap (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="181" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.24" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (33,291,004 samples, 0.14%)</title><rect x="1019.1" y="101" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1022.08" y="111.5" ></text>
</g>
<g >
<title>__memset (158,370,825 samples, 0.68%)</title><rect x="1056.0" y="165" width="8.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1058.99" y="175.5" ></text>
</g>
<g >
<title>os.linux.close (682,513,520 samples, 2.95%)</title><rect x="830.3" y="325" width="34.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="833.26" y="335.5" >os..</text>
</g>
<g >
<title>legitimize_links (14,922,183 samples, 0.06%)</title><rect x="994.1" y="133" width="0.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="997.06" y="143.5" ></text>
</g>
<g >
<title>ep_poll_callback (5,928,929 samples, 0.03%)</title><rect x="183.3" y="277" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="186.29" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (13,575,067 samples, 0.06%)</title><rect x="1070.2" y="213" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1073.22" y="223.5" ></text>
</g>
<g >
<title>make_vfsuid (7,804,172 samples, 0.03%)</title><rect x="803.5" y="197" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="806.54" y="207.5" ></text>
</g>
<g >
<title>init_file (467,995,503 samples, 2.02%)</title><rect x="943.3" y="149" width="23.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="946.27" y="159.5" >i..</text>
</g>
<g >
<title>rb_next (49,927,872 samples, 0.22%)</title><rect x="787.3" y="213" width="2.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="790.28" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (14,530,487 samples, 0.06%)</title><rect x="906.8" y="341" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="909.84" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="117" width="0.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.24" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,614,452 samples, 0.03%)</title><rect x="829.9" y="325" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="832.92" y="335.5" ></text>
</g>
<g >
<title>atime_needs_update (22,647,937 samples, 0.10%)</title><rect x="802.8" y="213" width="1.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="805.78" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,934,026 samples, 0.03%)</title><rect x="681.0" y="213" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="683.97" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (128,188,372 samples, 0.55%)</title><rect x="534.7" y="373" width="6.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="537.71" y="383.5" ></text>
</g>
<g >
<title>handle_softirqs (22,949,735 samples, 0.10%)</title><rect x="893.4" y="277" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="896.40" y="287.5" ></text>
</g>
<g >
<title>handle_edge_irq (14,853,993 samples, 0.06%)</title><rect x="1179.7" y="245" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.65" y="255.5" ></text>
</g>
<g >
<title>__memcpy (64,646,327 samples, 0.28%)</title><rect x="752.6" y="165" width="3.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="755.61" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,598,856 samples, 0.04%)</title><rect x="834.5" y="293" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="837.46" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (71,751,433 samples, 0.31%)</title><rect x="865.1" y="357" width="3.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="868.08" y="367.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (92,150,154 samples, 0.40%)</title><rect x="775.3" y="213" width="4.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="778.35" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="293" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1120.85" y="303.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (12,855,955,671 samples, 55.59%)</title><rect x="534.0" y="421" width="656.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="537.00" y="431.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>do_syscall_64 (2,848,617,240 samples, 12.32%)</title><rect x="925.6" y="245" width="145.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="928.55" y="255.5" >do_syscall_64</text>
</g>
<g >
<title>search_name.SearchIterator.next (12,807,044,782 samples, 55.38%)</title><rect x="534.3" y="389" width="653.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="537.31" y="399.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>security_file_free (20,617,276 samples, 0.09%)</title><rect x="851.7" y="229" width="1.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="854.72" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (19,423,149 samples, 0.08%)</title><rect x="1068.0" y="197" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1070.98" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (7,449,671 samples, 0.03%)</title><rect x="547.9" y="325" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="550.89" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (108,385,419 samples, 0.47%)</title><rect x="974.2" y="133" width="5.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="977.20" y="143.5" ></text>
</g>
<g >
<title>handle_softirqs (6,934,026 samples, 0.03%)</title><rect x="681.0" y="165" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="683.97" y="175.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (3,338,022,249 samples, 14.43%)</title><rect x="909.8" y="325" width="170.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="912.84" y="335.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>__slab_free (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="197" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1183.41" y="207.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (28,328,720 samples, 0.12%)</title><rect x="640.7" y="277" width="1.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="643.69" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (7,884,369 samples, 0.03%)</title><rect x="793.6" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="796.60" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,395,593 samples, 0.03%)</title><rect x="650.7" y="229" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="653.69" y="239.5" ></text>
</g>
<g >
<title>cache_from_obj (21,424,938 samples, 0.09%)</title><rect x="849.1" y="213" width="1.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="852.12" y="223.5" ></text>
</g>
<g >
<title>ext4_getblk (592,816,544 samples, 2.56%)</title><rect x="706.2" y="149" width="30.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="709.24" y="159.5" >ex..</text>
</g>
<g >
<title>schedule (6,596,333 samples, 0.03%)</title><rect x="906.5" y="277" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="909.51" y="287.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (1,599,619,085 samples, 6.92%)</title><rect x="1106.2" y="357" width="81.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1109.19" y="367.5" >mem.index..</text>
</g>
<g >
<title>alloc_fd (80,162,007 samples, 0.35%)</title><rect x="930.8" y="197" width="4.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="933.77" y="207.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (394,289,225 samples, 1.71%)</title><rect x="631.6" y="325" width="20.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="634.65" y="335.5" ></text>
</g>
<g >
<title>putname (14,668,517 samples, 0.06%)</title><rect x="1069.0" y="197" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1071.97" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (27,678,685 samples, 0.12%)</title><rect x="249.3" y="357" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="252.34" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,386,750 samples, 0.05%)</title><rect x="183.0" y="373" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="185.96" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="309" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1120.85" y="319.5" ></text>
</g>
<g >
<title>_raw_read_lock (28,979,094 samples, 0.13%)</title><rect x="734.4" y="101" width="1.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="737.39" y="111.5" ></text>
</g>
<g >
<title>perf_event_task_tick (6,457,821 samples, 0.03%)</title><rect x="183.0" y="245" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="185.96" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="133" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.24" y="143.5" ></text>
</g>
<g >
<title>update_load_avg (7,884,369 samples, 0.03%)</title><rect x="793.6" y="53" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="796.60" y="63.5" ></text>
</g>
<g >
<title>filldir64 (243,872,858 samples, 1.05%)</title><rect x="682.6" y="197" width="12.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="685.56" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (278,540,911 samples, 1.20%)</title><rect x="967.2" y="149" width="14.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="970.15" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (27,678,685 samples, 0.12%)</title><rect x="249.3" y="309" width="1.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="252.34" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (13,575,067 samples, 0.06%)</title><rect x="1070.2" y="229" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1073.22" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (23,019,381 samples, 0.10%)</title><rect x="550.8" y="357" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="553.85" y="367.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (65,207,287 samples, 0.28%)</title><rect x="1011.4" y="85" width="3.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1014.37" y="95.5" ></text>
</g>
<g >
<title>___slab_alloc (27,584,226 samples, 0.12%)</title><rect x="967.5" y="133" width="1.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="970.54" y="143.5" ></text>
</g>
<g >
<title>__fget_light (29,840,814 samples, 0.13%)</title><rect x="665.6" y="229" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="668.65" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,949,735 samples, 0.10%)</title><rect x="893.4" y="325" width="1.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="896.40" y="335.5" ></text>
</g>
<g >
<title>update_process_times (14,027,442 samples, 0.06%)</title><rect x="250.0" y="261" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="253.04" y="271.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (33,692,224 samples, 0.15%)</title><rect x="972.5" y="117" width="1.7" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="975.48" y="127.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (4,639,850,090 samples, 20.06%)</title><rect x="868.7" y="357" width="236.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="871.74" y="367.5" >fs.Dir.openDir</text>
</g>
<g >
<title>__check_block_validity.constprop.0 (79,500,529 samples, 0.34%)</title><rect x="729.0" y="117" width="4.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="731.95" y="127.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (6,789,276 samples, 0.03%)</title><rect x="642.5" y="261" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="645.51" y="271.5" ></text>
</g>
<g >
<title>common_interrupt (14,853,993 samples, 0.06%)</title><rect x="1179.7" y="277" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1182.65" y="287.5" ></text>
</g>
<g >
<title>vma_prepare (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="37" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1192.24" y="47.5" ></text>
</g>
<g >
<title>dput (16,748,172 samples, 0.07%)</title><rect x="1045.9" y="149" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1048.91" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (43,149,880 samples, 0.19%)</title><rect x="809.1" y="261" width="2.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="812.08" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (6,786,711 samples, 0.03%)</title><rect x="1180.1" y="213" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1183.06" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2,760,159,586 samples, 11.94%)</title><rect x="928.9" y="229" width="140.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="931.87" y="239.5" >__x64_sys_openat</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (14,734,472 samples, 0.06%)</title><rect x="777.9" y="181" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="780.86" y="191.5" ></text>
</g>
<g >
<title>locks_remove_file (7,370,905 samples, 0.03%)</title><rect x="850.2" y="229" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="853.21" y="239.5" ></text>
</g>
<g >
<title>clockevents_program_event (6,395,593 samples, 0.03%)</title><rect x="650.7" y="197" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="653.69" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (60,843,729 samples, 0.26%)</title><rect x="604.7" y="341" width="3.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="607.69" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,614,452 samples, 0.03%)</title><rect x="829.9" y="261" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="832.92" y="271.5" ></text>
</g>
<g >
<title>rcu_core (6,934,026 samples, 0.03%)</title><rect x="681.0" y="149" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="683.97" y="159.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (10,175,532,143 samples, 44.00%)</title><rect x="14.8" y="421" width="519.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="17.77" y="431.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>hrtimer_interrupt (12,386,750 samples, 0.05%)</title><rect x="183.0" y="341" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="185.96" y="351.5" ></text>
</g>
<g >
<title>__filemap_get_folio (250,167,598 samples, 1.08%)</title><rect x="712.2" y="101" width="12.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="715.23" y="111.5" ></text>
</g>
<g >
<title>vma_expand (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="53" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1192.24" y="63.5" ></text>
</g>
<g >
<title>__mutex_init (24,173,117 samples, 0.10%)</title><rect x="944.8" y="133" width="1.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="947.76" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (92,726,638 samples, 0.40%)</title><rect x="782.5" y="197" width="4.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="785.55" y="207.5" ></text>
</g>
<g >
<title>load_balance (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="245" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1120.85" y="255.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (36,805,222 samples, 0.16%)</title><rect x="1004.3" y="149" width="1.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1007.35" y="159.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (5,847,853 samples, 0.03%)</title><rect x="400.0" y="373" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="402.98" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (6,836,395 samples, 0.03%)</title><rect x="551.7" y="341" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="554.67" y="351.5" ></text>
</g>
<g >
<title>dput (22,297,349 samples, 0.10%)</title><rect x="840.0" y="229" width="1.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="843.04" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,847,853 samples, 0.03%)</title><rect x="400.0" y="341" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="402.98" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (11,064,855,675 samples, 47.85%)</title><rect x="541.6" y="373" width="564.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="544.58" y="383.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__brelse (14,811,371 samples, 0.06%)</title><rect x="699.7" y="181" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="702.72" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="245" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1183.41" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (50,593,757 samples, 0.22%)</title><rect x="548.3" y="357" width="2.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="551.27" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,206,742 samples, 0.03%)</title><rect x="851.0" y="213" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="854.04" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (6,759,350 samples, 0.03%)</title><rect x="1078.7" y="261" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1081.71" y="271.5" ></text>
</g>
<g >
<title>[unknown] (93,434,349 samples, 0.40%)</title><rect x="10.0" y="453" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>security_file_open (317,850,679 samples, 1.37%)</title><rect x="1008.5" y="149" width="16.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1011.45" y="159.5" ></text>
</g>
<g >
<title>ext4_bread (14,785,715 samples, 0.06%)</title><rect x="697.9" y="165" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="700.87" y="175.5" ></text>
</g>
<g >
<title>iterate_dir (2,661,923,360 samples, 11.51%)</title><rect x="670.7" y="245" width="135.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="673.70" y="255.5" >iterate_dir</text>
</g>
<g >
<title>c.clone (23,031,487,814 samples, 99.60%)</title><rect x="14.8" y="453" width="1175.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="17.77" y="463.5" >c.clone</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (514,354,856 samples, 2.22%)</title><rect x="835.0" y="293" width="26.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="837.95" y="303.5" >e..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (36,871,091 samples, 0.16%)</title><rect x="632.0" y="293" width="1.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="635.01" y="303.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (342,196,331 samples, 1.48%)</title><rect x="757.9" y="165" width="17.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="760.88" y="175.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (1,503,589,388 samples, 6.50%)</title><rect x="698.6" y="197" width="76.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="701.62" y="207.5" >htree_di..</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (12,855,955,671 samples, 55.59%)</title><rect x="534.0" y="437" width="656.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="537.00" y="447.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>inode_permission (21,284,522 samples, 0.09%)</title><rect x="1027.5" y="149" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1030.45" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,949,735 samples, 0.10%)</title><rect x="893.4" y="293" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="896.40" y="303.5" ></text>
</g>
<g >
<title>handle_softirqs (7,790,952 samples, 0.03%)</title><rect x="1117.8" y="277" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1120.85" y="287.5" ></text>
</g>
<g >
<title>filp_flush (76,889,021 samples, 0.33%)</title><rect x="855.3" y="245" width="3.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="858.27" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="165" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1190.81" y="175.5" ></text>
</g>
<g >
<title>restore_fpregs_from_fpstate (5,847,853 samples, 0.03%)</title><rect x="400.0" y="309" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="402.98" y="319.5" ></text>
</g>
<g >
<title>generic_permission (20,857,232 samples, 0.09%)</title><rect x="1037.9" y="133" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1040.92" y="143.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (93,028,163 samples, 0.40%)</title><rect x="798.0" y="213" width="4.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="801.03" y="223.5" ></text>
</g>
<g >
<title>posix.close (682,513,520 samples, 2.95%)</title><rect x="830.3" y="341" width="34.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="833.26" y="351.5" >po..</text>
</g>
<g >
<title>__wake_up_common_lock (5,928,929 samples, 0.03%)</title><rect x="183.3" y="261" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="186.29" y="271.5" ></text>
</g>
<g >
<title>__find_get_block (410,077,117 samples, 1.77%)</title><rect x="706.2" y="117" width="21.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="709.24" y="127.5" ></text>
</g>
<g >
<title>update_process_times (7,884,369 samples, 0.03%)</title><rect x="793.6" y="101" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="796.60" y="111.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (13,246,699 samples, 0.06%)</title><rect x="1079.5" y="293" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1082.49" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,928,929 samples, 0.03%)</title><rect x="183.3" y="213" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="186.29" y="223.5" ></text>
</g>
<g >
<title>inode_to_bdi (14,713,975 samples, 0.06%)</title><rect x="1001.8" y="133" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1004.79" y="143.5" ></text>
</g>
<g >
<title>rcu_do_batch (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="213" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1183.41" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (42,639,339 samples, 0.18%)</title><rect x="725.0" y="101" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="727.99" y="111.5" ></text>
</g>
<g >
<title>exc_page_fault (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="197" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.81" y="207.5" ></text>
</g>
<g >
<title>__legitimize_path (14,595,721 samples, 0.06%)</title><rect x="993.0" y="133" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="995.98" y="143.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (13,590,457 samples, 0.06%)</title><rect x="1104.8" y="261" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1107.81" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,395,593 samples, 0.03%)</title><rect x="650.7" y="261" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="653.69" y="271.5" ></text>
</g>
<g >
<title>ext4_bread (592,816,544 samples, 2.56%)</title><rect x="706.2" y="165" width="30.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="709.24" y="175.5" >ex..</text>
</g>
<g >
<title>psi_task_change (13,014,981 samples, 0.06%)</title><rect x="626.2" y="181" width="0.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="629.22" y="191.5" ></text>
</g>
<g >
<title>posix.close (13,500,642 samples, 0.06%)</title><rect x="1105.5" y="357" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1108.50" y="367.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (14,713,023 samples, 0.06%)</title><rect x="642.5" y="277" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="645.51" y="287.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (15,983,082 samples, 0.07%)</title><rect x="639.9" y="245" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="642.88" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,884,369 samples, 0.03%)</title><rect x="793.6" y="181" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="796.60" y="191.5" ></text>
</g>
<g >
<title>all (23,124,922,163 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,930,293,271 samples, 12.67%)</title><rect x="662.9" y="277" width="149.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="665.90" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>update_rq_clock (14,027,442 samples, 0.06%)</title><rect x="250.0" y="229" width="0.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="253.04" y="239.5" ></text>
</g>
<g >
<title>step_into (8,333,841 samples, 0.04%)</title><rect x="1044.8" y="165" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1047.85" y="175.5" ></text>
</g>
<g >
<title>try_to_wake_up (13,014,981 samples, 0.06%)</title><rect x="626.2" y="229" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="629.22" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.close (708,407,657 samples, 3.06%)</title><rect x="828.9" y="357" width="36.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="831.93" y="367.5" >fs...</text>
</g>
<g >
<title>valgrind.runningOnValgrind (22,406,634 samples, 0.10%)</title><rect x="639.6" y="261" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="642.55" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (7,314,336 samples, 0.03%)</title><rect x="828.6" y="293" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="831.56" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (6,856,497 samples, 0.03%)</title><rect x="853.5" y="229" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="856.53" y="239.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (6,457,821 samples, 0.03%)</title><rect x="183.0" y="229" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="185.96" y="239.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (23,509,951 samples, 0.10%)</title><rect x="1014.7" y="85" width="1.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1017.70" y="95.5" ></text>
</g>
<g >
<title>debug.assert (14,769,859 samples, 0.06%)</title><rect x="603.2" y="357" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="606.19" y="367.5" ></text>
</g>
<g >
<title>[unknown] (6,883,305 samples, 0.03%)</title><rect x="1020.8" y="117" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1023.78" y="127.5" ></text>
</g>
<g >
<title>scheduler_tick (6,457,821 samples, 0.03%)</title><rect x="183.0" y="261" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="185.96" y="271.5" ></text>
</g>
<g >
<title>handle_softirqs (13,014,981 samples, 0.06%)</title><rect x="626.2" y="245" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="629.22" y="255.5" ></text>
</g>
<g >
<title>fsnotify (52,187,011 samples, 0.23%)</title><rect x="794.0" y="213" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="797.00" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,614,452 samples, 0.03%)</title><rect x="829.9" y="309" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="832.92" y="319.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (68,300,971 samples, 0.30%)</title><rect x="733.0" y="117" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="736.01" y="127.5" ></text>
</g>
<g >
<title>irq_work_tick (6,614,452 samples, 0.03%)</title><rect x="829.9" y="213" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="832.92" y="223.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (14,823,773 samples, 0.06%)</title><rect x="1189.2" y="101" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.24" y="111.5" ></text>
</g>
<g >
<title>rcu_core (15,074,943 samples, 0.07%)</title><rect x="751.8" y="69" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="754.84" y="79.5" ></text>
</g>
<g >
<title>tick_sched_handle (6,614,452 samples, 0.03%)</title><rect x="829.9" y="245" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="832.92" y="255.5" ></text>
</g>
<g >
<title>asm_common_interrupt (14,853,993 samples, 0.06%)</title><rect x="1179.7" y="293" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1182.65" y="303.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (294,469,047 samples, 1.27%)</title><rect x="951.0" y="117" width="15.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="953.97" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (514,354,856 samples, 2.22%)</title><rect x="835.0" y="277" width="26.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="837.95" y="287.5" >d..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,420,387 samples, 0.05%)</title><rect x="183.0" y="389" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="185.96" y="399.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="325" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1190.81" y="335.5" ></text>
</g>
<g >
<title>do_user_addr_fault (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="181" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1190.81" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (90,520,711 samples, 0.39%)</title><rect x="656.8" y="293" width="4.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="659.76" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (6,836,395 samples, 0.03%)</title><rect x="551.7" y="325" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="554.67" y="335.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="373" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.81" y="383.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="213" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1190.81" y="223.5" ></text>
</g>
<g >
<title>xas_start (47,010,963 samples, 0.20%)</title><rect x="722.6" y="53" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="725.59" y="63.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (5,928,929 samples, 0.03%)</title><rect x="183.3" y="133" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="186.29" y="143.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (16,945,971 samples, 0.07%)</title><rect x="979.7" y="133" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="982.73" y="143.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (23,433,267 samples, 0.10%)</title><rect x="1015.9" y="101" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1018.90" y="111.5" ></text>
</g>
<g >
<title>mutex_unlock (27,968,734 samples, 0.12%)</title><rect x="806.5" y="245" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="809.53" y="255.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (212,296,677 samples, 0.92%)</title><rect x="981.4" y="149" width="10.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="984.36" y="159.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (63,964,659 samples, 0.28%)</title><rect x="1184.6" y="325" width="3.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1187.55" y="335.5" ></text>
</g>
<g >
<title>__memset (47,870,555 samples, 0.21%)</title><rect x="745.2" y="133" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="748.20" y="143.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (13,358,836 samples, 0.06%)</title><rect x="968.3" y="117" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="971.26" y="127.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (152,036,107 samples, 0.66%)</title><rect x="643.3" y="277" width="7.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="646.26" y="287.5" ></text>
</g>
<g >
<title>__legitimize_mnt (7,754,718 samples, 0.03%)</title><rect x="993.0" y="117" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="995.98" y="127.5" ></text>
</g>
<g >
<title>__kmalloc (237,513,663 samples, 1.03%)</title><rect x="740.5" y="165" width="12.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="743.49" y="175.5" ></text>
</g>
<g >
<title>combined_runner (23,124,922,163 samples, 100.00%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >combined_runner</text>
</g>
<g >
<title>entry_SYSCALL_64 (58,723,547 samples, 0.25%)</title><rect x="11.8" y="421" width="3.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="14.77" y="431.5" ></text>
</g>
<g >
<title>__schedule (6,596,333 samples, 0.03%)</title><rect x="906.5" y="261" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="909.51" y="271.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (415,152,913 samples, 1.80%)</title><rect x="471.6" y="405" width="21.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="474.61" y="415.5" ></text>
</g>
<g >
<title>mntput_no_expire (6,206,742 samples, 0.03%)</title><rect x="851.0" y="229" width="0.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="854.04" y="239.5" ></text>
</g>
<g >
<title>xas_load (177,961,096 samples, 0.77%)</title><rect x="715.9" y="69" width="9.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="718.91" y="79.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (14,067,754 samples, 0.06%)</title><rect x="857.8" y="181" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="860.76" y="191.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (209,226,331 samples, 0.90%)</title><rect x="619.9" y="325" width="10.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="622.86" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,884,369 samples, 0.03%)</title><rect x="793.6" y="197" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="796.60" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (27,678,685 samples, 0.12%)</title><rect x="249.3" y="341" width="1.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="252.34" y="351.5" ></text>
</g>
<g >
<title>__f_unlock_pos (10,987,091 samples, 0.05%)</title><rect x="664.7" y="245" width="0.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="667.70" y="255.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (29,461,428 samples, 0.13%)</title><rect x="1188.5" y="213" width="1.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1191.50" y="223.5" ></text>
</g>
<g >
<title>rcu_core (9,577,533 samples, 0.04%)</title><rect x="834.5" y="229" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="837.46" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (639,098,950 samples, 2.76%)</title><rect x="832.5" y="309" width="32.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="835.47" y="319.5" >os..</text>
</g>
<g >
<title>os.linux.getdents64 (3,461,873,756 samples, 14.97%)</title><rect x="652.3" y="325" width="176.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="655.28" y="335.5" >os.linux.getdents64</text>
</g>
<g >
<title>__irq_exit_rcu (6,560,389 samples, 0.03%)</title><rect x="1180.4" y="261" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1183.41" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,884,369 samples, 0.03%)</title><rect x="793.6" y="213" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="796.60" y="223.5" ></text>
</g>
<g >
<title>update_process_times (6,614,452 samples, 0.03%)</title><rect x="829.9" y="229" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="832.92" y="239.5" ></text>
</g>
<g >
<title>mem.eqlBytes (1,155,030,509 samples, 4.99%)</title><rect x="1121.8" y="309" width="58.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1124.81" y="319.5" >mem.eq..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (52,329,535 samples, 0.23%)</title><rect x="747.6" y="133" width="2.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="750.64" y="143.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (71,400,759 samples, 0.31%)</title><rect x="626.9" y="309" width="3.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="629.89" y="319.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (8,726,379 samples, 0.04%)</title><rect x="640.2" y="229" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="643.25" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (6,786,711 samples, 0.03%)</title><rect x="1180.1" y="229" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1183.06" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,887,029,265 samples, 12.48%)</title><rect x="923.6" y="261" width="147.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="926.59" y="271.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>kmem_cache_alloc (218,631,211 samples, 0.95%)</title><rect x="1052.9" y="181" width="11.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1055.91" y="191.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (363,962,398 samples, 1.57%)</title><rect x="756.8" y="181" width="18.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="759.77" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (5,928,929 samples, 0.03%)</title><rect x="183.3" y="149" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="186.29" y="159.5" ></text>
</g>
<g >
<title>fd_install (28,394,696 samples, 0.12%)</title><rect x="1047.4" y="197" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1050.40" y="207.5" ></text>
</g>
<g >
<title>psi_flags_change (13,014,981 samples, 0.06%)</title><rect x="626.2" y="165" width="0.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="629.22" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (13,364,468 samples, 0.06%)</title><rect x="1187.8" y="229" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1190.81" y="239.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (2,930,231,637 samples, 12.67%)</title><rect x="250.8" y="389" width="149.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="253.76" y="399.5" >linreg.LinReg(20).p..</text>
</g>
<g >
<title>valgrind.runningOnValgrind (14,708,359 samples, 0.06%)</title><rect x="651.0" y="293" width="0.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="654.02" y="303.5" ></text>
</g>
<g >
<title>__check_object_size (47,034,411 samples, 0.20%)</title><rect x="1065.6" y="165" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1068.58" y="175.5" ></text>
</g>
<g >
<title>verify_dirent_name (14,851,604 samples, 0.06%)</title><rect x="694.2" y="181" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="697.25" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (3,382,129,348 samples, 14.63%)</title><rect x="907.6" y="341" width="172.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="910.58" y="351.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>__find_get_block (14,785,715 samples, 0.06%)</title><rect x="697.9" y="117" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="700.87" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (34,710,802 samples, 0.15%)</title><rect x="10.0" y="421" width="1.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>debug.assert (14,044,790 samples, 0.06%)</title><rect x="638.5" y="277" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="641.47" y="287.5" ></text>
</g>
<g >
<title>strncpy_from_user (76,603,314 samples, 0.33%)</title><rect x="1064.1" y="181" width="3.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1067.07" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (870,562,130 samples, 3.76%)</title><rect x="557.4" y="357" width="44.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="560.45" y="367.5" >comp..</text>
</g>
<g >
<title>x64_sys_call (22,535,777 samples, 0.10%)</title><rect x="811.3" y="261" width="1.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="814.28" y="271.5" ></text>
</g>
<g >
<title>rb_insert_color (17,026,513 samples, 0.07%)</title><rect x="755.9" y="165" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="758.90" y="175.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (38,923,612 samples, 0.17%)</title><rect x="1017.1" y="101" width="2.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1020.09" y="111.5" ></text>
</g>
<g >
<title>lockref_put_return (15,391,634 samples, 0.07%)</title><rect x="840.4" y="213" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="843.40" y="223.5" ></text>
</g>
<g >
<title>kmalloc_slab (44,990,848 samples, 0.19%)</title><rect x="750.3" y="149" width="2.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="753.31" y="159.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (29,461,428 samples, 0.13%)</title><rect x="1188.5" y="229" width="1.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1191.50" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_close (474,997,496 samples, 2.05%)</title><rect x="835.0" y="261" width="24.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="837.95" y="271.5" >_..</text>
</g>
<g >
<title>__memset (34,232,182 samples, 0.15%)</title><rect x="968.9" y="133" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="971.94" y="143.5" ></text>
</g>
<g >
<title>should_failslab (15,049,623 samples, 0.07%)</title><rect x="980.6" y="133" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="983.60" y="143.5" ></text>
</g>
<g >
<title>fsnotify (36,657,563 samples, 0.16%)</title><rect x="789.8" y="229" width="1.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="792.82" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,614,452 samples, 0.03%)</title><rect x="829.9" y="277" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="832.92" y="287.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (42,825,896 samples, 0.19%)</title><rect x="1187.8" y="245" width="2.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.81" y="255.5" ></text>
</g>
</g>
</svg>
