<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>__ext4fs_dirhash (706,303,905 samples, 1.67%)</title><rect x="635.3" y="229" width="19.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="638.30" y="239.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (19,741,229 samples, 0.05%)</title><rect x="144.5" y="293" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="147.50" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="309" width="0.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1183.27" y="319.5" ></text>
</g>
<g >
<title>xas_load (313,709,936 samples, 0.74%)</title><rect x="574.6" y="133" width="8.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="577.58" y="143.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (599,384,828 samples, 1.42%)</title><rect x="463.2" y="341" width="16.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="466.17" y="351.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,704,160,928 samples, 8.75%)</title><rect x="1074.6" y="389" width="103.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1077.65" y="399.5" >mem.eql__ano..</text>
</g>
<g >
<title>_raw_spin_unlock (16,350,588 samples, 0.04%)</title><rect x="878.9" y="245" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="881.86" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,505,925 samples, 0.03%)</title><rect x="917.0" y="165" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="919.99" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="229" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1183.27" y="239.5" ></text>
</g>
<g >
<title>filp_flush (378,815,909 samples, 0.90%)</title><rect x="763.4" y="309" width="10.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="766.41" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,891,542 samples, 0.04%)</title><rect x="274.0" y="421" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="276.97" y="431.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (36,339,731 samples, 0.09%)</title><rect x="1050.6" y="325" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1053.62" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (41,709,596 samples, 0.10%)</title><rect x="423.0" y="389" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="425.95" y="399.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (15,186,500 samples, 0.04%)</title><rect x="904.7" y="165" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="907.75" y="175.5" ></text>
</g>
<g >
<title>do_mmap (10,465,173 samples, 0.02%)</title><rect x="355.1" y="181" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="358.06" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (152,292,516 samples, 0.36%)</title><rect x="10.5" y="501" width="4.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.49" y="511.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (15,994,932 samples, 0.04%)</title><rect x="178.5" y="341" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="181.54" y="351.5" ></text>
</g>
<g >
<title>filemap_get_entry (1,040,632,919 samples, 2.46%)</title><rect x="554.3" y="149" width="29.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="557.31" y="159.5" >fi..</text>
</g>
<g >
<title>do_syscall_64 (1,959,252,798 samples, 4.63%)</title><rect x="720.4" y="341" width="54.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="723.43" y="351.5" >do_sy..</text>
</g>
<g >
<title>update_process_times (17,671,674 samples, 0.04%)</title><rect x="658.9" y="133" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="661.90" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (19,741,229 samples, 0.05%)</title><rect x="144.5" y="421" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="147.50" y="431.5" ></text>
</g>
<g >
<title>perf_event_task_tick (17,671,674 samples, 0.04%)</title><rect x="658.9" y="101" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="661.90" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,891,542 samples, 0.04%)</title><rect x="274.0" y="357" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="276.97" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (53,564,509 samples, 0.13%)</title><rect x="981.9" y="197" width="1.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="984.86" y="207.5" ></text>
</g>
<g >
<title>vma_alloc_folio (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="181" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1183.27" y="191.5" ></text>
</g>
<g >
<title>os.linux.munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="389" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1192.86" y="399.5" ></text>
</g>
<g >
<title>path_openat (3,856,852,881 samples, 9.11%)</title><rect x="885.0" y="245" width="107.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="887.97" y="255.5" >path_openat</text>
</g>
<g >
<title>rcu_segcblist_enqueue (291,582,553 samples, 0.69%)</title><rect x="724.5" y="293" width="8.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="727.50" y="303.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (647,601,886 samples, 1.53%)</title><rect x="996.4" y="261" width="18.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="999.41" y="271.5" ></text>
</g>
<g >
<title>debug.assert (11,535,920 samples, 0.03%)</title><rect x="461.2" y="325" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="464.15" y="335.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (87,317,667 samples, 0.21%)</title><rect x="346.8" y="405" width="2.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="349.83" y="415.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (10,465,173 samples, 0.02%)</title><rect x="355.1" y="309" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="358.06" y="319.5" ></text>
</g>
<g >
<title>combined_runner.main (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="453" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.86" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,706,099 samples, 0.04%)</title><rect x="774.5" y="309" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="777.55" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (19,741,229 samples, 0.05%)</title><rect x="144.5" y="373" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="147.50" y="383.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9249 (11,081,577 samples, 0.03%)</title><rect x="462.9" y="277" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="465.86" y="287.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (211,739,936 samples, 0.50%)</title><rect x="765.9" y="261" width="5.9" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="768.91" y="271.5" ></text>
</g>
<g >
<title>kfree (83,945,321 samples, 0.20%)</title><rect x="746.7" y="261" width="2.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="749.75" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="357" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1183.27" y="367.5" ></text>
</g>
<g >
<title>__fput (971,192,657 samples, 2.30%)</title><rect x="732.6" y="309" width="27.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="735.63" y="319.5" >_..</text>
</g>
<g >
<title>tick_sched_handle (17,671,674 samples, 0.04%)</title><rect x="658.9" y="149" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="661.90" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,374,545 samples, 0.02%)</title><rect x="403.2" y="389" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="406.16" y="399.5" ></text>
</g>
<g >
<title>__slab_free (38,180,803 samples, 0.09%)</title><rect x="745.7" y="261" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="748.68" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="149" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1007.21" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (109,901,877 samples, 0.26%)</title><rect x="583.7" y="165" width="3.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="586.65" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (205,426,929 samples, 0.49%)</title><rect x="691.3" y="309" width="5.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="694.33" y="319.5" ></text>
</g>
<g >
<title>migrate_enable (18,338,370 samples, 0.04%)</title><rect x="950.8" y="149" width="0.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="953.81" y="159.5" ></text>
</g>
<g >
<title>mntput_no_expire (58,744,939 samples, 0.14%)</title><rect x="990.9" y="213" width="1.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="993.88" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="341" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.86" y="351.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="293" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1183.72" y="303.5" ></text>
</g>
<g >
<title>__memset (48,550,680 samples, 0.11%)</title><rect x="905.7" y="197" width="1.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="908.70" y="207.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (266,185,642 samples, 0.63%)</title><rect x="655.0" y="277" width="7.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="657.99" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (58,721,925 samples, 0.14%)</title><rect x="1018.7" y="277" width="1.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1021.68" y="287.5" ></text>
</g>
<g >
<title>is_dx_dir (132,224,263 samples, 0.31%)</title><rect x="664.2" y="277" width="3.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="667.17" y="287.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (155,033,776 samples, 0.37%)</title><rect x="588.6" y="165" width="4.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="591.63" y="175.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (509,706,420 samples, 1.20%)</title><rect x="1038.1" y="389" width="14.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1041.13" y="399.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (36,059,659 samples, 0.09%)</title><rect x="950.3" y="165" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="953.31" y="175.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (7,635,145,279 samples, 18.04%)</title><rect x="19.1" y="469" width="212.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="22.12" y="479.5" >combined_runner.linreg_task_..</text>
</g>
<g >
<title>do_syscall_64 (5,400,895,590 samples, 12.76%)</title><rect x="870.5" y="309" width="150.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="873.50" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,959,252,798 samples, 4.63%)</title><rect x="720.4" y="357" width="54.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="723.43" y="367.5" >entry..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (10,392,968 samples, 0.02%)</title><rect x="18.8" y="485" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="21.83" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1183.27" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (30,443,092 samples, 0.07%)</title><rect x="316.8" y="437" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="319.82" y="447.5" ></text>
</g>
<g >
<title>up_read (35,542,682 samples, 0.08%)</title><rect x="685.9" y="293" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="688.95" y="303.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (49,655,365 samples, 0.12%)</title><rect x="461.5" y="341" width="1.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="464.48" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (12,601,194 samples, 0.03%)</title><rect x="352.1" y="405" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="355.11" y="415.5" ></text>
</g>
<g >
<title>__slab_free (166,138,552 samples, 0.39%)</title><rect x="655.7" y="261" width="4.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="658.69" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (22,103,157 samples, 0.05%)</title><rect x="622.8" y="149" width="0.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="625.76" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (146,835,091 samples, 0.35%)</title><rect x="14.7" y="485" width="4.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="17.74" y="495.5" ></text>
</g>
<g >
<title>inode_permission (73,644,945 samples, 0.17%)</title><rect x="973.3" y="213" width="2.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="976.35" y="223.5" ></text>
</g>
<g >
<title>__memset (129,202,709 samples, 0.31%)</title><rect x="1000.6" y="229" width="3.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1003.61" y="239.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (169,253,163 samples, 0.40%)</title><rect x="907.1" y="197" width="4.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="910.05" y="207.5" ></text>
</g>
<g >
<title>hook_file_open (23,585,550 samples, 0.06%)</title><rect x="952.5" y="197" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="955.50" y="207.5" ></text>
</g>
<g >
<title>rcu_core (15,994,932 samples, 0.04%)</title><rect x="178.5" y="373" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="181.54" y="383.5" ></text>
</g>
<g >
<title>__getblk_gfp (18,134,554 samples, 0.04%)</title><rect x="523.5" y="197" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="526.47" y="207.5" ></text>
</g>
<g >
<title>update_process_times (22,103,157 samples, 0.05%)</title><rect x="622.8" y="85" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="625.76" y="95.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,896,991 samples, 0.03%)</title><rect x="316.5" y="357" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="319.52" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (52,126,686 samples, 0.12%)</title><rect x="334.8" y="405" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="337.85" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,666,118 samples, 0.04%)</title><rect x="851.6" y="309" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="854.65" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (233,736,562 samples, 0.55%)</title><rect x="1008.0" y="229" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1010.96" y="239.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (288,342,760 samples, 0.68%)</title><rect x="434.5" y="373" width="8.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="437.51" y="383.5" ></text>
</g>
<g >
<title>amd_clear_divider (23,497,774 samples, 0.06%)</title><rect x="690.7" y="309" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="693.68" y="319.5" ></text>
</g>
<g >
<title>security_file_alloc (302,355,566 samples, 0.71%)</title><rect x="891.6" y="197" width="8.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="894.55" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (25,454,867 samples, 0.06%)</title><rect x="354.6" y="405" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="357.65" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,666,118 samples, 0.04%)</title><rect x="851.6" y="357" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="854.65" y="367.5" ></text>
</g>
<g >
<title>sync_regs (13,859,103 samples, 0.03%)</title><rect x="299.3" y="437" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="302.30" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="405" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1183.27" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="133" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1183.27" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,671,674 samples, 0.04%)</title><rect x="658.9" y="165" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="661.90" y="175.5" ></text>
</g>
<g >
<title>do_filp_open (3,996,824,604 samples, 9.45%)</title><rect x="881.1" y="261" width="111.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="884.06" y="271.5" >do_filp_open</text>
</g>
<g >
<title>ext4_map_blocks (9,793,255 samples, 0.02%)</title><rect x="524.0" y="197" width="0.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="526.98" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (634,354,532 samples, 1.50%)</title><rect x="900.0" y="213" width="17.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="902.98" y="223.5" ></text>
</g>
<g >
<title>__legitimize_path (54,872,113 samples, 0.13%)</title><rect x="921.6" y="197" width="1.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="924.58" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="277" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1183.72" y="287.5" ></text>
</g>
<g >
<title>array_list.addOrOom (18,811,179 samples, 0.04%)</title><rect x="355.4" y="405" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="358.36" y="415.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="133" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1007.21" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,438,362,150 samples, 12.85%)</title><rect x="869.5" y="325" width="151.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="872.45" y="335.5" >entry_SYSCALL_64_af..</text>
</g>
<g >
<title>__rcu_read_unlock (41,426,991 samples, 0.10%)</title><rect x="910.6" y="181" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="913.62" y="191.5" ></text>
</g>
<g >
<title>kfree (41,503,571 samples, 0.10%)</title><rect x="751.4" y="277" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="754.39" y="287.5" ></text>
</g>
<g >
<title>inode_query_iversion (62,797,946 samples, 0.15%)</title><rect x="662.4" y="277" width="1.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="665.42" y="287.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_8728 (10,465,173 samples, 0.02%)</title><rect x="355.1" y="325" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="358.06" y="335.5" ></text>
</g>
<g >
<title>try_charge_memcg (10,943,082 samples, 0.03%)</title><rect x="917.4" y="181" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="920.37" y="191.5" ></text>
</g>
<g >
<title>try_to_unlazy (73,761,449 samples, 0.17%)</title><rect x="921.1" y="213" width="2.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="924.05" y="223.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (486,096,202 samples, 1.15%)</title><rect x="938.9" y="197" width="13.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="941.94" y="207.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (11,081,577 samples, 0.03%)</title><rect x="462.9" y="309" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="465.86" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,671,674 samples, 0.04%)</title><rect x="658.9" y="245" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="661.90" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,671,674 samples, 0.04%)</title><rect x="658.9" y="213" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="661.90" y="223.5" ></text>
</g>
<g >
<title>[unknown] (251,914,834 samples, 0.60%)</title><rect x="858.6" y="357" width="7.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="861.57" y="367.5" ></text>
</g>
<g >
<title>all (42,314,939,652 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>do_vmi_munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.86" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (26,345,469,403 samples, 62.26%)</title><rect x="317.7" y="437" width="734.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="320.67" y="447.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>__d_lookup_rcu (555,968,403 samples, 1.31%)</title><rect x="956.0" y="213" width="15.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="958.98" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (28,629,970 samples, 0.07%)</title><rect x="697.4" y="357" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="700.39" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="213" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1007.21" y="223.5" ></text>
</g>
<g >
<title>fd_install (77,774,456 samples, 0.18%)</title><rect x="992.5" y="261" width="2.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="995.52" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,666,118 samples, 0.04%)</title><rect x="851.6" y="373" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="854.65" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="245" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1183.27" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (14,980,350 samples, 0.04%)</title><rect x="231.6" y="405" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="234.62" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,247,683 samples, 0.04%)</title><rect x="987.6" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="990.55" y="207.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (18,883,063 samples, 0.04%)</title><rect x="975.7" y="197" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="978.72" y="207.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (60,761,228 samples, 0.14%)</title><rect x="699.5" y="357" width="1.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="702.46" y="367.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (10,060,947,467 samples, 23.78%)</title><rect x="19.1" y="501" width="280.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="22.12" y="511.5" >Thread.LinuxThreadImpl.spawn__anon_38..</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="357" width="8.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1184.24" y="367.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (1,217,055,962 samples, 2.88%)</title><rect x="145.0" y="453" width="34.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="148.05" y="463.5" >li..</text>
</g>
<g >
<title>mas_store_gfp (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1192.86" y="271.5" ></text>
</g>
<g >
<title>debug.inValgrind (150,388,384 samples, 0.36%)</title><rect x="457.0" y="341" width="4.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="459.96" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (275,835,511 samples, 0.65%)</title><rect x="778.0" y="405" width="7.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="780.97" y="415.5" ></text>
</g>
<g >
<title>dx_probe (27,927,809 samples, 0.07%)</title><rect x="523.5" y="261" width="0.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="526.47" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (5,638,012,109 samples, 13.32%)</title><rect x="865.9" y="341" width="157.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="868.91" y="351.5" >os.linux.x86_64.sysc..</text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (19,042,088 samples, 0.05%)</title><rect x="711.1" y="405" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="714.09" y="415.5" ></text>
</g>
<g >
<title>posix.mmap (10,465,173 samples, 0.02%)</title><rect x="355.1" y="277" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="358.06" y="287.5" ></text>
</g>
<g >
<title>kmalloc_slab (45,598,637 samples, 0.11%)</title><rect x="624.4" y="213" width="1.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="627.42" y="223.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (982,720,017 samples, 2.32%)</title><rect x="179.0" y="453" width="27.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="181.99" y="463.5" >l..</text>
</g>
<g >
<title>rb_first (11,158,944 samples, 0.03%)</title><rect x="670.6" y="277" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="673.56" y="287.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (536,876,813 samples, 1.27%)</title><rect x="1162.0" y="373" width="15.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1165.03" y="383.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (35,765,279 samples, 0.08%)</title><rect x="916.7" y="197" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="919.68" y="207.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (4,688,377,307 samples, 11.08%)</title><rect x="524.3" y="261" width="130.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="527.25" y="271.5" >htree_dirblock_t..</text>
</g>
<g >
<title>debug.assert (14,950,086 samples, 0.04%)</title><rect x="456.5" y="341" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="459.54" y="351.5" ></text>
</g>
<g >
<title>mntput_no_expire (11,575,877 samples, 0.03%)</title><rect x="757.9" y="293" width="0.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="760.85" y="303.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (53,694,052 samples, 0.13%)</title><rect x="459.7" y="293" width="1.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="462.66" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,666,118 samples, 0.04%)</title><rect x="851.6" y="341" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="854.65" y="351.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,645,161,217 samples, 3.89%)</title><rect x="540.8" y="197" width="45.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="543.84" y="207.5" >__ge..</text>
</g>
<g >
<title>do_syscall_64 (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="181" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1183.72" y="191.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (27,624,100 samples, 0.07%)</title><rect x="1021.1" y="325" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1024.11" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,465,173 samples, 0.02%)</title><rect x="355.1" y="213" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="358.06" y="223.5" ></text>
</g>
<g >
<title>fsnotify (85,110,990 samples, 0.20%)</title><rect x="933.6" y="197" width="2.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="936.57" y="207.5" ></text>
</g>
<g >
<title>dnotify_flush (273,996,633 samples, 0.65%)</title><rect x="764.2" y="293" width="7.6" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="767.18" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,891,542 samples, 0.04%)</title><rect x="274.0" y="405" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="276.97" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (17,599,184 samples, 0.04%)</title><rect x="10.0" y="453" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (128,192,371 samples, 0.30%)</title><rect x="1014.5" y="261" width="3.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1017.47" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,103,157 samples, 0.05%)</title><rect x="622.8" y="181" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="625.76" y="191.5" ></text>
</g>
<g >
<title>__slab_free (10,374,545 samples, 0.02%)</title><rect x="403.2" y="309" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="406.16" y="319.5" ></text>
</g>
<g >
<title>__kmalloc (575,649,005 samples, 1.36%)</title><rect x="609.6" y="229" width="16.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="612.64" y="239.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (792,535,920 samples, 1.87%)</title><rect x="632.9" y="245" width="22.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="635.89" y="255.5" >e..</text>
</g>
<g >
<title>do_anonymous_page (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="197" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1183.27" y="207.5" ></text>
</g>
<g >
<title>rcu_do_batch (15,994,932 samples, 0.04%)</title><rect x="178.5" y="357" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="181.54" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (45,293,194 samples, 0.11%)</title><rect x="762.2" y="293" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="765.15" y="303.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (13,120,607 samples, 0.03%)</title><rect x="462.5" y="325" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="465.49" y="335.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (4,446,402,596 samples, 10.51%)</title><rect x="1056.0" y="405" width="124.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1058.97" y="415.5" >mem.indexOfPosL..</text>
</g>
<g >
<title>debug.assert (18,712,799 samples, 0.04%)</title><rect x="345.8" y="389" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="348.80" y="399.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (9,793,255 samples, 0.02%)</title><rect x="524.0" y="181" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="526.98" y="191.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (43,278,993 samples, 0.10%)</title><rect x="443.5" y="389" width="1.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="446.54" y="399.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (677,687,843 samples, 1.60%)</title><rect x="424.1" y="389" width="18.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="427.11" y="399.5" ></text>
</g>
<g >
<title>strncpy_from_user (334,324,097 samples, 0.79%)</title><rect x="1005.2" y="245" width="9.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1008.15" y="255.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (72,341,105 samples, 0.17%)</title><rect x="1177.9" y="389" width="2.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1180.94" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,759,929 samples, 0.05%)</title><rect x="144.5" y="453" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="147.50" y="463.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,671,674 samples, 0.04%)</title><rect x="658.9" y="85" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="661.90" y="95.5" ></text>
</g>
<g >
<title>htab_map_hash (75,477,847 samples, 0.18%)</title><rect x="940.5" y="133" width="2.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="943.50" y="143.5" ></text>
</g>
<g >
<title>__find_get_block (18,134,554 samples, 0.04%)</title><rect x="523.5" y="181" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="526.47" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="101" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1007.21" y="111.5" ></text>
</g>
<g >
<title>memchr (121,349,275 samples, 0.29%)</title><rect x="519.5" y="229" width="3.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="522.45" y="239.5" ></text>
</g>
<g >
<title>close_fd_get_file (47,761,871 samples, 0.11%)</title><rect x="762.1" y="309" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="765.08" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (7,103,449,095 samples, 16.79%)</title><rect x="490.5" y="325" width="198.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="493.54" y="335.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>__irq_exit_rcu (15,994,932 samples, 0.04%)</title><rect x="178.5" y="405" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="181.54" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="373" width="0.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1183.27" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (88,003,067 samples, 0.21%)</title><rect x="785.7" y="389" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="788.67" y="399.5" ></text>
</g>
<g >
<title>posix.close (2,163,192,926 samples, 5.11%)</title><rect x="717.2" y="405" width="60.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="720.18" y="415.5" >posix...</text>
</g>
<g >
<title>__fget_light (73,259,038 samples, 0.17%)</title><rect x="492.3" y="293" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="495.26" y="303.5" ></text>
</g>
<g >
<title>_raw_read_lock (9,793,255 samples, 0.02%)</title><rect x="524.0" y="165" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="526.98" y="175.5" ></text>
</g>
<g >
<title>cache_from_obj (40,897,264 samples, 0.10%)</title><rect x="756.7" y="277" width="1.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="759.71" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,523,797 samples, 0.04%)</title><rect x="592.5" y="149" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="595.46" y="159.5" ></text>
</g>
<g >
<title>__find_get_block (1,645,161,217 samples, 3.89%)</title><rect x="540.8" y="181" width="45.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="543.84" y="191.5" >__fi..</text>
</g>
<g >
<title>debug.assert (13,074,856 samples, 0.03%)</title><rect x="348.9" y="389" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="351.90" y="399.5" ></text>
</g>
<g >
<title>__legitimize_mnt (32,728,244 samples, 0.08%)</title><rect x="921.6" y="181" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="924.58" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_bulk (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.86" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (22,103,157 samples, 0.05%)</title><rect x="622.8" y="69" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="625.76" y="79.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (7,877,698,727 samples, 18.62%)</title><rect x="481.5" y="389" width="219.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="484.47" y="399.5" >os.linux.getdents64</text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (36,534,758 samples, 0.09%)</title><rect x="461.5" y="325" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="464.48" y="335.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (4,493,499,003 samples, 10.62%)</title><rect x="1054.7" y="421" width="125.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.65" y="431.5" >mem.indexOfPos_..</text>
</g>
<g >
<title>rcu_do_batch (13,505,925 samples, 0.03%)</title><rect x="917.0" y="101" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="919.99" y="111.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (11,081,577 samples, 0.03%)</title><rect x="462.9" y="325" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="465.86" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="517" width="8.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1184.24" y="527.5" ></text>
</g>
<g >
<title>verify_dirent_name (121,349,275 samples, 0.29%)</title><rect x="519.5" y="245" width="3.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="522.45" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (131,242,880 samples, 0.31%)</title><rect x="349.3" y="421" width="3.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="352.26" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,891,542 samples, 0.04%)</title><rect x="274.0" y="453" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="276.97" y="463.5" ></text>
</g>
<g >
<title>update_process_times (10,896,991 samples, 0.03%)</title><rect x="316.5" y="309" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="319.52" y="319.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,374,545 samples, 0.02%)</title><rect x="403.2" y="325" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="406.16" y="335.5" ></text>
</g>
<g >
<title>[unknown] (17,599,184 samples, 0.04%)</title><rect x="10.0" y="485" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>xas_start (76,865,938 samples, 0.18%)</title><rect x="581.2" y="117" width="2.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="584.18" y="127.5" ></text>
</g>
<g >
<title>reweight_entity (17,666,118 samples, 0.04%)</title><rect x="851.6" y="229" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="854.65" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (241,784,511 samples, 0.57%)</title><rect x="858.9" y="341" width="6.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="861.85" y="351.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (252,869,989 samples, 0.60%)</title><rect x="764.8" y="277" width="7.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="767.77" y="287.5" ></text>
</g>
<g >
<title>__call_rcu_common (407,429,424 samples, 0.96%)</title><rect x="721.3" y="309" width="11.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="724.27" y="319.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (169,054,748 samples, 0.40%)</title><rect x="341.6" y="405" width="4.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="344.60" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (91,617,899 samples, 0.22%)</title><rect x="683.4" y="277" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="686.39" y="287.5" ></text>
</g>
<g >
<title>os.linux.openat (5,649,126,800 samples, 13.35%)</title><rect x="865.6" y="357" width="157.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="868.60" y="367.5" >os.linux.openat</text>
</g>
<g >
<title>generic_permission (17,615,547 samples, 0.04%)</title><rect x="955.0" y="197" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="958.02" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="277" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1183.27" y="287.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (114,719,984 samples, 0.27%)</title><rect x="932.7" y="213" width="3.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="935.74" y="223.5" ></text>
</g>
<g >
<title>ext4_release_dir (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="405" width="8.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1184.24" y="415.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (22,103,157 samples, 0.05%)</title><rect x="622.8" y="37" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="625.76" y="47.5" ></text>
</g>
<g >
<title>[unknown] (361,996,906 samples, 0.86%)</title><rect x="939.7" y="165" width="10.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="942.69" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (219,301,928 samples, 0.52%)</title><rect x="340.2" y="421" width="6.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="343.20" y="431.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,940,753,055 samples, 6.95%)</title><rect x="1080.0" y="373" width="82.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1083.03" y="383.5" >mem.eqlBy..</text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (31,612,707,551 samples, 74.71%)</title><rect x="299.7" y="469" width="881.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="302.68" y="479.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>dput (62,700,417 samples, 0.15%)</title><rect x="733.9" y="293" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="736.93" y="303.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (517,103,840 samples, 1.22%)</title><rect x="737.0" y="277" width="14.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="739.97" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (299,419,630 samples, 0.71%)</title><rect x="737.3" y="261" width="8.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="740.33" y="271.5" ></text>
</g>
<g >
<title>should_failslab (10,616,520 samples, 0.03%)</title><rect x="899.7" y="165" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="902.69" y="175.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (42,170,893 samples, 0.10%)</title><rect x="688.6" y="325" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="691.63" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (10,896,991 samples, 0.03%)</title><rect x="316.5" y="293" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="319.52" y="303.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (291,031,713 samples, 0.69%)</title><rect x="646.9" y="213" width="8.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="649.88" y="223.5" ></text>
</g>
<g >
<title>__virt_addr_valid (78,805,454 samples, 0.19%)</title><rect x="1012.3" y="213" width="2.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1015.28" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="149" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1183.27" y="159.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (26,964,989 samples, 0.06%)</title><rect x="994.7" y="261" width="0.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="997.69" y="271.5" ></text>
</g>
<g >
<title>c.clone (41,673,655,018 samples, 98.48%)</title><rect x="19.1" y="517" width="1162.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="22.12" y="527.5" >c.clone</text>
</g>
<g >
<title>tick_sched_timer (17,891,542 samples, 0.04%)</title><rect x="274.0" y="373" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="276.97" y="383.5" ></text>
</g>
<g >
<title>rcu_core (13,505,925 samples, 0.03%)</title><rect x="917.0" y="117" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="919.99" y="127.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,896,991 samples, 0.03%)</title><rect x="316.5" y="373" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="319.52" y="383.5" ></text>
</g>
<g >
<title>touch_atime (127,318,929 samples, 0.30%)</title><rect x="682.4" y="293" width="3.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="685.40" y="303.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (31,612,707,551 samples, 74.71%)</title><rect x="299.7" y="485" width="881.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="302.68" y="495.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>[unknown] (17,599,184 samples, 0.04%)</title><rect x="10.0" y="501" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>kmalloc_trace (96,927,434 samples, 0.23%)</title><rect x="667.9" y="277" width="2.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="670.86" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (105,588,971 samples, 0.25%)</title><rect x="346.3" y="421" width="3.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="349.32" y="431.5" ></text>
</g>
<g >
<title>__folio_alloc (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="165" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1183.27" y="175.5" ></text>
</g>
<g >
<title>rcu_async_should_hurry (11,468,569 samples, 0.03%)</title><rect x="724.2" y="293" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="727.18" y="303.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (84,605,201 samples, 0.20%)</title><rect x="953.2" y="229" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="956.15" y="239.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,077,083,110 samples, 2.55%)</title><rect x="602.9" y="245" width="30.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="605.86" y="255.5" >ex..</text>
</g>
<g >
<title>perf_event_task_tick (22,103,157 samples, 0.05%)</title><rect x="622.8" y="53" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="625.76" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (22,103,157 samples, 0.05%)</title><rect x="622.8" y="117" width="0.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="625.76" y="127.5" ></text>
</g>
<g >
<title>lockref_put_return (62,700,417 samples, 0.15%)</title><rect x="733.9" y="277" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="736.93" y="287.5" ></text>
</g>
<g >
<title>mem.isAligned (11,081,577 samples, 0.03%)</title><rect x="462.9" y="341" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="465.86" y="351.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (4,542,019,474 samples, 10.73%)</title><rect x="1053.3" y="437" width="126.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1056.30" y="447.5" >mem.indexOf__an..</text>
</g>
<g >
<title>__hrtimer_run_queues (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="165" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1007.21" y="175.5" ></text>
</g>
<g >
<title>call_filldir (632,437,487 samples, 1.49%)</title><rect x="505.2" y="277" width="17.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="508.20" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,417,706,708 samples, 17.53%)</title><rect x="490.5" y="357" width="206.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="493.54" y="367.5" >entry_SYSCALL_64_after_hwfr..</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.join (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.86" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,435,942 samples, 0.02%)</title><rect x="403.2" y="405" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="406.16" y="415.5" ></text>
</g>
<g >
<title>dput (119,402,036 samples, 0.28%)</title><rect x="987.6" y="213" width="3.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="990.55" y="223.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (18,906,176 samples, 0.04%)</title><rect x="303.6" y="437" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="306.56" y="447.5" ></text>
</g>
<g >
<title>generic_permission (73,644,945 samples, 0.17%)</title><rect x="973.3" y="197" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="976.35" y="207.5" ></text>
</g>
<g >
<title>search_name.searchName (45,940,153 samples, 0.11%)</title><rect x="1180.0" y="453" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1182.96" y="463.5" ></text>
</g>
<g >
<title>filldir64 (472,554,649 samples, 1.12%)</title><rect x="509.7" y="261" width="13.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="512.66" y="271.5" ></text>
</g>
<g >
<title>path_get (27,738,271 samples, 0.07%)</title><rect x="935.9" y="213" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="938.94" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (77,907,900 samples, 0.18%)</title><rect x="494.3" y="293" width="2.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="497.30" y="303.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (4,739,206,021 samples, 11.20%)</title><rect x="522.8" y="277" width="132.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="525.84" y="287.5" >ext4_htree_fill_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,671,674 samples, 0.04%)</title><rect x="658.9" y="229" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="661.90" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (34,309,156 samples, 0.08%)</title><rect x="1052.3" y="437" width="1.0" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1055.34" y="447.5" ></text>
</g>
<g >
<title>perf_event_task_tick (19,741,229 samples, 0.05%)</title><rect x="144.5" y="309" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="147.50" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (10,896,991 samples, 0.03%)</title><rect x="316.5" y="277" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="319.52" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="325" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.86" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,909,117,622 samples, 4.51%)</title><rect x="720.7" y="325" width="53.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="723.74" y="335.5" >__x64..</text>
</g>
<g >
<title>tick_sched_handle (22,103,157 samples, 0.05%)</title><rect x="622.8" y="101" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="625.76" y="111.5" ></text>
</g>
<g >
<title>security_inode_permission (30,134,627 samples, 0.07%)</title><rect x="975.4" y="213" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="978.40" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (10,682,956 samples, 0.03%)</title><rect x="14.4" y="485" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="17.44" y="495.5" ></text>
</g>
<g >
<title>__fdget_raw (18,782,359 samples, 0.04%)</title><rect x="977.5" y="213" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="980.52" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,666,118 samples, 0.04%)</title><rect x="851.6" y="389" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="854.65" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (22,103,157 samples, 0.05%)</title><rect x="622.8" y="165" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="625.76" y="175.5" ></text>
</g>
<g >
<title>debug.assert (18,794,020 samples, 0.04%)</title><rect x="404.3" y="421" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="407.29" y="431.5" ></text>
</g>
<g >
<title>__put_user_8 (42,556,583 samples, 0.10%)</title><rect x="496.5" y="309" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="499.47" y="319.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (29,146,039 samples, 0.07%)</title><rect x="1055.2" y="405" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1058.15" y="415.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (6,513,610,004 samples, 15.39%)</title><rect x="841.9" y="405" width="181.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="844.89" y="415.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (19,741,229 samples, 0.05%)</title><rect x="144.5" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="147.50" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (10,607,290 samples, 0.03%)</title><rect x="336.0" y="389" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="339.01" y="399.5" ></text>
</g>
<g >
<title>fsnotify (36,769,116 samples, 0.09%)</title><rect x="752.5" y="293" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="755.55" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (157,228,059 samples, 0.37%)</title><rect x="14.7" y="501" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="17.74" y="511.5" ></text>
</g>
<g >
<title>ext4_readdir (6,040,758,217 samples, 14.28%)</title><rect x="504.1" y="293" width="168.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="507.08" y="303.5" >ext4_readdir</text>
</g>
<g >
<title>cache_from_obj (57,077,856 samples, 0.13%)</title><rect x="1016.5" y="245" width="1.5" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1019.46" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,896,991 samples, 0.03%)</title><rect x="316.5" y="325" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="319.52" y="335.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (45,487,625 samples, 0.11%)</title><rect x="698.2" y="357" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="701.19" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="501" width="8.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.24" y="511.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (10,283,066 samples, 0.02%)</title><rect x="952.2" y="165" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="955.21" y="175.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (72,221,475 samples, 0.17%)</title><rect x="908.6" y="181" width="2.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="911.61" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (28,279,389 samples, 0.07%)</title><rect x="736.2" y="277" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="739.18" y="287.5" ></text>
</g>
<g >
<title>ext4_getblk (2,235,203,046 samples, 5.28%)</title><rect x="540.5" y="213" width="62.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="543.53" y="223.5" >ext4_g..</text>
</g>
<g >
<title>putname (22,549,019 samples, 0.05%)</title><rect x="1018.0" y="261" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1021.05" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,994,932 samples, 0.04%)</title><rect x="178.5" y="421" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="181.54" y="431.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (57,014,693 samples, 0.13%)</title><rect x="479.9" y="389" width="1.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="482.88" y="399.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (45,940,153 samples, 0.11%)</title><rect x="1180.0" y="437" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.96" y="447.5" ></text>
</g>
<g >
<title>mutex_unlock (60,592,383 samples, 0.14%)</title><rect x="686.9" y="309" width="1.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="689.94" y="319.5" ></text>
</g>
<g >
<title>put_cpu_partial (18,930,445 samples, 0.04%)</title><rect x="905.2" y="165" width="0.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="908.17" y="175.5" ></text>
</g>
<g >
<title>posix.openatZ (6,080,375,865 samples, 14.37%)</title><rect x="854.0" y="373" width="169.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="856.97" y="383.5" >posix.openatZ</text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="341" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1183.27" y="351.5" ></text>
</g>
<g >
<title>debug.inValgrind (65,279,138 samples, 0.15%)</title><rect x="1049.8" y="357" width="1.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1052.81" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,896,991 samples, 0.03%)</title><rect x="316.5" y="341" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="319.52" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (17,985,914 samples, 0.04%)</title><rect x="865.1" y="325" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="868.09" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.close (2,351,333,272 samples, 5.56%)</title><rect x="712.4" y="421" width="65.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="715.40" y="431.5" >fs.Dir...</text>
</g>
<g >
<title>__rcu_read_unlock (16,978,261 samples, 0.04%)</title><rect x="987.1" y="213" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="990.08" y="223.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (44,792,889 samples, 0.11%)</title><rect x="1021.9" y="325" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1024.88" y="335.5" ></text>
</g>
<g >
<title>handle_softirqs (13,505,925 samples, 0.03%)</title><rect x="917.0" y="133" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="919.99" y="143.5" ></text>
</g>
<g >
<title>x64_sys_call (16,487,229 samples, 0.04%)</title><rect x="1020.6" y="293" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1023.65" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (5,262,618,284 samples, 12.44%)</title><rect x="871.9" y="293" width="146.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="874.92" y="303.5" >__x64_sys_openat</text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (9,809,961 samples, 0.02%)</title><rect x="841.6" y="405" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="844.61" y="415.5" ></text>
</g>
<g >
<title>security_file_free (17,313,586 samples, 0.04%)</title><rect x="759.2" y="293" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="762.23" y="303.5" ></text>
</g>
<g >
<title>may_open (170,468,250 samples, 0.40%)</title><rect x="971.5" y="229" width="4.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="974.49" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (47,471,350 samples, 0.11%)</title><rect x="1011.0" y="213" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1013.95" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (19,741,229 samples, 0.05%)</title><rect x="144.5" y="405" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="147.50" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (41,237,988 samples, 0.10%)</title><rect x="355.9" y="421" width="1.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="358.88" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="485" width="8.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1184.24" y="495.5" ></text>
</g>
<g >
<title>down_read_killable (82,888,325 samples, 0.20%)</title><rect x="501.8" y="293" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="504.76" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="181" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1007.21" y="191.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (76,522,153 samples, 0.18%)</title><rect x="896.1" y="181" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="899.14" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (22,103,157 samples, 0.05%)</title><rect x="622.8" y="133" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="625.76" y="143.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_9108 (11,081,577 samples, 0.03%)</title><rect x="462.9" y="293" width="0.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="465.86" y="303.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (10,465,173 samples, 0.02%)</title><rect x="355.1" y="357" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="358.06" y="367.5" ></text>
</g>
<g >
<title>ext4_bread (27,927,809 samples, 0.07%)</title><rect x="523.5" y="229" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="526.47" y="239.5" ></text>
</g>
<g >
<title>do_exit (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="453" width="8.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1184.24" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,671,674 samples, 0.04%)</title><rect x="658.9" y="197" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="661.90" y="207.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (79,663,224 samples, 0.19%)</title><rect x="876.3" y="245" width="2.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="879.29" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (14,980,350 samples, 0.04%)</title><rect x="231.6" y="421" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="234.62" y="431.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (101,124,303 samples, 0.24%)</title><rect x="458.3" y="325" width="2.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="461.33" y="335.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (36,774,465 samples, 0.09%)</title><rect x="585.7" y="149" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="588.69" y="159.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_7915 (10,465,173 samples, 0.02%)</title><rect x="355.1" y="341" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="358.06" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,896,991 samples, 0.03%)</title><rect x="316.5" y="389" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="319.52" y="399.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9314 (10,465,173 samples, 0.02%)</title><rect x="355.1" y="373" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="358.06" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (17,891,542 samples, 0.04%)</title><rect x="274.0" y="325" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="276.97" y="335.5" ></text>
</g>
<g >
<title>do_group_exit (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="469" width="8.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1184.24" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (12,573,959 samples, 0.03%)</title><rect x="878.5" y="245" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="881.51" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (17,671,674 samples, 0.04%)</title><rect x="658.9" y="117" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="661.90" y="127.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (27,927,809 samples, 0.07%)</title><rect x="523.5" y="245" width="0.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="526.47" y="255.5" ></text>
</g>
<g >
<title>___slab_alloc (76,028,547 samples, 0.18%)</title><rect x="903.6" y="197" width="2.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="906.58" y="207.5" ></text>
</g>
<g >
<title>os.linux.mmap (10,465,173 samples, 0.02%)</title><rect x="355.1" y="261" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="358.06" y="271.5" ></text>
</g>
<g >
<title>alloc_fd (218,677,135 samples, 0.52%)</title><rect x="873.5" y="261" width="6.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="876.54" y="271.5" ></text>
</g>
<g >
<title>complete_walk (129,769,192 samples, 0.31%)</title><rect x="919.5" y="229" width="3.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="922.49" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (10,465,173 samples, 0.02%)</title><rect x="355.1" y="245" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.06" y="255.5" ></text>
</g>
<g >
<title>debug.assert (14,602,543 samples, 0.03%)</title><rect x="1051.9" y="341" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1054.93" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,505,925 samples, 0.03%)</title><rect x="917.0" y="149" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="919.99" y="159.5" ></text>
</g>
<g >
<title>rb_next_postorder (10,186,904 samples, 0.02%)</title><rect x="662.1" y="261" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="665.13" y="271.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (185,823,351 samples, 0.44%)</title><rect x="677.2" y="293" width="5.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="680.21" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="389" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1183.27" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_free (153,463,092 samples, 0.36%)</title><rect x="753.6" y="293" width="4.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="756.57" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="357" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.86" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (61,452,370 samples, 0.15%)</title><rect x="898.3" y="181" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="901.27" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,671,674 samples, 0.04%)</title><rect x="658.9" y="181" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="661.90" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (9,475,028,384 samples, 22.39%)</title><rect x="788.1" y="421" width="264.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="791.12" y="431.5" >fs.Dir.openDir</text>
</g>
<g >
<title>fput (82,508,152 samples, 0.19%)</title><rect x="497.7" y="309" width="2.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="500.66" y="319.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (31,349,965 samples, 0.07%)</title><rect x="775.1" y="357" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="778.07" y="367.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (16,781,522 samples, 0.04%)</title><rect x="777.5" y="405" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="780.51" y="415.5" ></text>
</g>
<g >
<title>ext4_release_dir (605,028,651 samples, 1.43%)</title><rect x="735.7" y="293" width="16.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="738.68" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,512,811 samples, 0.02%)</title><rect x="670.3" y="245" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="673.27" y="255.5" ></text>
</g>
<g >
<title>rb_first_postorder (54,790,119 samples, 0.13%)</title><rect x="749.1" y="261" width="1.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="752.09" y="271.5" ></text>
</g>
<g >
<title>irqtime_account_irq (14,980,350 samples, 0.04%)</title><rect x="231.6" y="389" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="234.62" y="399.5" ></text>
</g>
<g >
<title>init_file (350,217,156 samples, 0.83%)</title><rect x="890.2" y="213" width="9.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="893.22" y="223.5" ></text>
</g>
<g >
<title>errseq_sample (41,276,062 samples, 0.10%)</title><rect x="929.3" y="213" width="1.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="932.35" y="223.5" ></text>
</g>
<g >
<title>mem.eqlBytes (287,863,919 samples, 0.68%)</title><rect x="426.5" y="373" width="8.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="429.49" y="383.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (51,489,260 samples, 0.12%)</title><rect x="904.3" y="181" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="907.26" y="191.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (11,030,209,861 samples, 26.07%)</title><rect x="404.8" y="421" width="307.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="407.81" y="431.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>update_process_times (17,891,542 samples, 0.04%)</title><rect x="274.0" y="341" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="276.97" y="351.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (355,279,185 samples, 0.84%)</title><rect x="593.0" y="181" width="9.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="595.95" y="191.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (1,187,904,532 samples, 2.81%)</title><rect x="446.8" y="373" width="33.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="449.76" y="383.5" >me..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,211,285 samples, 0.02%)</title><rect x="14.2" y="485" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="17.15" y="495.5" ></text>
</g>
<g >
<title>posix.munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.86" y="415.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (60,572,584 samples, 0.14%)</title><rect x="770.1" y="245" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="773.13" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.walk (45,940,153 samples, 0.11%)</title><rect x="1180.0" y="421" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1182.96" y="431.5" ></text>
</g>
<g >
<title>put_cpu_partial (19,127,144 samples, 0.05%)</title><rect x="660.3" y="261" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="663.32" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="69" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1007.21" y="79.5" ></text>
</g>
<g >
<title>task_tick_fair (17,666,118 samples, 0.04%)</title><rect x="851.6" y="245" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="854.65" y="255.5" ></text>
</g>
<g >
<title>os.linux.mmap (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="229" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1183.72" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,896,991 samples, 0.03%)</title><rect x="316.5" y="421" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="319.52" y="431.5" ></text>
</g>
<g >
<title>os.linux.close (2,115,108,876 samples, 5.00%)</title><rect x="718.0" y="389" width="59.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="721.02" y="399.5" >os.lin..</text>
</g>
<g >
<title>heap.PageAllocator.alloc (10,465,173 samples, 0.02%)</title><rect x="355.1" y="293" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="358.06" y="303.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,497,793,853 samples, 3.54%)</title><rect x="232.7" y="469" width="41.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="235.70" y="479.5" >lin..</text>
</g>
<g >
<title>compiler_rt.memset.memset (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="293" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1183.27" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="229" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1007.21" y="239.5" ></text>
</g>
<g >
<title>___slab_alloc (31,035,697 samples, 0.07%)</title><rect x="619.5" y="197" width="0.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="622.47" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,103,157 samples, 0.05%)</title><rect x="622.8" y="197" width="0.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="625.76" y="207.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (93,627,358 samples, 0.22%)</title><rect x="940.0" y="149" width="2.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="943.00" y="159.5" ></text>
</g>
<g >
<title>__srcu_read_lock (132,192,020 samples, 0.31%)</title><rect x="766.4" y="245" width="3.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="769.44" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (17,599,184 samples, 0.04%)</title><rect x="10.0" y="469" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>start.callMain (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="469" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1192.86" y="479.5" ></text>
</g>
<g >
<title>__vm_munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="309" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.86" y="319.5" ></text>
</g>
<g >
<title>update_process_times (17,666,118 samples, 0.04%)</title><rect x="851.6" y="277" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="854.65" y="287.5" ></text>
</g>
<g >
<title>ext4_getblk (27,927,809 samples, 0.07%)</title><rect x="523.5" y="213" width="0.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="526.47" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (148,717,679 samples, 0.35%)</title><rect x="1033.5" y="389" width="4.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1036.45" y="399.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="389" width="8.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1184.24" y="399.5" ></text>
</g>
<g >
<title>ext4_bread (2,253,729,213 samples, 5.33%)</title><rect x="540.0" y="229" width="62.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="543.01" y="239.5" >ext4_b..</text>
</g>
<g >
<title>fsnotify (123,377,894 samples, 0.29%)</title><rect x="679.0" y="277" width="3.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="681.96" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (19,741,229 samples, 0.05%)</title><rect x="144.5" y="389" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="147.50" y="399.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="117" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1183.27" y="127.5" ></text>
</g>
<g >
<title>update_process_times (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="117" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1007.21" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,666,118 samples, 0.04%)</title><rect x="851.6" y="293" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="854.65" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="213" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1183.72" y="223.5" ></text>
</g>
<g >
<title>lockref_put_return (101,146,766 samples, 0.24%)</title><rect x="988.1" y="197" width="2.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="991.06" y="207.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (169,752,937 samples, 0.40%)</title><rect x="945.0" y="149" width="4.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="948.05" y="159.5" ></text>
</g>
<g >
<title>security_file_open (589,439,702 samples, 1.39%)</title><rect x="936.7" y="213" width="16.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="939.72" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="197" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1183.72" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,980,350 samples, 0.04%)</title><rect x="231.6" y="437" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="234.62" y="447.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacityPrecise (10,465,173 samples, 0.02%)</title><rect x="355.1" y="389" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="358.06" y="399.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (17,823,755 samples, 0.04%)</title><rect x="462.0" y="309" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="465.00" y="319.5" ></text>
</g>
<g >
<title>rb_insert_color (103,733,697 samples, 0.25%)</title><rect x="630.0" y="229" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="633.00" y="239.5" ></text>
</g>
<g >
<title>lookup_fast (572,848,126 samples, 1.35%)</title><rect x="955.5" y="229" width="16.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="958.51" y="239.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (28,612,216 samples, 0.07%)</title><rect x="458.9" y="309" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="461.86" y="319.5" ></text>
</g>
<g >
<title>_raw_read_lock (107,472,795 samples, 0.25%)</title><rect x="598.1" y="165" width="3.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="601.12" y="175.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (18,138,380 samples, 0.04%)</title><rect x="777.0" y="389" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="780.00" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (6,145,986,086 samples, 14.52%)</title><rect x="852.1" y="389" width="171.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="855.14" y="399.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (33,254,310 samples, 0.08%)</title><rect x="659.4" y="245" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="662.39" y="255.5" ></text>
</g>
<g >
<title>__fput (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="421" width="8.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1184.24" y="431.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (11,535,920 samples, 0.03%)</title><rect x="461.2" y="341" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="464.15" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (223,798,597 samples, 0.53%)</title><rect x="858.9" y="325" width="6.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="861.85" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (70,666,270 samples, 0.17%)</title><rect x="1018.7" y="293" width="1.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1021.68" y="303.5" ></text>
</g>
<g >
<title>debug.assert (16,544,032 samples, 0.04%)</title><rect x="352.5" y="405" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="355.46" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (19,741,229 samples, 0.05%)</title><rect x="144.5" y="325" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="147.50" y="335.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (904,204,526 samples, 2.14%)</title><rect x="274.5" y="469" width="25.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="277.47" y="479.5" >m..</text>
</g>
<g >
<title>bpf_get_current_cgroup_id (87,489,211 samples, 0.21%)</title><rect x="942.6" y="149" width="2.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="945.61" y="159.5" ></text>
</g>
<g >
<title>__fget_light (190,288,026 samples, 0.45%)</title><rect x="978.0" y="213" width="5.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="981.04" y="223.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (1,175,354,257 samples, 2.78%)</title><rect x="447.1" y="357" width="32.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="450.11" y="367.5" >me..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,891,542 samples, 0.04%)</title><rect x="274.0" y="437" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="276.97" y="447.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (10,060,947,467 samples, 23.78%)</title><rect x="19.1" y="485" width="280.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="22.12" y="495.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (10,925,843 samples, 0.03%)</title><rect x="304.1" y="437" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="307.09" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,666,118 samples, 0.04%)</title><rect x="851.6" y="325" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="854.65" y="335.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (10,465,173 samples, 0.02%)</title><rect x="355.1" y="197" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="358.06" y="207.5" ></text>
</g>
<g >
<title>mas_wr_spanning_store.isra.0 (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1192.86" y="255.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (37,649,994 samples, 0.09%)</title><rect x="758.2" y="293" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="761.18" y="303.5" ></text>
</g>
<g >
<title>rb_first_postorder (45,932,945 samples, 0.11%)</title><rect x="660.9" y="261" width="1.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="663.85" y="271.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (27,669,034 samples, 0.07%)</title><rect x="949.0" y="117" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="952.01" y="127.5" ></text>
</g>
<g >
<title>__slab_free (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="373" width="8.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1184.24" y="383.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (31,544,075,539 samples, 74.55%)</title><rect x="300.3" y="453" width="879.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="303.32" y="463.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>fput (48,155,767 samples, 0.11%)</title><rect x="983.4" y="213" width="1.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="986.35" y="223.5" ></text>
</g>
<g >
<title>terminate_walk (225,382,172 samples, 0.53%)</title><rect x="986.2" y="229" width="6.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="989.23" y="239.5" ></text>
</g>
<g >
<title>mod_objcg_state (33,142,008 samples, 0.08%)</title><rect x="915.8" y="181" width="0.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="918.75" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (11,722,507 samples, 0.03%)</title><rect x="655.4" y="261" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="658.36" y="271.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (79,856,932 samples, 0.19%)</title><rect x="334.6" y="421" width="2.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="337.57" y="431.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (445,629,183 samples, 1.05%)</title><rect x="304.4" y="437" width="12.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="307.39" y="447.5" ></text>
</g>
<g >
<title>handle_softirqs (10,374,545 samples, 0.02%)</title><rect x="403.2" y="357" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="406.16" y="367.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (39,106,915 samples, 0.09%)</title><rect x="774.0" y="325" width="1.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="776.98" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (45,767,011 samples, 0.11%)</title><rect x="338.9" y="405" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="341.93" y="415.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (197,102,004 samples, 0.47%)</title><rect x="587.5" y="181" width="5.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="590.45" y="191.5" ></text>
</g>
<g >
<title>__fdget_pos (179,748,614 samples, 0.42%)</title><rect x="491.5" y="309" width="5.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="494.46" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (417,892,208 samples, 0.99%)</title><rect x="612.8" y="213" width="11.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="615.76" y="223.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (10,875,708 samples, 0.03%)</title><rect x="701.2" y="389" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="704.15" y="399.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (122,247,377 samples, 0.29%)</title><rect x="336.8" y="421" width="3.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="339.79" y="431.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall2 (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="373" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1192.86" y="383.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (33,618,584 samples, 0.08%)</title><rect x="1177.0" y="373" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1180.00" y="383.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (22,691,859 samples, 0.05%)</title><rect x="299.7" y="453" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="302.68" y="463.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (25,533,279 samples, 0.06%)</title><rect x="1051.6" y="357" width="0.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1054.63" y="367.5" ></text>
</g>
<g >
<title>__fsnotify_parent (36,544,715 samples, 0.09%)</title><rect x="500.7" y="293" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="503.74" y="303.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (14,351,162 samples, 0.03%)</title><rect x="1023.1" y="357" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1026.13" y="367.5" ></text>
</g>
<g >
<title>alloc_empty_file (1,105,347,239 samples, 2.61%)</title><rect x="888.7" y="229" width="30.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="891.67" y="239.5" >al..</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (38,180,803 samples, 0.09%)</title><rect x="745.7" y="245" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="748.68" y="255.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (30,287,883 samples, 0.07%)</title><rect x="457.5" y="325" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="460.49" y="335.5" ></text>
</g>
<g >
<title>handle_softirqs (15,994,932 samples, 0.04%)</title><rect x="178.5" y="389" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="181.54" y="399.5" ></text>
</g>
<g >
<title>inode_permission (17,615,547 samples, 0.04%)</title><rect x="955.0" y="213" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="958.02" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (96,927,434 samples, 0.23%)</title><rect x="667.9" y="261" width="2.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="670.86" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (260,305,457 samples, 0.62%)</title><rect x="689.8" y="325" width="7.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="692.80" y="335.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (363,838,578 samples, 0.86%)</title><rect x="778.0" y="421" width="10.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="780.97" y="431.5" ></text>
</g>
<g >
<title>rcu_core (10,374,545 samples, 0.02%)</title><rect x="403.2" y="341" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="406.16" y="351.5" ></text>
</g>
<g >
<title>expand_files (11,331,330 samples, 0.03%)</title><rect x="879.3" y="245" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="882.32" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,465,173 samples, 0.02%)</title><rect x="355.1" y="229" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="358.06" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,505,925 samples, 0.03%)</title><rect x="917.0" y="181" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="919.99" y="191.5" ></text>
</g>
<g >
<title>debug.assert (17,971,250 samples, 0.04%)</title><rect x="1049.3" y="357" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1052.31" y="367.5" ></text>
</g>
<g >
<title>locks_remove_posix (77,415,249 samples, 0.18%)</title><rect x="771.8" y="293" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="774.82" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,305,828,584 samples, 3.09%)</title><rect x="792.7" y="405" width="36.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="795.65" y="415.5" >com..</text>
</g>
<g >
<title>iterate_dir (6,705,105,446 samples, 15.85%)</title><rect x="500.0" y="309" width="186.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="502.96" y="319.5" >iterate_dir</text>
</g>
<g >
<title>valgrind.runningOnValgrind (65,279,138 samples, 0.15%)</title><rect x="1049.8" y="341" width="1.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1052.81" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (18,905,411 samples, 0.04%)</title><rect x="403.8" y="421" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="406.76" y="431.5" ></text>
</g>
<g >
<title>__fput_sync (85,076,258 samples, 0.20%)</title><rect x="759.7" y="309" width="2.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="762.71" y="319.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (37,211,318 samples, 0.09%)</title><rect x="623.4" y="197" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="626.38" y="207.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,374,545 samples, 0.02%)</title><rect x="403.2" y="373" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="406.16" y="383.5" ></text>
</g>
<g >
<title>__memset (87,144,248 samples, 0.21%)</title><rect x="620.3" y="197" width="2.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="623.33" y="207.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (31,612,707,551 samples, 74.71%)</title><rect x="299.7" y="501" width="881.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="302.68" y="511.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>do_sys_openat2 (5,238,610,827 samples, 12.38%)</title><rect x="872.6" y="277" width="146.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="875.59" y="287.5" >do_sys_openat2</text>
</g>
<g >
<title>os.linux.getdents64 (28,206,152 samples, 0.07%)</title><rect x="711.6" y="405" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="714.62" y="415.5" ></text>
</g>
<g >
<title>ext4_map_blocks (578,878,031 samples, 1.37%)</title><rect x="586.7" y="197" width="16.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="589.71" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (46,159,615 samples, 0.11%)</title><rect x="715.9" y="405" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="718.90" y="415.5" ></text>
</g>
<g >
<title>posix.mmap (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="245" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1183.72" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,130,323 samples, 0.02%)</title><rect x="858.6" y="325" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="861.57" y="335.5" ></text>
</g>
<g >
<title>update_cfs_group (10,896,991 samples, 0.03%)</title><rect x="316.5" y="261" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="319.52" y="271.5" ></text>
</g>
<g >
<title>do_dentry_open (1,077,415,334 samples, 2.55%)</title><rect x="923.1" y="229" width="30.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="926.11" y="239.5" >do..</text>
</g>
<g >
<title>perf_event_task_tick (17,891,542 samples, 0.04%)</title><rect x="274.0" y="309" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="276.97" y="319.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (34,597,167 samples, 0.08%)</title><rect x="1180.3" y="325" width="0.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1183.27" y="335.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (37,934,184 samples, 0.09%)</title><rect x="775.9" y="357" width="1.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="778.94" y="367.5" ></text>
</g>
<g >
<title>step_into (55,266,957 samples, 0.13%)</title><rect x="984.7" y="229" width="1.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="987.69" y="239.5" ></text>
</g>
<g >
<title>path_init (303,069,157 samples, 0.72%)</title><rect x="976.2" y="229" width="8.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="979.24" y="239.5" ></text>
</g>
<g >
<title>__memcpy (154,580,573 samples, 0.37%)</title><rect x="625.7" y="229" width="4.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="628.69" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (10,372,080,382 samples, 24.51%)</title><rect x="412.2" y="405" width="289.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="415.22" y="415.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>perf_event_task_tick (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="85" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1007.21" y="95.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (301,342,326 samples, 0.71%)</title><rect x="996.7" y="245" width="8.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="999.75" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,859,103 samples, 0.03%)</title><rect x="299.3" y="453" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="302.30" y="463.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="261" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1183.72" y="271.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (10,130,323 samples, 0.02%)</title><rect x="858.6" y="341" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="861.57" y="351.5" ></text>
</g>
<g >
<title>fs.Dir.iterateImpl (88,003,067 samples, 0.21%)</title><rect x="785.7" y="405" width="2.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="788.67" y="415.5" ></text>
</g>
<g >
<title>start.posixCallMainAndExit (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="501" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.86" y="511.5" ></text>
</g>
<g >
<title>getname (34,934,487 samples, 0.08%)</title><rect x="995.4" y="261" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="998.44" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (135,221,013 samples, 0.32%)</title><rect x="486.8" y="357" width="3.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="489.77" y="367.5" ></text>
</g>
<g >
<title>__brelse (16,745,939 samples, 0.04%)</title><rect x="529.8" y="245" width="0.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="532.78" y="255.5" ></text>
</g>
<g >
<title>native_sched_clock (14,980,350 samples, 0.04%)</title><rect x="231.6" y="341" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="234.62" y="351.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (13,505,925 samples, 0.03%)</title><rect x="917.0" y="85" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="919.99" y="95.5" ></text>
</g>
<g >
<title>mem.eqlBytes (62,585,252 samples, 0.15%)</title><rect x="1072.9" y="389" width="1.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1075.90" y="399.5" ></text>
</g>
<g >
<title>sched_clock (14,980,350 samples, 0.04%)</title><rect x="231.6" y="357" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="234.62" y="367.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (16,392,640 samples, 0.04%)</title><rect x="442.6" y="373" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="445.55" y="383.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (307,657,099 samples, 0.73%)</title><rect x="530.2" y="245" width="8.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="533.25" y="255.5" ></text>
</g>
<g >
<title>rb_next_postorder (27,783,194 samples, 0.07%)</title><rect x="750.6" y="261" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="753.62" y="271.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.86" y="287.5" ></text>
</g>
<g >
<title>make_vfsuid (10,416,654 samples, 0.02%)</title><rect x="975.1" y="181" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="978.11" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (131,398,275 samples, 0.31%)</title><rect x="10.5" y="485" width="3.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.49" y="495.5" ></text>
</g>
<g >
<title>folio_mark_accessed (11,663,426 samples, 0.03%)</title><rect x="583.3" y="149" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="586.32" y="159.5" ></text>
</g>
<g >
<title>mmap_region (10,465,173 samples, 0.02%)</title><rect x="355.1" y="165" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="358.06" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (11,155,363 samples, 0.03%)</title><rect x="403.5" y="421" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="406.45" y="431.5" ></text>
</g>
<g >
<title>exc_page_fault (15,905,571 samples, 0.04%)</title><rect x="1180.3" y="261" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1183.27" y="271.5" ></text>
</g>
<g >
<title>fsnotify (43,751,969 samples, 0.10%)</title><rect x="931.5" y="213" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="934.52" y="223.5" ></text>
</g>
<g >
<title>[[x_tables]] (476,830,687 samples, 1.13%)</title><rect x="939.2" y="181" width="13.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="942.20" y="191.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (22,143,869 samples, 0.05%)</title><rect x="922.5" y="181" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="925.49" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (19,741,229 samples, 0.05%)</title><rect x="144.5" y="357" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="147.50" y="367.5" ></text>
</g>
<g >
<title>start._start (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="517" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.86" y="527.5" ></text>
</g>
<g >
<title>rb_next (59,496,768 samples, 0.14%)</title><rect x="670.9" y="277" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="673.87" y="287.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="165" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1183.72" y="175.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (161,573,294 samples, 0.38%)</title><rect x="407.7" y="405" width="4.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="410.71" y="415.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (65,168,627 samples, 0.15%)</title><rect x="917.7" y="213" width="1.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="920.67" y="223.5" ></text>
</g>
<g >
<title>mas_alloc_nodes (4,847,162 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.86" y="239.5" ></text>
</g>
<g >
<title>debug.assert (18,921,140 samples, 0.04%)</title><rect x="1037.6" y="389" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1040.60" y="399.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="485" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1192.86" y="495.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (17,891,542 samples, 0.04%)</title><rect x="274.0" y="293" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="276.97" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (11,781,263 samples, 0.03%)</title><rect x="697.1" y="325" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="700.06" y="335.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (159,101,329 samples, 0.38%)</title><rect x="945.3" y="133" width="4.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="948.34" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (450,035,001 samples, 1.06%)</title><rect x="829.1" y="405" width="12.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="832.06" y="415.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (2,296,227,215 samples, 5.43%)</title><rect x="538.8" y="245" width="64.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="541.82" y="255.5" >__ext4_..</text>
</g>
<g >
<title>fsnotify (168,037,680 samples, 0.40%)</title><rect x="672.5" y="293" width="4.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="675.53" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,664,686,884 samples, 3.93%)</title><rect x="357.0" y="421" width="46.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="360.03" y="431.5" >comp..</text>
</g>
<g >
<title>posix.errno__anon_7363 (17,682,370 samples, 0.04%)</title><rect x="853.5" y="373" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="856.48" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (16,688,317 samples, 0.04%)</title><rect x="944.6" y="133" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="947.58" y="143.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (18,864,482 samples, 0.04%)</title><rect x="443.0" y="389" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="446.01" y="399.5" ></text>
</g>
<g >
<title>combined_runner (42,314,939,652 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >combined_runner</text>
</g>
<g >
<title>scheduler_tick (17,666,118 samples, 0.04%)</title><rect x="851.6" y="261" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="854.65" y="271.5" ></text>
</g>
<g >
<title>update_process_times (19,741,229 samples, 0.05%)</title><rect x="144.5" y="341" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="147.50" y="351.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,033,286,775 samples, 2.44%)</title><rect x="1023.5" y="405" width="28.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1026.53" y="415.5" >po..</text>
</g>
<g >
<title>mod_memcg_lruvec_state (10,239,419 samples, 0.02%)</title><rect x="916.4" y="165" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="919.39" y="175.5" ></text>
</g>
<g >
<title>task_work_run (309,295,516 samples, 0.73%)</title><rect x="1181.2" y="437" width="8.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1184.24" y="447.5" ></text>
</g>
<g >
<title>[unknown] (327,119,759 samples, 0.77%)</title><rect x="10.0" y="517" width="9.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>file_ra_state_init (36,765,611 samples, 0.09%)</title><rect x="930.5" y="213" width="1.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="933.50" y="223.5" ></text>
</g>
<g >
<title>fsnotify (18,918,364 samples, 0.04%)</title><rect x="501.2" y="277" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="504.24" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (10,988,657 samples, 0.03%)</title><rect x="951.9" y="149" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="954.90" y="159.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,083,632,198 samples, 2.56%)</title><rect x="553.4" y="165" width="30.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="556.43" y="175.5" >__..</text>
</g>
<g >
<title>__hrtimer_run_queues (17,891,542 samples, 0.04%)</title><rect x="274.0" y="389" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="276.97" y="399.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (53,694,052 samples, 0.13%)</title><rect x="459.7" y="309" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="462.66" y="319.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (19,073,983 samples, 0.05%)</title><rect x="949.8" y="165" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="952.78" y="175.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (17,600,670 samples, 0.04%)</title><rect x="336.3" y="405" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="339.30" y="415.5" ></text>
</g>
<g >
<title>build_open_flags (51,298,680 samples, 0.12%)</title><rect x="879.6" y="261" width="1.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="882.63" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (11,944,345 samples, 0.03%)</title><rect x="1020.3" y="277" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1023.32" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (114,538,071 samples, 0.27%)</title><rect x="342.6" y="389" width="3.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="345.60" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (175,789,725 samples, 0.42%)</title><rect x="911.8" y="197" width="4.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="914.77" y="207.5" ></text>
</g>
<g >
<title>__bpf_tramp_enter (32,009,337 samples, 0.08%)</title><rect x="951.3" y="165" width="0.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="954.32" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,007,614 samples, 0.04%)</title><rect x="178.5" y="437" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="181.54" y="447.5" ></text>
</g>
<g >
<title>xas_descend (165,591,014 samples, 0.39%)</title><rect x="576.6" y="117" width="4.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="579.56" y="127.5" ></text>
</g>
<g >
<title>do_mmap (18,691,596 samples, 0.04%)</title><rect x="1180.7" y="149" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1183.72" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (22,376,028 samples, 0.05%)</title><rect x="1004.5" y="229" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1007.53" y="239.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (7,877,698,727 samples, 18.62%)</title><rect x="481.5" y="373" width="219.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="484.47" y="383.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,896,991 samples, 0.03%)</title><rect x="316.5" y="405" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="319.52" y="415.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14,980,350 samples, 0.04%)</title><rect x="231.6" y="373" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="234.62" y="383.5" ></text>
</g>
<g >
<title>make_vfsuid (32,427,373 samples, 0.08%)</title><rect x="685.0" y="261" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="688.04" y="271.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (498,190,397 samples, 1.18%)</title><rect x="1038.4" y="373" width="13.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1041.45" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (106,113,222 samples, 0.25%)</title><rect x="352.9" y="421" width="3.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="355.92" y="431.5" ></text>
</g>
<g >
<title>Thread.join (4,869,359 samples, 0.01%)</title><rect x="1189.9" y="437" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1192.86" y="447.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (36,339,731 samples, 0.09%)</title><rect x="1050.6" y="309" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1053.62" y="319.5" ></text>
</g>
<g >
<title>debug.assert (17,688,389 samples, 0.04%)</title><rect x="345.3" y="373" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="348.30" y="383.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (23,803,809 samples, 0.06%)</title><rect x="232.0" y="469" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="235.04" y="479.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (62,490,303 samples, 0.15%)</title><rect x="601.1" y="165" width="1.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="604.12" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,417,706,708 samples, 17.53%)</title><rect x="490.5" y="341" width="206.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="493.54" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>mem.eql__anon_4894 (345,374,715 samples, 0.82%)</title><rect x="701.5" y="405" width="9.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="704.46" y="415.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (919,708,814 samples, 2.17%)</title><rect x="206.4" y="453" width="25.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="209.39" y="463.5" >m..</text>
</g>
<g >
<title>mas_prev_slot (10,465,173 samples, 0.02%)</title><rect x="355.1" y="149" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="358.06" y="159.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (1,260,084,119 samples, 2.98%)</title><rect x="444.7" y="389" width="35.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="447.75" y="399.5" >me..</text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (17,823,755 samples, 0.04%)</title><rect x="462.0" y="293" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="465.00" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,208,010 samples, 0.03%)</title><rect x="1004.2" y="197" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1007.21" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (2,115,108,876 samples, 5.00%)</title><rect x="718.0" y="373" width="59.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="721.02" y="383.5" >os.lin..</text>
</g>
<g >
<title>mntget (10,933,190 samples, 0.03%)</title><rect x="936.4" y="197" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="939.41" y="207.5" ></text>
</g>
</g>
</svg>
