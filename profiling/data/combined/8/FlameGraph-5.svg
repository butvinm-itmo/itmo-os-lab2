<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="630.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="613" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="613" > </text>
<g id="frames">
<g >
<title>dput (199,401,142 samples, 0.41%)</title><rect x="1015.2" y="245" width="4.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1018.18" y="255.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (46,548,795 samples, 0.09%)</title><rect x="316.9" y="437" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.88" y="447.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (45,516,088 samples, 0.09%)</title><rect x="433.1" y="405" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="436.11" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="373" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.86" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (213,661,349 samples, 0.43%)</title><rect x="10.2" y="517" width="5.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.24" y="527.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (7,465,364,293 samples, 15.17%)</title><rect x="873.0" y="437" width="179.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="876.05" y="447.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>bpf_lsm_file_open (518,383,933 samples, 1.05%)</title><rect x="979.2" y="229" width="12.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="982.16" y="239.5" ></text>
</g>
<g >
<title>ext4_release_dir (829,142,619 samples, 1.69%)</title><rect x="750.3" y="325" width="19.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="753.30" y="335.5" ></text>
</g>
<g >
<title>handle_softirqs (10,862,553 samples, 0.02%)</title><rect x="427.0" y="341" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="430.03" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (16,463,530 samples, 0.03%)</title><rect x="272.8" y="389" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="275.79" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,833,558,602 samples, 19.99%)</title><rect x="486.7" y="373" width="235.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="489.66" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>__irq_exit_rcu (16,463,530 samples, 0.03%)</title><rect x="272.8" y="453" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="275.79" y="463.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (108,245,895 samples, 0.22%)</title><rect x="318.9" y="453" width="2.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="321.86" y="463.5" ></text>
</g>
<g >
<title>fsnotify (55,607,592 samples, 0.11%)</title><rect x="973.0" y="245" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="976.02" y="255.5" ></text>
</g>
<g >
<title>perf_event_mmap (12,760,220 samples, 0.03%)</title><rect x="1189.6" y="149" width="0.3" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1192.55" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (13,291,560 samples, 0.03%)</title><rect x="677.8" y="197" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="680.79" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (6,759,300,810 samples, 13.74%)</title><rect x="890.0" y="421" width="162.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="892.98" y="431.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>posix.close (2,658,809,246 samples, 5.40%)</title><rect x="735.3" y="437" width="63.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="738.27" y="447.5" >posix.c..</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (82,791,981 samples, 0.17%)</title><rect x="681.3" y="277" width="2.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="684.34" y="287.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (10,561,995,604 samples, 21.47%)</title><rect x="477.2" y="405" width="253.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="480.16" y="415.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (29,125,403 samples, 0.06%)</title><rect x="1051.4" y="389" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1054.38" y="399.5" ></text>
</g>
<g >
<title>__legitimize_mnt (74,756,663 samples, 0.15%)</title><rect x="961.6" y="213" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="964.58" y="223.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (48,386,737 samples, 0.10%)</title><rect x="616.0" y="197" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="618.99" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (44,965,230 samples, 0.09%)</title><rect x="322.4" y="437" width="1.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="325.36" y="447.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (40,132,521 samples, 0.08%)</title><rect x="1188.3" y="325" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.31" y="335.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8450 (15,366,117 samples, 0.03%)</title><rect x="457.8" y="341" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="460.81" y="351.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (10,519,923 samples, 0.02%)</title><rect x="1021.2" y="293" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1024.22" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (8,911,602 samples, 0.02%)</title><rect x="683.1" y="181" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="686.11" y="191.5" ></text>
</g>
<g >
<title>debug.assert (9,200,082 samples, 0.02%)</title><rect x="327.8" y="437" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="330.81" y="447.5" ></text>
</g>
<g >
<title>update_process_times (18,130,746 samples, 0.04%)</title><rect x="949.9" y="101" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="952.88" y="111.5" ></text>
</g>
<g >
<title>task_tick_fair (8,954,264 samples, 0.02%)</title><rect x="860.4" y="277" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="863.39" y="287.5" ></text>
</g>
<g >
<title>__brelse (71,525,288 samples, 0.15%)</title><rect x="548.2" y="277" width="1.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="551.24" y="287.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (17,737,002 samples, 0.04%)</title><rect x="958.2" y="165" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="961.19" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,871,384 samples, 0.04%)</title><rect x="952.9" y="213" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="955.89" y="223.5" ></text>
</g>
<g >
<title>ext4_getblk (11,153,907 samples, 0.02%)</title><rect x="538.3" y="245" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="541.29" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="213" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.27" y="223.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,266,802,875 samples, 2.57%)</title><rect x="164.4" y="485" width="30.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="167.43" y="495.5" >li..</text>
</g>
<g >
<title>hrtimer_interrupt (11,824,021 samples, 0.02%)</title><rect x="450.2" y="325" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="453.15" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="277" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1190.90" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,526,916 samples, 0.03%)</title><rect x="989.8" y="181" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="992.79" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (13,291,560 samples, 0.03%)</title><rect x="677.8" y="181" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="680.79" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (246,459,085 samples, 0.50%)</title><rect x="392.6" y="437" width="5.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="395.58" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="261" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.58" y="271.5" ></text>
</g>
<g >
<title>up_read (48,045,429 samples, 0.10%)</title><rect x="711.1" y="325" width="1.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="714.14" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (138,018,190 samples, 0.28%)</title><rect x="16.6" y="533" width="3.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="19.56" y="543.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (242,971,490 samples, 0.49%)</title><rect x="427.3" y="405" width="5.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="430.29" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (12,846,696 samples, 0.03%)</title><rect x="332.8" y="437" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="335.83" y="447.5" ></text>
</g>
<g >
<title>__fput_sync (40,735,237 samples, 0.08%)</title><rect x="778.8" y="341" width="1.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="781.79" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="357" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1190.90" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (9,605,754 samples, 0.02%)</title><rect x="277.5" y="469" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="280.50" y="479.5" ></text>
</g>
<g >
<title>vfs_open (10,601,417 samples, 0.02%)</title><rect x="1020.2" y="261" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1023.23" y="271.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (9,554,379 samples, 0.02%)</title><rect x="1097.1" y="373" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1100.14" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,463,530 samples, 0.03%)</title><rect x="272.8" y="469" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="275.79" y="479.5" ></text>
</g>
<g >
<title>rcu_do_batch (13,291,560 samples, 0.03%)</title><rect x="677.8" y="149" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="680.79" y="159.5" ></text>
</g>
<g >
<title>reweight_entity (18,130,746 samples, 0.04%)</title><rect x="949.9" y="53" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="952.88" y="63.5" ></text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (17,585,534 samples, 0.04%)</title><rect x="458.2" y="357" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="461.17" y="367.5" ></text>
</g>
<g >
<title>debug.assert (17,370,789 samples, 0.04%)</title><rect x="331.8" y="437" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="334.77" y="447.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (649,217,304 samples, 1.32%)</title><rect x="458.6" y="373" width="15.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="461.60" y="383.5" ></text>
</g>
<g >
<title>mt_find (11,635,056 samples, 0.02%)</title><rect x="1189.3" y="117" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1192.27" y="127.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (22,656,344 samples, 0.05%)</title><rect x="1075.7" y="405" width="0.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1078.72" y="415.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (10,563,122,950 samples, 21.47%)</title><rect x="19.9" y="517" width="253.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="22.87" y="527.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>do_filp_open (4,304,749,886 samples, 8.75%)</title><rect x="917.3" y="293" width="103.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="920.25" y="303.5" >do_filp_open</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,564,777 samples, 0.02%)</title><rect x="797.8" y="405" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="800.75" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,862,553 samples, 0.02%)</title><rect x="427.0" y="373" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="430.03" y="383.5" ></text>
</g>
<g >
<title>mem.eqlBytes (24,576,057 samples, 0.05%)</title><rect x="1097.4" y="421" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1100.37" y="431.5" ></text>
</g>
<g >
<title>do_vmi_munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="325" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.86" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (20,106,654 samples, 0.04%)</title><rect x="860.1" y="373" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="863.12" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (17,446,282 samples, 0.04%)</title><rect x="956.8" y="197" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="959.75" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,463,530 samples, 0.03%)</title><rect x="272.8" y="357" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="275.79" y="367.5" ></text>
</g>
<g >
<title>handle_softirqs (11,957,568 samples, 0.02%)</title><rect x="599.0" y="85" width="0.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="601.97" y="95.5" ></text>
</g>
<g >
<title>scheduler_tick (20,106,654 samples, 0.04%)</title><rect x="860.1" y="293" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="863.12" y="303.5" ></text>
</g>
<g >
<title>rb_next_postorder (65,378,120 samples, 0.13%)</title><rect x="762.5" y="293" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="765.48" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,148,792 samples, 0.04%)</title><rect x="288.8" y="453" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="291.75" y="463.5" ></text>
</g>
<g >
<title>debug.inValgrind (219,781,355 samples, 0.45%)</title><rect x="451.1" y="373" width="5.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="454.06" y="383.5" ></text>
</g>
<g >
<title>do_sys_openat2 (5,687,564,692 samples, 11.56%)</title><rect x="909.1" y="309" width="136.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="912.06" y="319.5" >do_sys_openat2</text>
</g>
<g >
<title>__schedule (11,674,753 samples, 0.02%)</title><rect x="382.7" y="373" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="385.73" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="405" width="1.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.31" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (44,965,230 samples, 0.09%)</title><rect x="322.4" y="421" width="1.0" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="325.36" y="431.5" ></text>
</g>
<g >
<title>__fput (1,385,596,719 samples, 2.82%)</title><rect x="745.6" y="341" width="33.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="748.56" y="351.5" >__..</text>
</g>
<g >
<title>obj_cgroup_charge (70,918,910 samples, 0.14%)</title><rect x="957.6" y="229" width="1.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="960.61" y="239.5" ></text>
</g>
<g >
<title>do_mmap (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="181" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.27" y="191.5" ></text>
</g>
<g >
<title>__call_rcu_common (142,693,820 samples, 0.29%)</title><rect x="742.1" y="341" width="3.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="745.14" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,739,079 samples, 0.04%)</title><rect x="531.7" y="277" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="534.66" y="287.5" ></text>
</g>
<g >
<title>fs.Dir.close (2,822,420,908 samples, 5.74%)</title><rect x="731.8" y="453" width="67.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="734.76" y="463.5" >fs.Dir...</text>
</g>
<g >
<title>lookup_fast (291,142,584 samples, 0.59%)</title><rect x="996.6" y="261" width="7.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="999.61" y="271.5" ></text>
</g>
<g >
<title>mas_spanning_rebalance.isra.0 (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.86" y="271.5" ></text>
</g>
<g >
<title>[unknown] (283,558,678 samples, 0.58%)</title><rect x="980.4" y="197" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="983.35" y="207.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (16,463,530 samples, 0.03%)</title><rect x="272.8" y="373" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="275.79" y="383.5" ></text>
</g>
<g >
<title>putname (12,086,118 samples, 0.02%)</title><rect x="1045.2" y="293" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1048.16" y="303.5" ></text>
</g>
<g >
<title>[[x_tables]] (478,176,803 samples, 0.97%)</title><rect x="979.6" y="213" width="11.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="982.59" y="223.5" ></text>
</g>
<g >
<title>xas_descend (128,107,337 samples, 0.26%)</title><rect x="596.2" y="149" width="3.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="599.19" y="159.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (211,462,191 samples, 0.43%)</title><rect x="895.5" y="373" width="5.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="898.52" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (18,130,746 samples, 0.04%)</title><rect x="949.9" y="69" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="952.88" y="79.5" ></text>
</g>
<g >
<title>_raw_read_lock (83,324,807 samples, 0.17%)</title><rect x="612.2" y="197" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="615.19" y="207.5" ></text>
</g>
<g >
<title>mod_memcg_state (17,737,002 samples, 0.04%)</title><rect x="958.2" y="197" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="961.19" y="207.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_7366 (31,221,765 samples, 0.06%)</title><rect x="457.4" y="357" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="460.43" y="367.5" ></text>
</g>
<g >
<title>kmem_cache_free (132,734,089 samples, 0.27%)</title><rect x="772.8" y="325" width="3.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="775.84" y="335.5" ></text>
</g>
<g >
<title>debug.assert (15,366,117 samples, 0.03%)</title><rect x="457.8" y="325" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="460.81" y="335.5" ></text>
</g>
<g >
<title>rcu_core (11,957,568 samples, 0.02%)</title><rect x="599.0" y="69" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="601.97" y="79.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,911,602 samples, 0.02%)</title><rect x="683.1" y="229" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="686.11" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="309" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1191.58" y="319.5" ></text>
</g>
<g >
<title>start.callMainWithArgs (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="517" width="0.1" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1192.86" y="527.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,291,560 samples, 0.03%)</title><rect x="677.8" y="229" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="680.79" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (193,124,732 samples, 0.39%)</title><rect x="938.7" y="213" width="4.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="941.74" y="223.5" ></text>
</g>
<g >
<title>__memset (10,716,208 samples, 0.02%)</title><rect x="942.7" y="197" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="945.70" y="207.5" ></text>
</g>
<g >
<title>___slab_alloc (115,638,413 samples, 0.24%)</title><rect x="946.9" y="229" width="2.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="949.87" y="239.5" ></text>
</g>
<g >
<title>touch_atime (104,886,329 samples, 0.21%)</title><rect x="708.6" y="325" width="2.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="711.62" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (263,272,384 samples, 0.54%)</title><rect x="10.2" y="533" width="6.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.24" y="543.5" ></text>
</g>
<g >
<title>dnotify_flush (140,269,941 samples, 0.29%)</title><rect x="784.5" y="325" width="3.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="787.46" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,758,576 samples, 0.03%)</title><rect x="872.4" y="421" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="875.36" y="431.5" ></text>
</g>
<g >
<title>iterate_dir (8,634,188,510 samples, 17.55%)</title><rect x="505.2" y="341" width="207.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="508.23" y="351.5" >iterate_dir</text>
</g>
<g >
<title>valgrind.doClientRequestExpr (18,552,827 samples, 0.04%)</title><rect x="1074.9" y="373" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1077.95" y="383.5" ></text>
</g>
<g >
<title>complete_walk (162,605,725 samples, 0.33%)</title><rect x="960.6" y="261" width="3.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="963.62" y="271.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (431,439,484 samples, 0.88%)</title><rect x="550.0" y="277" width="10.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="552.95" y="287.5" ></text>
</g>
<g >
<title>update_process_times (18,272,218 samples, 0.04%)</title><rect x="748.0" y="197" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="751.02" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,130,746 samples, 0.04%)</title><rect x="949.9" y="133" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="952.88" y="143.5" ></text>
</g>
<g >
<title>task_tick_fair (11,052,620 samples, 0.02%)</title><rect x="135.0" y="341" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="137.96" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (1,392,882,070 samples, 2.83%)</title><rect x="440.8" y="389" width="33.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="443.76" y="399.5" >me..</text>
</g>
<g >
<title>make_vfsuid (19,126,814 samples, 0.04%)</title><rect x="995.7" y="213" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="998.70" y="223.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (10,919,760 samples, 0.02%)</title><rect x="440.5" y="389" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="443.50" y="399.5" ></text>
</g>
<g >
<title>[unknown] (411,365,538 samples, 0.84%)</title><rect x="10.0" y="549" width="9.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (11,814,520 samples, 0.02%)</title><rect x="1047.8" y="309" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1050.83" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (9,117,930 samples, 0.02%)</title><rect x="954.1" y="213" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="957.05" y="223.5" ></text>
</g>
<g >
<title>do_dentry_open (1,204,503,864 samples, 2.45%)</title><rect x="964.5" y="261" width="28.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="967.51" y="271.5" >do..</text>
</g>
<g >
<title>update_cfs_group (8,954,264 samples, 0.02%)</title><rect x="860.4" y="261" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="863.39" y="271.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (152,771,193 samples, 0.31%)</title><rect x="982.5" y="181" width="3.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="985.49" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,148,792 samples, 0.04%)</title><rect x="288.8" y="421" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="291.75" y="431.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (11,789,229 samples, 0.02%)</title><rect x="759.9" y="277" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="762.95" y="287.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (612,700,959 samples, 1.25%)</title><rect x="419.5" y="421" width="14.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="422.51" y="431.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (218,949,108 samples, 0.44%)</title><rect x="716.9" y="341" width="5.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="719.87" y="351.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (2,370,723,385 samples, 4.82%)</title><rect x="560.3" y="277" width="56.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="563.30" y="287.5" >__ext4..</text>
</g>
<g >
<title>debug.assert (25,985,997 samples, 0.05%)</title><rect x="450.4" y="373" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="453.44" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,911,602 samples, 0.02%)</title><rect x="683.1" y="245" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="686.11" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (388,312,449 samples, 0.79%)</title><rect x="1022.4" y="277" width="9.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1025.38" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="229" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.58" y="239.5" ></text>
</g>
<g >
<title>__legitimize_path (122,362,521 samples, 0.25%)</title><rect x="961.6" y="229" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="964.58" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (17,664,519 samples, 0.04%)</title><rect x="760.2" y="277" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="763.23" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (19,338,484 samples, 0.04%)</title><rect x="273.2" y="485" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="276.18" y="495.5" ></text>
</g>
<g >
<title>__alloc_pages (17,852,847 samples, 0.04%)</title><rect x="947.9" y="197" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="950.87" y="207.5" ></text>
</g>
<g >
<title>combined_runner.main (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="485" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1192.86" y="495.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (12,187,681 samples, 0.02%)</title><rect x="277.2" y="469" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="280.21" y="479.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (21,977,714 samples, 0.04%)</title><rect x="289.2" y="469" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="292.19" y="479.5" ></text>
</g>
<g >
<title>start.callMain (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="501" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1192.86" y="511.5" ></text>
</g>
<g >
<title>generic_permission (27,530,839 samples, 0.06%)</title><rect x="1004.2" y="229" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1007.21" y="239.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (16,463,530 samples, 0.03%)</title><rect x="272.8" y="341" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="275.79" y="351.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (13,516,671 samples, 0.03%)</title><rect x="1075.4" y="357" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1078.39" y="367.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (18,148,048 samples, 0.04%)</title><rect x="273.9" y="485" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="276.89" y="495.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (658,796,798 samples, 1.34%)</title><rect x="194.8" y="485" width="15.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="197.81" y="495.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (39,866,227 samples, 0.08%)</title><rect x="1049.1" y="357" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1052.11" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (17,088,341 samples, 0.03%)</title><rect x="943.0" y="197" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="945.96" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_free (245,483,126 samples, 0.50%)</title><rect x="753.8" y="293" width="5.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="756.82" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,961,885,991 samples, 12.12%)</title><rect x="906.1" y="341" width="143.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="909.13" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>__unfreeze_partials (17,664,519 samples, 0.04%)</title><rect x="760.2" y="293" width="0.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="763.23" y="303.5" ></text>
</g>
<g >
<title>expand_files (21,884,677 samples, 0.04%)</title><rect x="915.2" y="277" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="918.20" y="287.5" ></text>
</g>
<g >
<title>__find_get_block (11,153,907 samples, 0.02%)</title><rect x="538.3" y="213" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="541.29" y="223.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (17,058,426 samples, 0.03%)</title><rect x="1060.0" y="421" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1063.02" y="431.5" ></text>
</g>
<g >
<title>kfree (255,716,316 samples, 0.52%)</title><rect x="764.1" y="309" width="6.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="767.05" y="319.5" ></text>
</g>
<g >
<title>pick_next_task_fair (17,739,079 samples, 0.04%)</title><rect x="531.7" y="229" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="534.66" y="239.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (1,202,234,965 samples, 2.44%)</title><rect x="135.6" y="485" width="28.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="138.60" y="495.5" >li..</text>
</g>
<g >
<title>update_process_times (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="149" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1033.71" y="159.5" ></text>
</g>
<g >
<title>try_module_get (11,491,103 samples, 0.02%)</title><rect x="993.1" y="245" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="996.12" y="255.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="309" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.86" y="319.5" ></text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (4,523,525,200 samples, 9.19%)</title><rect x="1079.8" y="437" width="108.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1082.83" y="447.5" >mem.indexOfPo..</text>
</g>
<g >
<title>tick_sched_handle (18,130,746 samples, 0.04%)</title><rect x="949.9" y="117" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="952.88" y="127.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="389" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.31" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="213" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1033.71" y="223.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (32,744,747,735 samples, 66.55%)</title><rect x="291.0" y="469" width="785.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="293.99" y="479.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>os.linux.openat (6,287,758,207 samples, 12.78%)</title><rect x="900.6" y="389" width="150.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="903.59" y="399.5" >os.linux.openat</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,984,628,709 samples, 4.03%)</title><rect x="335.4" y="453" width="47.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="338.42" y="463.5" >comp..</text>
</g>
<g >
<title>c.clone (48,787,422,049 samples, 99.15%)</title><rect x="19.9" y="549" width="1170.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="22.87" y="559.5" >c.clone</text>
</g>
<g >
<title>mntput_no_expire (73,513,069 samples, 0.15%)</title><rect x="776.4" y="325" width="1.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="779.42" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (308,084,774 samples, 0.63%)</title><rect x="715.1" y="357" width="7.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="718.09" y="367.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (18,587,132 samples, 0.04%)</title><rect x="1045.5" y="325" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1048.45" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,895,229 samples, 0.02%)</title><rect x="427.0" y="389" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="430.03" y="399.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,758,576 samples, 0.03%)</title><rect x="872.4" y="389" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="875.36" y="399.5" ></text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (34,721,094 samples, 0.07%)</title><rect x="474.6" y="389" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="477.60" y="399.5" ></text>
</g>
<g >
<title>rb_next_postorder (10,266,193 samples, 0.02%)</title><rect x="684.9" y="293" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="687.91" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (54,887,260 samples, 0.11%)</title><rect x="1050.1" y="357" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1053.06" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (28,800,582 samples, 0.06%)</title><rect x="134.5" y="405" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="137.53" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (9,381,741,371 samples, 19.07%)</title><rect x="488.2" y="357" width="225.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="491.19" y="367.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>check_stack_object (20,829,356 samples, 0.04%)</title><rect x="1042.8" y="245" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1045.83" y="255.5" ></text>
</g>
<g >
<title>psi_group_change (10,564,777 samples, 0.02%)</title><rect x="797.8" y="309" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="800.75" y="319.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (17,142,179 samples, 0.03%)</title><rect x="990.6" y="197" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="993.65" y="207.5" ></text>
</g>
<g >
<title>mem.eqlBytes (2,663,504,040 samples, 5.41%)</title><rect x="1104.2" y="405" width="63.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1107.24" y="415.5" >mem.eql..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,272,218 samples, 0.04%)</title><rect x="748.0" y="293" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="751.02" y="303.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (266,473,618 samples, 0.54%)</title><rect x="997.2" y="245" width="6.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1000.20" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,862,553 samples, 0.02%)</title><rect x="427.0" y="293" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="430.03" y="303.5" ></text>
</g>
<g >
<title>__slab_free (21,882,483 samples, 0.04%)</title><rect x="759.7" y="293" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="762.71" y="303.5" ></text>
</g>
<g >
<title>atime_needs_update (75,417,589 samples, 0.15%)</title><rect x="709.3" y="309" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="712.33" y="319.5" ></text>
</g>
<g >
<title>path_openat (4,206,014,566 samples, 8.55%)</title><rect x="919.6" y="277" width="100.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="922.62" y="287.5" >path_openat</text>
</g>
<g >
<title>fs.Dir.iterateImpl (71,483,870 samples, 0.15%)</title><rect x="804.7" y="437" width="1.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="807.73" y="447.5" ></text>
</g>
<g >
<title>handle_softirqs (16,758,576 samples, 0.03%)</title><rect x="872.4" y="373" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="875.36" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (10,982,324 samples, 0.02%)</title><rect x="607.6" y="181" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="610.61" y="191.5" ></text>
</g>
<g >
<title>lockref_put_return (125,333,508 samples, 0.25%)</title><rect x="1017.0" y="229" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1019.96" y="239.5" ></text>
</g>
<g >
<title>security_inode_permission (18,703,750 samples, 0.04%)</title><rect x="996.2" y="245" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="999.16" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (28,279,830 samples, 0.06%)</title><rect x="796.5" y="389" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="799.48" y="399.5" ></text>
</g>
<g >
<title>try_to_unlazy (152,563,826 samples, 0.31%)</title><rect x="960.9" y="245" width="3.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="963.86" y="255.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (17,739,079 samples, 0.04%)</title><rect x="531.7" y="261" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="534.66" y="271.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (87,307,031 samples, 0.18%)</title><rect x="950.8" y="213" width="2.1" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="953.80" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,012,983,296 samples, 12.22%)</title><rect x="904.9" y="357" width="144.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="907.91" y="367.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>pick_file (115,018,767 samples, 0.23%)</title><rect x="781.5" y="325" width="2.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="784.46" y="335.5" ></text>
</g>
<g >
<title>strncpy_from_user (485,127,309 samples, 0.99%)</title><rect x="1031.7" y="277" width="11.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1034.69" y="287.5" ></text>
</g>
<g >
<title>__vm_munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="341" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.86" y="351.5" ></text>
</g>
<g >
<title>mntget (18,280,161 samples, 0.04%)</title><rect x="977.8" y="229" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="980.84" y="239.5" ></text>
</g>
<g >
<title>debug.assert (32,876,838 samples, 0.07%)</title><rect x="334.6" y="437" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="337.63" y="447.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (13,853,404,829 samples, 28.15%)</title><rect x="398.5" y="437" width="332.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="401.49" y="447.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>fput (110,894,646 samples, 0.23%)</title><rect x="1010.0" y="245" width="2.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1013.01" y="255.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (10,978,644 samples, 0.02%)</title><rect x="730.7" y="437" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="733.71" y="447.5" ></text>
</g>
<g >
<title>perf_event_task_tick (18,272,218 samples, 0.04%)</title><rect x="748.0" y="165" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="751.02" y="175.5" ></text>
</g>
<g >
<title>memcg_alloc_slab_cgroups (12,102,949 samples, 0.02%)</title><rect x="948.3" y="197" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="951.30" y="207.5" ></text>
</g>
<g >
<title>lockref_put_return (76,777,800 samples, 0.16%)</title><rect x="748.5" y="309" width="1.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="751.46" y="319.5" ></text>
</g>
<g >
<title>rb_first_postorder (19,040,617 samples, 0.04%)</title><rect x="762.0" y="293" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="765.03" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="421" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.31" y="431.5" ></text>
</g>
<g >
<title>load_balance (16,463,530 samples, 0.03%)</title><rect x="272.8" y="405" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="275.79" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (20,106,654 samples, 0.04%)</title><rect x="860.1" y="389" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="863.12" y="399.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (17,218,686 samples, 0.03%)</title><rect x="1005.3" y="229" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1008.27" y="239.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (478,921,431 samples, 0.97%)</title><rect x="752.6" y="309" width="11.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="755.57" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (28,800,582 samples, 0.06%)</title><rect x="134.5" y="469" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="137.53" y="479.5" ></text>
</g>
<g >
<title>__rcu_read_lock (21,751,516 samples, 0.04%)</title><rect x="498.1" y="309" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="501.10" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (307,797,131 samples, 0.63%)</title><rect x="688.3" y="293" width="7.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="691.30" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (18,272,218 samples, 0.04%)</title><rect x="748.0" y="229" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="751.02" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (55,158,097 samples, 0.11%)</title><rect x="1046.5" y="309" width="1.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1049.51" y="319.5" ></text>
</g>
<g >
<title>make_vfsgid (10,326,668 samples, 0.02%)</title><rect x="710.0" y="293" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="712.97" y="303.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (49,970,467 samples, 0.10%)</title><rect x="320.3" y="437" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="323.25" y="447.5" ></text>
</g>
<g >
<title>generic_permission (50,301,818 samples, 0.10%)</title><rect x="995.0" y="229" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="997.95" y="239.5" ></text>
</g>
<g >
<title>update_rq_clock (11,824,021 samples, 0.02%)</title><rect x="450.2" y="229" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="453.15" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_free (78,501,043 samples, 0.16%)</title><rect x="678.5" y="293" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="681.50" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_thermal (9,554,379 samples, 0.02%)</title><rect x="1097.1" y="421" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1100.14" y="431.5" ></text>
</g>
<g >
<title>os.linux.munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1192.86" y="431.5" ></text>
</g>
<g >
<title>fsnotify (175,016,878 samples, 0.36%)</title><rect x="703.5" y="309" width="4.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="706.52" y="319.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (18,342,667 samples, 0.04%)</title><rect x="957.2" y="197" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="960.17" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,957,568 samples, 0.02%)</title><rect x="599.0" y="117" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="601.97" y="127.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).shrinkRetainingCapacity (60,279,807 samples, 0.12%)</title><rect x="334.0" y="453" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="336.97" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle (11,824,021 samples, 0.02%)</title><rect x="450.2" y="277" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="453.15" y="287.5" ></text>
</g>
<g >
<title>kfree (57,327,883 samples, 0.12%)</title><rect x="760.7" y="293" width="1.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="763.65" y="303.5" ></text>
</g>
<g >
<title>allocate_slab (29,955,796 samples, 0.06%)</title><rect x="947.9" y="213" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="950.87" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (18,130,746 samples, 0.04%)</title><rect x="949.9" y="197" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="952.88" y="207.5" ></text>
</g>
<g >
<title>security_file_free (25,091,189 samples, 0.05%)</title><rect x="778.2" y="325" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="781.18" y="335.5" ></text>
</g>
<g >
<title>terminate_walk (236,285,773 samples, 0.48%)</title><rect x="1014.6" y="261" width="5.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1017.57" y="271.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (141,544,561 samples, 0.29%)</title><rect x="982.8" y="165" width="3.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="985.76" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (18,342,667 samples, 0.04%)</title><rect x="957.2" y="181" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="960.17" y="191.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (2,562,734,749 samples, 5.21%)</title><rect x="735.7" y="405" width="61.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="738.70" y="415.5" >os.lin..</text>
</g>
<g >
<title>cache_from_obj (10,434,605 samples, 0.02%)</title><rect x="775.8" y="309" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="778.77" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,824,021 samples, 0.02%)</title><rect x="450.2" y="341" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="453.15" y="351.5" ></text>
</g>
<g >
<title>sched_clock (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="85" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1033.71" y="95.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (22,516,193 samples, 0.05%)</title><rect x="985.6" y="149" width="0.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="988.61" y="159.5" ></text>
</g>
<g >
<title>__call_rcu_common (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.86" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (54,400,032 samples, 0.11%)</title><rect x="959.3" y="245" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="962.31" y="255.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (188,805,006 samples, 0.38%)</title><rect x="1183.8" y="421" width="4.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1186.78" y="431.5" ></text>
</g>
<g >
<title>posix.munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="437" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.86" y="447.5" ></text>
</g>
<g >
<title>__find_get_block (1,645,480,789 samples, 3.34%)</title><rect x="563.5" y="213" width="39.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="566.47" y="223.5" >__f..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (35,837,222 samples, 0.07%)</title><rect x="318.0" y="437" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="321.00" y="447.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (11,635,056 samples, 0.02%)</title><rect x="1189.3" y="149" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1192.27" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (53,047,561 samples, 0.11%)</title><rect x="780.2" y="325" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="783.18" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="165" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1033.71" y="175.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall2 (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1192.86" y="415.5" ></text>
</g>
<g >
<title>kfree (10,053,266 samples, 0.02%)</title><rect x="683.3" y="293" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="686.32" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="357" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.86" y="367.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (14,969,265 samples, 0.03%)</title><rect x="722.1" y="341" width="0.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="725.12" y="351.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (133,680,636 samples, 0.27%)</title><rect x="993.4" y="261" width="3.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="996.40" y="271.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,645,480,789 samples, 3.34%)</title><rect x="563.5" y="229" width="39.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="566.47" y="239.5" >__g..</text>
</g>
<g >
<title>mem.eqlBytes (284,824,524 samples, 0.58%)</title><rect x="420.5" y="405" width="6.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="423.46" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="245" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1033.71" y="255.5" ></text>
</g>
<g >
<title>schedule (16,305,455 samples, 0.03%)</title><rect x="134.1" y="437" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="137.14" y="447.5" ></text>
</g>
<g >
<title>tick_sched_timer (20,106,654 samples, 0.04%)</title><rect x="860.1" y="341" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="863.12" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_state (17,737,002 samples, 0.04%)</title><rect x="958.2" y="181" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="961.19" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (31,705,753 samples, 0.06%)</title><rect x="331.0" y="437" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="334.01" y="447.5" ></text>
</g>
<g >
<title>start._start (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="549" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.86" y="559.5" ></text>
</g>
<g >
<title>posix.mmap (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="277" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.27" y="287.5" ></text>
</g>
<g >
<title>__slab_free (122,580,029 samples, 0.25%)</title><rect x="680.4" y="293" width="2.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="683.38" y="303.5" ></text>
</g>
<g >
<title>debug.assert (17,212,323 samples, 0.03%)</title><rect x="1073.8" y="389" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1076.75" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (63,280,602 samples, 0.13%)</title><rect x="694.2" y="277" width="1.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="697.17" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (137,355,934 samples, 0.28%)</title><rect x="722.7" y="389" width="3.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="725.69" y="399.5" ></text>
</g>
<g >
<title>fsnotify (50,193,392 samples, 0.10%)</title><rect x="976.1" y="229" width="1.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="979.12" y="239.5" ></text>
</g>
<g >
<title>locks_remove_posix (86,261,888 samples, 0.18%)</title><rect x="787.8" y="325" width="2.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="790.82" y="335.5" ></text>
</g>
<g >
<title>rcu_core (10,862,553 samples, 0.02%)</title><rect x="427.0" y="325" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="430.03" y="335.5" ></text>
</g>
<g >
<title>__memset (68,689,844 samples, 0.14%)</title><rect x="636.8" y="229" width="1.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="639.80" y="239.5" ></text>
</g>
<g >
<title>call_filldir (892,570,416 samples, 1.81%)</title><rect x="514.2" y="309" width="21.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="517.20" y="319.5" >c..</text>
</g>
<g >
<title>rcu_segcblist_enqueue (34,023,920 samples, 0.07%)</title><rect x="744.2" y="325" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="747.19" y="335.5" ></text>
</g>
<g >
<title>os.linux.mmap (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="261" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1192.27" y="271.5" ></text>
</g>
<g >
<title>filemap_get_entry (718,116,195 samples, 1.46%)</title><rect x="582.7" y="181" width="17.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="585.73" y="191.5" ></text>
</g>
<g >
<title>__htab_map_lookup_elem (18,282,755 samples, 0.04%)</title><rect x="980.6" y="181" width="0.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="983.63" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (507,126,672 samples, 1.03%)</title><rect x="860.6" y="437" width="12.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="863.60" y="447.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (113,070,247 samples, 0.23%)</title><rect x="793.8" y="389" width="2.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="796.76" y="399.5" ></text>
</g>
<g >
<title>amd_clear_divider (9,267,168 samples, 0.02%)</title><rect x="791.7" y="341" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="794.67" y="351.5" ></text>
</g>
<g >
<title>error_return (15,599,277 samples, 0.03%)</title><rect x="135.2" y="485" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="138.22" y="495.5" ></text>
</g>
<g >
<title>clear_page_erms (17,852,847 samples, 0.04%)</title><rect x="947.9" y="165" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="950.87" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (28,800,582 samples, 0.06%)</title><rect x="134.5" y="453" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="137.53" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="245" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.27" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (171,519,144 samples, 0.35%)</title><rect x="800.6" y="437" width="4.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="803.61" y="447.5" ></text>
</g>
<g >
<title>inode_permission (27,530,839 samples, 0.06%)</title><rect x="1004.2" y="245" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1007.21" y="255.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (607,476,921 samples, 1.23%)</title><rect x="1061.1" y="405" width="14.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1064.15" y="415.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (8,894,181 samples, 0.02%)</title><rect x="475.4" y="389" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="478.43" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="229" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.27" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,564,777 samples, 0.02%)</title><rect x="797.8" y="373" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="800.75" y="383.5" ></text>
</g>
<g >
<title>search_name.searchName (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="485" width="1.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1191.31" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_openat (5,762,894,130 samples, 11.71%)</title><rect x="907.3" y="325" width="138.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="910.25" y="335.5" >__x64_sys_openat</text>
</g>
<g >
<title>__irq_exit_rcu (10,862,553 samples, 0.02%)</title><rect x="427.0" y="357" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="430.03" y="367.5" ></text>
</g>
<g >
<title>__bpf_prog_enter (44,796,250 samples, 0.09%)</title><rect x="987.2" y="197" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="990.15" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="277" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1191.58" y="287.5" ></text>
</g>
<g >
<title>__fget_light (333,408,062 samples, 0.68%)</title><rect x="490.9" y="325" width="7.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="493.85" y="335.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (13,516,671 samples, 0.03%)</title><rect x="1075.4" y="373" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1078.39" y="383.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (47,384,410 samples, 0.10%)</title><rect x="789.9" y="357" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="792.89" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="133" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1033.71" y="143.5" ></text>
</g>
<g >
<title>__virt_addr_valid (111,086,839 samples, 0.23%)</title><rect x="1040.2" y="245" width="2.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1043.17" y="255.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (16,860,230 samples, 0.03%)</title><rect x="731.0" y="437" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="733.98" y="447.5" ></text>
</g>
<g >
<title>rb_first (9,357,316 samples, 0.02%)</title><rect x="695.7" y="309" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="698.69" y="319.5" ></text>
</g>
<g >
<title>all (49,204,657,657 samples, 100%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>may_open (87,547,795 samples, 0.18%)</title><rect x="1003.6" y="261" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1006.59" y="271.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (18,148,792 samples, 0.04%)</title><rect x="288.8" y="357" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="291.75" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,824,021 samples, 0.02%)</title><rect x="450.2" y="309" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="453.15" y="319.5" ></text>
</g>
<g >
<title>amd_clear_divider (45,499,486 samples, 0.09%)</title><rect x="715.8" y="341" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="718.78" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,288,081,485 samples, 4.65%)</title><rect x="738.9" y="373" width="54.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="741.89" y="383.5" >do_sy..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,106,654 samples, 0.04%)</title><rect x="860.1" y="405" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="863.12" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (114,076,598 samples, 0.23%)</title><rect x="316.1" y="453" width="2.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="319.12" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,824,021 samples, 0.02%)</title><rect x="450.2" y="293" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="453.15" y="303.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.join (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="453" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.86" y="463.5" ></text>
</g>
<g >
<title>os.linux.close (2,562,734,749 samples, 5.21%)</title><rect x="735.7" y="421" width="61.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="738.70" y="431.5" >os.lin..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,106,654 samples, 0.04%)</title><rect x="860.1" y="421" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="863.12" y="431.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (15,716,277 samples, 0.03%)</title><rect x="1079.5" y="437" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1082.45" y="447.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (477,795,669 samples, 0.97%)</title><rect x="277.7" y="469" width="11.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="280.73" y="479.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (626,012,816 samples, 1.27%)</title><rect x="1168.1" y="405" width="15.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1171.11" y="415.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (11,642,926 samples, 0.02%)</title><rect x="382.7" y="325" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="385.73" y="335.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (2,118,976,847 samples, 4.31%)</title><rect x="809.8" y="437" width="50.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="812.78" y="447.5" >compi..</text>
</g>
<g >
<title>mntput_no_expire (11,297,894 samples, 0.02%)</title><rect x="1020.0" y="245" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1022.96" y="255.5" ></text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (43,331,123 samples, 0.09%)</title><rect x="438.4" y="405" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="441.42" y="415.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (1,108,578,912 samples, 2.25%)</title><rect x="651.5" y="277" width="26.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="654.52" y="287.5" >e..</text>
</g>
<g >
<title>kmalloc_trace (326,599,978 samples, 0.66%)</title><rect x="687.9" y="309" width="7.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="690.85" y="319.5" ></text>
</g>
<g >
<title>ext4_bread (2,343,026,382 samples, 4.76%)</title><rect x="561.0" y="261" width="56.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="563.97" y="271.5" >ext4_..</text>
</g>
<g >
<title>fd_install (30,293,571 samples, 0.06%)</title><rect x="1020.5" y="293" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1023.49" y="303.5" ></text>
</g>
<g >
<title>update_process_times (20,106,654 samples, 0.04%)</title><rect x="860.1" y="309" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="863.12" y="319.5" ></text>
</g>
<g >
<title>___slab_alloc (15,653,809 samples, 0.03%)</title><rect x="636.4" y="229" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="639.43" y="239.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="325" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1192.27" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (18,272,218 samples, 0.04%)</title><rect x="748.0" y="149" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="751.02" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (28,800,582 samples, 0.06%)</title><rect x="134.5" y="421" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="137.53" y="431.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="309" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.27" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,288,081,485 samples, 4.65%)</title><rect x="738.9" y="389" width="54.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="741.89" y="399.5" >entry..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,674,753 samples, 0.02%)</title><rect x="382.7" y="437" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="385.73" y="447.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (191,909,645 samples, 0.39%)</title><rect x="703.1" y="325" width="4.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="706.12" y="335.5" ></text>
</g>
<g >
<title>kfree (16,226,591 samples, 0.03%)</title><rect x="678.1" y="261" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="681.11" y="271.5" ></text>
</g>
<g >
<title>dput (76,777,800 samples, 0.16%)</title><rect x="748.5" y="325" width="1.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="751.46" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,957,568 samples, 0.02%)</title><rect x="599.0" y="133" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="601.97" y="143.5" ></text>
</g>
<g >
<title>__srcu_read_lock (52,013,115 samples, 0.11%)</title><rect x="785.2" y="277" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="788.16" y="287.5" ></text>
</g>
<g >
<title>bpf_get_current_cgroup_id (59,347,412 samples, 0.12%)</title><rect x="981.1" y="181" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="984.07" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_close (2,074,182,567 samples, 4.22%)</title><rect x="740.1" y="357" width="49.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="743.15" y="367.5" >__x64..</text>
</g>
<g >
<title>alloc_empty_file (1,511,930,948 samples, 3.07%)</title><rect x="924.4" y="261" width="36.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="927.36" y="271.5" >all..</text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (11,027,559 samples, 0.02%)</title><rect x="383.0" y="453" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="386.01" y="463.5" ></text>
</g>
<g >
<title>security_file_permission (37,670,573 samples, 0.08%)</title><rect x="707.7" y="325" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="710.72" y="335.5" ></text>
</g>
<g >
<title>mas_wr_bnode (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.86" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (18,272,218 samples, 0.04%)</title><rect x="748.0" y="325" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="751.02" y="335.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (38,224,299,099 samples, 77.68%)</title><rect x="273.2" y="501" width="916.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="276.18" y="511.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (38,224,299,099 samples, 77.68%)</title><rect x="273.2" y="533" width="916.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="276.18" y="543.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>tick_sched_handle (18,272,218 samples, 0.04%)</title><rect x="748.0" y="213" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="751.02" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,267,570 samples, 0.03%)</title><rect x="134.1" y="389" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="137.14" y="399.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (205,154,148 samples, 0.42%)</title><rect x="451.4" y="357" width="4.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="454.41" y="367.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (127,253,857 samples, 0.26%)</title><rect x="784.8" y="309" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="787.77" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (30,426,871 samples, 0.06%)</title><rect x="1016.2" y="229" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1019.23" y="239.5" ></text>
</g>
<g >
<title>htab_map_hash (18,282,755 samples, 0.04%)</title><rect x="980.6" y="165" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="983.63" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,130,746 samples, 0.04%)</title><rect x="949.9" y="213" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="952.88" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (28,800,582 samples, 0.06%)</title><rect x="134.5" y="437" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="137.53" y="447.5" ></text>
</g>
<g >
<title>close_fd_get_file (168,066,328 samples, 0.34%)</title><rect x="780.2" y="341" width="4.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="783.18" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (45,106,037 samples, 0.09%)</title><rect x="134.1" y="485" width="1.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="137.14" y="495.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (11,152,390 samples, 0.02%)</title><rect x="860.1" y="261" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="863.12" y="271.5" ></text>
</g>
<g >
<title>__schedule (17,739,079 samples, 0.04%)</title><rect x="531.7" y="245" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="534.66" y="255.5" ></text>
</g>
<g >
<title>inode_permission (61,050,943 samples, 0.12%)</title><rect x="994.7" y="245" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="997.69" y="255.5" ></text>
</g>
<g >
<title>__check_heap_object (71,087,710 samples, 0.14%)</title><rect x="1038.5" y="245" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1041.46" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (11,796,424 samples, 0.02%)</title><rect x="872.8" y="437" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="875.76" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (138,018,190 samples, 0.28%)</title><rect x="16.6" y="517" width="3.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="19.56" y="527.5" ></text>
</g>
<g >
<title>kmalloc_slab (358,717,641 samples, 0.73%)</title><rect x="639.6" y="245" width="8.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="642.64" y="255.5" ></text>
</g>
<g >
<title>memchr (91,389,109 samples, 0.19%)</title><rect x="533.4" y="261" width="2.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="536.41" y="271.5" ></text>
</g>
<g >
<title>mas_store_gfp (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1192.86" y="303.5" ></text>
</g>
<g >
<title>down_read_killable (85,257,569 samples, 0.17%)</title><rect x="506.7" y="325" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="509.71" y="335.5" ></text>
</g>
<g >
<title>schedule (18,148,792 samples, 0.04%)</title><rect x="288.8" y="405" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="291.75" y="415.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (30,123,444 samples, 0.06%)</title><rect x="456.3" y="373" width="0.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="459.33" y="383.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="197" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.27" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (18,130,746 samples, 0.04%)</title><rect x="949.9" y="85" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="952.88" y="95.5" ></text>
</g>
<g >
<title>scheduler_tick (11,824,021 samples, 0.02%)</title><rect x="450.2" y="245" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="453.15" y="255.5" ></text>
</g>
<g >
<title>rb_next (150,507,260 samples, 0.31%)</title><rect x="695.9" y="309" width="3.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="698.91" y="319.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (45,547,903 samples, 0.09%)</title><rect x="434.2" y="421" width="1.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="437.21" y="431.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (155,728,661 samples, 0.32%)</title><rect x="604.1" y="213" width="3.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="607.14" y="223.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,957,568 samples, 0.02%)</title><rect x="599.0" y="53" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="601.97" y="63.5" ></text>
</g>
<g >
<title>file_ra_state_init (9,823,463 samples, 0.02%)</title><rect x="972.8" y="245" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="975.79" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (16,305,455 samples, 0.03%)</title><rect x="134.1" y="469" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="137.14" y="479.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (4,672,437,681 samples, 9.50%)</title><rect x="1076.3" y="469" width="112.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1079.26" y="479.5" >mem.indexOf__..</text>
</g>
<g >
<title>valgrind.doClientRequest (123,153,527 samples, 0.25%)</title><rect x="453.4" y="325" width="2.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="456.38" y="335.5" ></text>
</g>
<g >
<title>dx_probe (24,519,500 samples, 0.05%)</title><rect x="538.0" y="293" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="540.96" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (42,415,456 samples, 0.09%)</title><rect x="913.7" y="277" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="916.74" y="287.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (1,994,541,495 samples, 4.05%)</title><rect x="210.6" y="501" width="47.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="213.61" y="511.5" >linr..</text>
</g>
<g >
<title>meta.hasUniqueRepresentation (27,561,068 samples, 0.06%)</title><rect x="1183.1" y="405" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1186.12" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (73,658,476 samples, 0.15%)</title><rect x="321.7" y="453" width="1.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="324.67" y="463.5" ></text>
</g>
<g >
<title>security_inode_permission (34,081,081 samples, 0.07%)</title><rect x="1004.9" y="245" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1007.87" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,911,602 samples, 0.02%)</title><rect x="683.1" y="165" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="686.11" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="229" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1033.71" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="373" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1190.90" y="383.5" ></text>
</g>
<g >
<title>__memset (27,764,272 samples, 0.06%)</title><rect x="949.6" y="229" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="952.65" y="239.5" ></text>
</g>
<g >
<title>psi_account_irqtime (17,747,962 samples, 0.04%)</title><rect x="134.5" y="341" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="137.53" y="351.5" ></text>
</g>
<g >
<title>debug.inValgrind (64,739,446 samples, 0.13%)</title><rect x="1074.2" y="389" width="1.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1077.16" y="399.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (10,578,240,500 samples, 21.50%)</title><rect x="476.8" y="421" width="253.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="479.77" y="431.5" >os.linux.getdents64</text>
</g>
<g >
<title>rb_insert_color (88,402,849 samples, 0.18%)</title><rect x="649.4" y="261" width="2.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="652.40" y="271.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (300,566,567 samples, 0.61%)</title><rect x="670.9" y="245" width="7.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="673.90" y="255.5" ></text>
</g>
<g >
<title>__fget_light (117,921,764 samples, 0.24%)</title><rect x="1006.6" y="245" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1009.56" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="325" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1190.90" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (448,905,295 samples, 0.91%)</title><rect x="628.9" y="245" width="10.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="631.87" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (9,928,525 samples, 0.02%)</title><rect x="273.6" y="485" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="276.65" y="495.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (44,052,430 samples, 0.09%)</title><rect x="948.6" y="213" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="951.59" y="223.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (5,819,698,868 samples, 11.83%)</title><rect x="538.9" y="293" width="139.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="541.93" y="303.5" >htree_dirblock_to..</text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (10,074,964 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,272,218 samples, 0.04%)</title><rect x="748.0" y="261" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="751.02" y="271.5" ></text>
</g>
<g >
<title>__memcpy (48,493,451 samples, 0.10%)</title><rect x="648.2" y="261" width="1.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="651.24" y="271.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (291,578,811 samples, 0.59%)</title><rect x="799.4" y="453" width="7.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="802.45" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,506,934 samples, 0.03%)</title><rect x="272.8" y="485" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="275.79" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="261" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1033.71" y="271.5" ></text>
</g>
<g >
<title>array_list.addOrOom (34,724,998 samples, 0.07%)</title><rect x="333.1" y="437" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="336.14" y="447.5" ></text>
</g>
<g >
<title>schedule (10,564,777 samples, 0.02%)</title><rect x="797.8" y="357" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="800.75" y="367.5" ></text>
</g>
<g >
<title>amd_clear_divider (10,062,626 samples, 0.02%)</title><rect x="1046.3" y="309" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1049.27" y="319.5" ></text>
</g>
<g >
<title>posix.openatZ (6,660,764,010 samples, 13.54%)</title><rect x="892.3" y="405" width="159.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="895.34" y="415.5" >posix.openatZ</text>
</g>
<g >
<title>__rcu_read_lock (26,055,829 samples, 0.05%)</title><rect x="1009.4" y="245" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1012.39" y="255.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (5,958,680,892 samples, 12.11%)</title><rect x="535.6" y="309" width="142.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="538.60" y="319.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>__rcu_read_unlock (15,551,312 samples, 0.03%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.90" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (12,102,949 samples, 0.02%)</title><rect x="948.3" y="165" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="951.30" y="175.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10,564,777 samples, 0.02%)</title><rect x="797.8" y="293" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="800.75" y="303.5" ></text>
</g>
<g >
<title>update_process_times (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="293" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1190.90" y="303.5" ></text>
</g>
<g >
<title>perf_ctx_enable (18,148,792 samples, 0.04%)</title><rect x="288.8" y="341" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="291.75" y="351.5" ></text>
</g>
<g >
<title>errseq_sample (34,108,016 samples, 0.07%)</title><rect x="972.0" y="245" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="974.97" y="255.5" ></text>
</g>
<g >
<title>build_open_flags (63,926,015 samples, 0.13%)</title><rect x="915.7" y="293" width="1.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="918.72" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,758,576 samples, 0.03%)</title><rect x="872.4" y="405" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="875.36" y="415.5" ></text>
</g>
<g >
<title>put_prev_entity (11,642,926 samples, 0.02%)</title><rect x="382.7" y="341" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="385.73" y="351.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (1,433,185,736 samples, 2.91%)</title><rect x="617.2" y="277" width="34.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="620.15" y="287.5" >ex..</text>
</g>
<g >
<title>start.posixCallMainAndExit (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="533" width="0.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1192.86" y="543.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (16,784,913 samples, 0.03%)</title><rect x="1003.2" y="181" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1006.19" y="191.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (17,532,637 samples, 0.04%)</title><rect x="799.0" y="437" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="802.03" y="447.5" ></text>
</g>
<g >
<title>folio_mark_accessed (20,497,249 samples, 0.04%)</title><rect x="600.0" y="181" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="602.95" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_free (76,498,691 samples, 0.16%)</title><rect x="1043.3" y="293" width="1.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1046.33" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (186,161,843 samples, 0.38%)</title><rect x="726.0" y="389" width="4.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="728.98" y="399.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,578,846,288 samples, 7.27%)</title><rect x="1098.0" y="421" width="85.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1100.96" y="431.5" >mem.eql__a..</text>
</g>
<g >
<title>mutex_lock (119,107,628 samples, 0.24%)</title><rect x="498.8" y="325" width="2.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="501.85" y="335.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (24,519,500 samples, 0.05%)</title><rect x="538.0" y="277" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="540.96" y="287.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (10,996,140 samples, 0.02%)</title><rect x="730.4" y="421" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="733.45" y="431.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (10,564,777 samples, 0.02%)</title><rect x="797.8" y="389" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="800.75" y="399.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,957,568 samples, 0.02%)</title><rect x="599.0" y="101" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="601.97" y="111.5" ></text>
</g>
<g >
<title>__kmalloc_node (12,102,949 samples, 0.02%)</title><rect x="948.3" y="181" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="951.30" y="191.5" ></text>
</g>
<g >
<title>sched_clock_cpu (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="101" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1033.71" y="111.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="309" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1190.90" y="319.5" ></text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (1,508,930,322 samples, 3.07%)</title><rect x="439.5" y="405" width="36.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="442.46" y="415.5" >mem..</text>
</g>
<g >
<title>psi_task_switch (10,564,777 samples, 0.02%)</title><rect x="797.8" y="325" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="800.75" y="335.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (79,564,153 samples, 0.16%)</title><rect x="713.2" y="357" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="716.18" y="367.5" ></text>
</g>
<g >
<title>mem.isAligned (17,992,167 samples, 0.04%)</title><rect x="474.2" y="389" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="477.17" y="399.5" ></text>
</g>
<g >
<title>posix.toPosixPath (1,008,436,368 samples, 2.05%)</title><rect x="1052.1" y="437" width="24.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1055.08" y="447.5" >p..</text>
</g>
<g >
<title>get_page_from_freelist (17,852,847 samples, 0.04%)</title><rect x="947.9" y="181" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="950.87" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (59,475,698 samples, 0.12%)</title><rect x="750.7" y="309" width="1.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="753.72" y="319.5" ></text>
</g>
<g >
<title>update_curr (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="245" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1190.90" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (11,152,390 samples, 0.02%)</title><rect x="860.1" y="277" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="863.12" y="287.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (973,087,978 samples, 1.98%)</title><rect x="654.8" y="261" width="23.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="657.77" y="271.5" >_..</text>
</g>
<g >
<title>valgrind.doClientRequest (13,516,671 samples, 0.03%)</title><rect x="1075.4" y="341" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1078.39" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (20,106,654 samples, 0.04%)</title><rect x="860.1" y="357" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="863.12" y="367.5" ></text>
</g>
<g >
<title>find_busiest_group (16,758,576 samples, 0.03%)</title><rect x="872.4" y="325" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="875.36" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (92,648,608 samples, 0.19%)</title><rect x="600.4" y="197" width="2.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="603.44" y="207.5" ></text>
</g>
<g >
<title>fput (62,382,481 samples, 0.13%)</title><rect x="503.7" y="341" width="1.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="506.74" y="351.5" ></text>
</g>
<g >
<title>filp_flush (236,615,754 samples, 0.48%)</title><rect x="784.2" y="341" width="5.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="787.21" y="351.5" ></text>
</g>
<g >
<title>[unknown] (22,316,518 samples, 0.05%)</title><rect x="991.1" y="213" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="994.06" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,291,560 samples, 0.03%)</title><rect x="677.8" y="213" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="680.79" y="223.5" ></text>
</g>
<g >
<title>debug.assert (28,272,994 samples, 0.06%)</title><rect x="1059.3" y="421" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1062.35" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,957,568 samples, 0.02%)</title><rect x="599.0" y="37" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="601.97" y="47.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (46,724,750 samples, 0.09%)</title><rect x="457.1" y="373" width="1.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="460.05" y="383.5" ></text>
</g>
<g >
<title>psi_account_irqtime (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="117" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1033.71" y="127.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (23,241,458 samples, 0.05%)</title><rect x="990.1" y="197" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="993.09" y="207.5" ></text>
</g>
<g >
<title>__sysvec_thermal (9,554,379 samples, 0.02%)</title><rect x="1097.1" y="389" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1100.14" y="399.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (38,224,299,099 samples, 77.68%)</title><rect x="273.2" y="517" width="916.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="276.18" y="527.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>path_init (291,291,332 samples, 0.59%)</title><rect x="1005.7" y="261" width="7.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1008.69" y="271.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (659,969,589 samples, 1.34%)</title><rect x="1060.4" y="421" width="15.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1063.43" y="431.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="373" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1191.31" y="383.5" ></text>
</g>
<g >
<title>fscrypt_fname_free_buffer (16,226,591 samples, 0.03%)</title><rect x="678.1" y="277" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="681.11" y="287.5" ></text>
</g>
<g >
<title>__slab_free (17,563,530 samples, 0.04%)</title><rect x="752.1" y="309" width="0.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="755.15" y="319.5" ></text>
</g>
<g >
<title>ext4_htree_next_block (15,888,689 samples, 0.03%)</title><rect x="538.6" y="293" width="0.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="541.55" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (74,475,187 samples, 0.15%)</title><rect x="332.2" y="453" width="1.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="335.19" y="463.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (173,375,286 samples, 0.35%)</title><rect x="328.0" y="453" width="4.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="331.03" y="463.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (18,148,792 samples, 0.04%)</title><rect x="288.8" y="437" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="291.75" y="447.5" ></text>
</g>
<g >
<title>debug.assert (30,123,444 samples, 0.06%)</title><rect x="456.3" y="357" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="459.33" y="367.5" ></text>
</g>
<g >
<title>hook_file_open (63,797,725 samples, 0.13%)</title><rect x="991.6" y="229" width="1.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="994.59" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (18,356,807 samples, 0.04%)</title><rect x="914.8" y="277" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="917.76" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (18,943,910 samples, 0.04%)</title><rect x="987.4" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="990.39" y="191.5" ></text>
</g>
<g >
<title>update_curr (17,739,079 samples, 0.04%)</title><rect x="531.7" y="197" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="534.66" y="207.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (884,293,482 samples, 1.80%)</title><rect x="1022.1" y="293" width="21.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1025.12" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (28,800,582 samples, 0.06%)</title><rect x="134.5" y="389" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="137.53" y="399.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (1,682,332,042 samples, 3.42%)</title><rect x="435.3" y="421" width="40.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="438.30" y="431.5" >mem..</text>
</g>
<g >
<title>kmem_cache_alloc (664,695,954 samples, 1.35%)</title><rect x="943.4" y="245" width="15.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="946.37" y="255.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (11,251,134,559 samples, 22.87%)</title><rect x="806.4" y="453" width="269.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="809.44" y="463.5" >fs.Dir.openDir</text>
</g>
<g >
<title>__rcu_read_unlock (9,863,265 samples, 0.02%)</title><rect x="950.3" y="229" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="953.31" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (11,674,753 samples, 0.02%)</title><rect x="382.7" y="421" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="385.73" y="431.5" ></text>
</g>
<g >
<title>migrate_enable (46,244,391 samples, 0.09%)</title><rect x="988.7" y="181" width="1.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="991.68" y="191.5" ></text>
</g>
<g >
<title>rebalance_domains (16,758,576 samples, 0.03%)</title><rect x="872.4" y="357" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="875.36" y="367.5" ></text>
</g>
<g >
<title>load_balance (16,758,576 samples, 0.03%)</title><rect x="872.4" y="341" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="875.36" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (4,643,183,707 samples, 9.44%)</title><rect x="1077.0" y="453" width="111.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1079.96" y="463.5" >mem.indexOfPo..</text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="437" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.31" y="447.5" ></text>
</g>
<g >
<title>mem.isValidAlignGeneric__anon_9108 (17,585,534 samples, 0.04%)</title><rect x="458.2" y="325" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="461.17" y="335.5" ></text>
</g>
<g >
<title>mmap_region (12,760,220 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1192.55" y="175.5" ></text>
</g>
<g >
<title>perf_iterate_sb.constprop.0 (12,760,220 samples, 0.03%)</title><rect x="1189.6" y="133" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.55" y="143.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (41,576,118 samples, 0.08%)</title><rect x="986.2" y="181" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="989.15" y="191.5" ></text>
</g>
<g >
<title>xas_load (295,401,278 samples, 0.60%)</title><rect x="592.9" y="165" width="7.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="595.87" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,824,021 samples, 0.02%)</title><rect x="450.2" y="373" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="453.15" y="383.5" ></text>
</g>
<g >
<title>getname (27,272,633 samples, 0.06%)</title><rect x="1021.5" y="293" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1024.47" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,911,602 samples, 0.02%)</title><rect x="683.1" y="213" width="0.2" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="686.11" y="223.5" ></text>
</g>
<g >
<title>handle_softirqs (16,463,530 samples, 0.03%)</title><rect x="272.8" y="437" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="275.79" y="447.5" ></text>
</g>
<g >
<title>schedule (11,674,753 samples, 0.02%)</title><rect x="382.7" y="389" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="385.73" y="399.5" ></text>
</g>
<g >
<title>filldir64 (768,819,823 samples, 1.56%)</title><rect x="517.2" y="293" width="18.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="520.16" y="303.5" ></text>
</g>
<g >
<title>task_tick_fair (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="261" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1190.90" y="271.5" ></text>
</g>
<g >
<title>debug.assert (209,521,222 samples, 0.43%)</title><rect x="383.3" y="453" width="5.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="386.28" y="463.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (38,112,356,245 samples, 77.46%)</title><rect x="274.3" y="485" width="914.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="277.32" y="495.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>__rcu_read_lock (11,297,894 samples, 0.02%)</title><rect x="1020.0" y="229" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1022.96" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (14,306,063,664 samples, 29.07%)</title><rect x="388.3" y="453" width="343.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="391.30" y="463.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>posix.errno__anon_7363 (42,711,665 samples, 0.09%)</title><rect x="798.0" y="421" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="801.00" y="431.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="341" width="1.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1191.31" y="351.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="69" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1033.71" y="79.5" ></text>
</g>
<g >
<title>__schedule (16,305,455 samples, 0.03%)</title><rect x="134.1" y="421" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="137.14" y="431.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (110,817,114 samples, 0.23%)</title><rect x="785.2" y="293" width="2.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="788.16" y="303.5" ></text>
</g>
<g >
<title>rcu_core (13,291,560 samples, 0.03%)</title><rect x="677.8" y="165" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="680.79" y="175.5" ></text>
</g>
<g >
<title>__put_user_8 (84,690,286 samples, 0.17%)</title><rect x="501.7" y="341" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="504.70" y="351.5" ></text>
</g>
<g >
<title>combined_runner (49,204,657,657 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >combined_runner</text>
</g>
<g >
<title>init_file (724,988,675 samples, 1.47%)</title><rect x="926.0" y="245" width="17.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="928.98" y="255.5" ></text>
</g>
<g >
<title>avg_vruntime (18,130,746 samples, 0.04%)</title><rect x="949.9" y="37" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="952.88" y="47.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (145,594,879 samples, 0.30%)</title><rect x="324.3" y="437" width="3.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="327.32" y="447.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (10,563,122,950 samples, 21.47%)</title><rect x="19.9" y="533" width="253.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="22.87" y="543.5" >Thread.LinuxThreadImpl.spawn__ano..</text>
</g>
<g >
<title>mem.alignBackward__anon_7367 (15,502,985 samples, 0.03%)</title><rect x="457.1" y="357" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="460.05" y="367.5" ></text>
</g>
<g >
<title>inode_query_iversion (30,495,776 samples, 0.06%)</title><rect x="685.2" y="309" width="0.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="688.16" y="319.5" ></text>
</g>
<g >
<title>verify_dirent_name (146,600,601 samples, 0.30%)</title><rect x="532.1" y="277" width="3.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="535.09" y="287.5" ></text>
</g>
<g >
<title>__bpf_tramp_exit (12,526,916 samples, 0.03%)</title><rect x="989.8" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="992.79" y="207.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (277,593,729 samples, 0.56%)</title><rect x="678.5" y="309" width="6.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="681.50" y="319.5" ></text>
</g>
<g >
<title>psi_account_irqtime (8,911,602 samples, 0.02%)</title><rect x="683.1" y="117" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="686.11" y="127.5" ></text>
</g>
<g >
<title>security_file_alloc (249,404,325 samples, 0.51%)</title><rect x="937.4" y="229" width="6.0" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="940.39" y="239.5" ></text>
</g>
<g >
<title>mas_topiary_replace (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.86" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (16,261,320 samples, 0.03%)</title><rect x="900.2" y="357" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="903.20" y="367.5" ></text>
</g>
<g >
<title>__kmalloc (863,684,500 samples, 1.76%)</title><rect x="627.5" y="261" width="20.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="630.53" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="341" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.90" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (41,092,152 samples, 0.08%)</title><rect x="951.9" y="197" width="1.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="954.90" y="207.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (43,371,440 samples, 0.09%)</title><rect x="601.6" y="181" width="1.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="604.63" y="191.5" ></text>
</g>
<g >
<title>__memset (155,296,472 samples, 0.32%)</title><rect x="1027.0" y="261" width="3.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1029.99" y="271.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (123,524,307 samples, 0.25%)</title><rect x="974.4" y="245" width="2.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="977.36" y="255.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (115,413,985 samples, 0.23%)</title><rect x="950.6" y="229" width="2.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="953.55" y="239.5" ></text>
</g>
<g >
<title>rcu_do_batch (10,862,553 samples, 0.02%)</title><rect x="427.0" y="309" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="430.03" y="319.5" ></text>
</g>
<g >
<title>__memset (54,278,607 samples, 0.11%)</title><rect x="692.9" y="277" width="1.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="695.87" y="287.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="357" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.31" y="367.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (30,006,269 samples, 0.06%)</title><rect x="1031.0" y="261" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1033.97" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (15,551,312 samples, 0.03%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1191.90" y="223.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (18,148,792 samples, 0.04%)</title><rect x="288.8" y="373" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="291.75" y="383.5" ></text>
</g>
<g >
<title>find_vma (11,635,056 samples, 0.02%)</title><rect x="1189.3" y="133" width="0.3" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="1192.27" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (8,855,522 samples, 0.02%)</title><rect x="722.5" y="389" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="725.48" y="399.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (11,627,543 samples, 0.02%)</title><rect x="892.1" y="405" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="895.06" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="181" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1033.71" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,824,021 samples, 0.02%)</title><rect x="450.2" y="357" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="453.15" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (20,106,654 samples, 0.04%)</title><rect x="860.1" y="325" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="863.12" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,597,997 samples, 0.03%)</title><rect x="616.8" y="181" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="619.76" y="191.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (155,420,844 samples, 0.32%)</title><rect x="1055.6" y="421" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1058.62" y="431.5" ></text>
</g>
<g >
<title>[unknown] (211,462,191 samples, 0.43%)</title><rect x="895.5" y="389" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="898.52" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.walk (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="453" width="1.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1191.31" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock (16,784,913 samples, 0.03%)</title><rect x="1003.2" y="165" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1006.19" y="175.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (24,395,276 samples, 0.05%)</title><rect x="1189.3" y="293" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1192.27" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (9,195,594 samples, 0.02%)</title><rect x="321.5" y="453" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="324.45" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,272,218 samples, 0.04%)</title><rect x="748.0" y="277" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="751.02" y="287.5" ></text>
</g>
<g >
<title>rcu_segcblist_pend_cbs (23,068,351 samples, 0.05%)</title><rect x="745.0" y="325" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="748.00" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (129,608,455 samples, 0.26%)</title><rect x="482.2" y="389" width="3.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="485.23" y="399.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (46,289,599 samples, 0.09%)</title><rect x="791.9" y="341" width="1.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="794.89" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,911,602 samples, 0.02%)</title><rect x="683.1" y="261" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="686.11" y="271.5" ></text>
</g>
<g >
<title>__getblk_gfp (11,153,907 samples, 0.02%)</title><rect x="538.3" y="229" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="541.29" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (13,291,560 samples, 0.03%)</title><rect x="677.8" y="133" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="680.79" y="143.5" ></text>
</g>
<g >
<title>os.linux.errnoFromSyscall (46,913,573 samples, 0.10%)</title><rect x="475.6" y="421" width="1.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="478.64" y="431.5" ></text>
</g>
<g >
<title>__fdget_pos (503,168,650 samples, 1.02%)</title><rect x="489.6" y="341" width="12.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="492.64" y="351.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.0 (18,148,792 samples, 0.04%)</title><rect x="288.8" y="325" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="291.75" y="335.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (35,462,212 samples, 0.07%)</title><rect x="797.2" y="421" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="800.15" y="431.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (191,302,057 samples, 0.39%)</title><rect x="323.4" y="453" width="4.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="326.44" y="463.5" ></text>
</g>
<g >
<title>lockref_get (21,715,769 samples, 0.04%)</title><rect x="977.3" y="245" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="980.32" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (58,803,999 samples, 0.12%)</title><rect x="786.4" y="277" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="789.41" y="287.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (614,923,185 samples, 1.25%)</title><rect x="258.4" y="501" width="14.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="261.44" y="511.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (16,758,576 samples, 0.03%)</title><rect x="872.4" y="309" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="875.36" y="319.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (6,239,670,847 samples, 12.68%)</title><rect x="901.7" y="373" width="149.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="904.74" y="383.5" >os.linux.x86_64.sys..</text>
</g>
<g >
<title>ext4_es_lookup_extent (387,049,990 samples, 0.79%)</title><rect x="607.9" y="213" width="9.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="610.87" y="223.5" ></text>
</g>
<g >
<title>__schedule (16,784,913 samples, 0.03%)</title><rect x="1003.2" y="197" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1006.19" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,074,964 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="293" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1191.58" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (92,487,183 samples, 0.19%)</title><rect x="1045.9" y="325" width="2.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1048.90" y="335.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_9249 (17,585,534 samples, 0.04%)</title><rect x="458.2" y="309" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="461.17" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (82,277,493 samples, 0.17%)</title><rect x="791.0" y="357" width="2.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="794.02" y="367.5" ></text>
</g>
<g >
<title>get_unmapped_area (11,635,056 samples, 0.02%)</title><rect x="1189.3" y="165" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.27" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (29,140,180 samples, 0.06%)</title><rect x="1188.6" y="245" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1191.58" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (16,305,455 samples, 0.03%)</title><rect x="134.1" y="453" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="137.14" y="463.5" ></text>
</g>
<g >
<title>rebalance_domains (16,463,530 samples, 0.03%)</title><rect x="272.8" y="421" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="275.79" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (49,611,035 samples, 0.10%)</title><rect x="15.4" y="517" width="1.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="18.37" y="527.5" ></text>
</g>
<g >
<title>__check_object_size (335,677,967 samples, 0.68%)</title><rect x="1035.3" y="261" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1038.28" y="271.5" ></text>
</g>
<g >
<title>valgrind.doClientRequestExpr (132,566,523 samples, 0.27%)</title><rect x="453.2" y="341" width="3.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="456.15" y="351.5" ></text>
</g>
<g >
<title>bpf_lsm_inode_permission (18,703,750 samples, 0.04%)</title><rect x="996.2" y="229" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="999.16" y="239.5" ></text>
</g>
<g >
<title>__filemap_get_folio (750,380,403 samples, 1.53%)</title><rect x="582.4" y="197" width="18.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="585.45" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (18,130,746 samples, 0.04%)</title><rect x="949.9" y="181" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="952.88" y="191.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (47,605,858 samples, 0.10%)</title><rect x="963.4" y="213" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="966.37" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (178,947,645 samples, 0.36%)</title><rect x="953.3" y="229" width="4.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="956.32" y="239.5" ></text>
</g>
<g >
<title>fsnotify (150,065,258 samples, 0.30%)</title><rect x="699.5" y="325" width="3.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="702.52" y="335.5" ></text>
</g>
<g >
<title>__list_del_entry_valid_or_report (33,861,571 samples, 0.07%)</title><rect x="948.8" y="197" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="951.84" y="207.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (53,199,736 samples, 0.11%)</title><rect x="289.7" y="469" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="292.72" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="389" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1190.90" y="399.5" ></text>
</g>
<g >
<title>sysvec_thermal (9,554,379 samples, 0.02%)</title><rect x="1097.1" y="405" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.14" y="415.5" ></text>
</g>
<g >
<title>mod_objcg_state (10,862,553 samples, 0.02%)</title><rect x="427.0" y="277" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="430.03" y="287.5" ></text>
</g>
<g >
<title>Thread.join (5,870,070 samples, 0.01%)</title><rect x="1189.9" y="469" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1192.86" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (18,272,218 samples, 0.04%)</title><rect x="748.0" y="181" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="751.02" y="191.5" ></text>
</g>
<g >
<title>mod_objcg_state (117,563,864 samples, 0.24%)</title><rect x="954.8" y="213" width="2.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="957.79" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (9,419,228 samples, 0.02%)</title><rect x="498.6" y="309" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="501.62" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (13,291,560 samples, 0.03%)</title><rect x="677.8" y="117" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="680.79" y="127.5" ></text>
</g>
<g >
<title>update_load_avg (11,052,620 samples, 0.02%)</title><rect x="135.0" y="325" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="137.96" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (21,619,831 samples, 0.04%)</title><rect x="954.3" y="213" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="957.27" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (19,104,317 samples, 0.04%)</title><rect x="607.2" y="181" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="610.15" y="191.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (65,269,103 samples, 0.13%)</title><rect x="988.2" y="197" width="1.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="991.23" y="207.5" ></text>
</g>
<g >
<title>memcg_account_kmem (17,737,002 samples, 0.04%)</title><rect x="958.2" y="213" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="961.19" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (8,911,602 samples, 0.02%)</title><rect x="683.1" y="133" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="686.11" y="143.5" ></text>
</g>
<g >
<title>native_write_msr (18,148,792 samples, 0.04%)</title><rect x="288.8" y="309" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="291.75" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,895,095 samples, 0.02%)</title><rect x="1030.7" y="197" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1033.71" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (18,130,746 samples, 0.04%)</title><rect x="949.9" y="165" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="952.88" y="175.5" ></text>
</g>
<g >
<title>make_vfsuid (38,286,384 samples, 0.08%)</title><rect x="710.2" y="293" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="713.22" y="303.5" ></text>
</g>
<g >
<title>_raw_read_unlock (75,174,183 samples, 0.15%)</title><rect x="614.2" y="197" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="617.19" y="207.5" ></text>
</g>
<g >
<title>ext4_map_blocks (593,304,967 samples, 1.21%)</title><rect x="602.9" y="229" width="14.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="605.93" y="239.5" ></text>
</g>
<g >
<title>ext4_getblk (2,325,500,039 samples, 4.73%)</title><rect x="561.4" y="245" width="55.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="564.39" y="255.5" >ext4_..</text>
</g>
<g >
<title>ext4_bread (11,153,907 samples, 0.02%)</title><rect x="538.3" y="261" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="541.29" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (28,800,582 samples, 0.06%)</title><rect x="134.5" y="357" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="137.53" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,374,199 samples, 0.04%)</title><rect x="1187.9" y="405" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1190.90" y="415.5" ></text>
</g>
<g >
<title>path_get (18,280,161 samples, 0.04%)</title><rect x="977.8" y="245" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="980.84" y="255.5" ></text>
</g>
<g >
<title>update_process_times (8,911,602 samples, 0.02%)</title><rect x="683.1" y="149" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="686.11" y="159.5" ></text>
</g>
<g >
<title>alloc_fd (223,784,339 samples, 0.45%)</title><rect x="910.4" y="293" width="5.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="913.36" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,272,218 samples, 0.04%)</title><rect x="748.0" y="245" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="751.02" y="255.5" ></text>
</g>
<g >
<title>update_process_times (28,800,582 samples, 0.06%)</title><rect x="134.5" y="373" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="137.53" y="383.5" ></text>
</g>
<g >
<title>housekeeping_test_cpu (10,870,340 samples, 0.02%)</title><rect x="602.7" y="197" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="605.67" y="207.5" ></text>
</g>
<g >
<title>valgrind.doClientRequest (20,155,620 samples, 0.04%)</title><rect x="452.7" y="341" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="455.67" y="351.5" ></text>
</g>
<g >
<title>rb_first_postorder (56,193,198 samples, 0.11%)</title><rect x="683.6" y="293" width="1.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="686.56" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (49,622,427 samples, 0.10%)</title><rect x="638.4" y="229" width="1.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="641.45" y="239.5" ></text>
</g>
<g >
<title>locks_remove_file (16,591,726 samples, 0.03%)</title><rect x="776.0" y="325" width="0.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="779.02" y="335.5" ></text>
</g>
<g >
<title>update_process_times (11,824,021 samples, 0.02%)</title><rect x="450.2" y="261" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="453.15" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (41,214,563 samples, 0.08%)</title><rect x="1048.1" y="325" width="1.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1051.12" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,888,675,830 samples, 20.10%)</title><rect x="485.3" y="389" width="237.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="488.33" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>preempt_schedule_irq (16,784,913 samples, 0.03%)</title><rect x="1003.2" y="213" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1006.19" y="223.5" ></text>
</g>
<g >
<title>xas_start (28,915,971 samples, 0.06%)</title><rect x="599.3" y="149" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="602.26" y="159.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (132,425,672 samples, 0.27%)</title><rect x="416.3" y="421" width="3.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="419.34" y="431.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (16,458,003 samples, 0.03%)</title><rect x="777.8" y="309" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="780.79" y="319.5" ></text>
</g>
<g >
<title>put_prev_entity (17,739,079 samples, 0.04%)</title><rect x="531.7" y="213" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="534.66" y="223.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (7,953,658,270 samples, 16.16%)</title><rect x="19.9" y="501" width="190.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="22.87" y="511.5" >combined_runner.linreg_t..</text>
</g>
<g >
<title>__update_load_avg_se (11,052,620 samples, 0.02%)</title><rect x="135.0" y="309" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="137.96" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,674,753 samples, 0.02%)</title><rect x="382.7" y="405" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="385.73" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,784,913 samples, 0.03%)</title><rect x="1003.2" y="229" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1006.19" y="239.5" ></text>
</g>
<g >
<title>migrate_disable (15,688,900 samples, 0.03%)</title><rect x="987.8" y="181" width="0.4" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="990.85" y="191.5" ></text>
</g>
<g >
<title>__schedule (18,148,792 samples, 0.04%)</title><rect x="288.8" y="389" width="0.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="291.75" y="399.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (15,937,400 samples, 0.03%)</title><rect x="731.4" y="453" width="0.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="734.38" y="463.5" ></text>
</g>
<g >
<title>bpf_lsm_file_alloc_security (17,156,974 samples, 0.03%)</title><rect x="938.0" y="213" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="941.05" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,841,685 samples, 0.01%)</title><rect x="1189.9" y="389" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.86" y="399.5" ></text>
</g>
<g >
<title>__schedule (10,564,777 samples, 0.02%)</title><rect x="797.8" y="341" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="800.75" y="351.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (133,166,492 samples, 0.27%)</title><rect x="604.7" y="197" width="3.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="607.68" y="207.5" ></text>
</g>
<g >
<title>debug.assert (48,394,858 samples, 0.10%)</title><rect x="326.6" y="421" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="329.65" y="431.5" ></text>
</g>
<g >
<title>[unknown] (10,074,964 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>mem.isAligned (17,585,534 samples, 0.04%)</title><rect x="458.2" y="373" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="461.17" y="383.5" ></text>
</g>
<g >
<title>mutex_unlock (37,129,702 samples, 0.08%)</title><rect x="712.3" y="341" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="715.29" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (195,200,871 samples, 0.40%)</title><rect x="895.5" y="357" width="4.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="898.52" y="367.5" ></text>
</g>
<g >
<title>step_into (79,020,742 samples, 0.16%)</title><rect x="1012.7" y="261" width="1.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1015.67" y="271.5" ></text>
</g>
<g >
<title>security_file_open (619,048,112 samples, 1.26%)</title><rect x="978.3" y="245" width="14.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="981.28" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (18,272,218 samples, 0.04%)</title><rect x="748.0" y="309" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="751.02" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (11,426,540 samples, 0.02%)</title><rect x="806.2" y="421" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="809.17" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (18,130,746 samples, 0.04%)</title><rect x="949.9" y="149" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="952.88" y="159.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (12,760,220 samples, 0.03%)</title><rect x="1189.6" y="117" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1192.55" y="127.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (64,527,797 samples, 0.13%)</title><rect x="1188.3" y="469" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.31" y="479.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (11,637,104 samples, 0.02%)</title><rect x="938.5" y="213" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="941.46" y="223.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (17,585,534 samples, 0.04%)</title><rect x="458.2" y="341" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="461.17" y="351.5" ></text>
</g>
<g >
<title>is_dx_dir (81,987,526 samples, 0.17%)</title><rect x="685.9" y="309" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="688.89" y="319.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (16,267,570 samples, 0.03%)</title><rect x="134.1" y="405" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="137.14" y="415.5" ></text>
</g>
<g >
<title>call_rcu (17,528,506 samples, 0.04%)</title><rect x="779.8" y="341" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="782.76" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (31,932,349 samples, 0.06%)</title><rect x="793.0" y="357" width="0.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="796.00" y="367.5" ></text>
</g>
<g >
<title>ext4_readdir (7,954,736,506 samples, 16.17%)</title><rect x="508.8" y="325" width="190.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="511.75" y="335.5" >ext4_readdir</text>
</g>
<g >
<title>pick_next_task_fair (11,642,926 samples, 0.02%)</title><rect x="382.7" y="357" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="385.73" y="367.5" ></text>
</g>
<g >
<title>try_charge_memcg (29,104,797 samples, 0.06%)</title><rect x="958.6" y="213" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="961.61" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,911,602 samples, 0.02%)</title><rect x="683.1" y="197" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="686.11" y="207.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (11,269,015 samples, 0.02%)</title><rect x="913.5" y="277" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="916.47" y="287.5" ></text>
</g>
<g >
<title>fsnotify (110,723,540 samples, 0.23%)</title><rect x="770.2" y="325" width="2.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="773.19" y="335.5" ></text>
</g>
</g>
</svg>
