<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>ext4_map_blocks (529,089,614 samples, 1.75%)</title><rect x="578.5" y="245" width="20.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="581.52" y="255.5" ></text>
</g>
<g >
<title>pick_file (30,580,942 samples, 0.10%)</title><rect x="733.3" y="341" width="1.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="736.30" y="351.5" ></text>
</g>
<g >
<title>mod_memcg_lruvec_state (23,204,657 samples, 0.08%)</title><rect x="903.7" y="213" width="0.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="906.70" y="223.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (32,953,587 samples, 0.11%)</title><rect x="597.9" y="213" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="600.92" y="223.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (672,045,017 samples, 2.23%)</title><rect x="623.4" y="293" width="26.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="626.43" y="303.5" >e..</text>
</g>
<g >
<title>mem.isAlignedGeneric__anon_8509 (12,656,061 samples, 0.04%)</title><rect x="389.9" y="373" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="392.94" y="383.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11,582,561 samples, 0.04%)</title><rect x="918.0" y="245" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="921.04" y="255.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="213" width="1.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.64" y="223.5" ></text>
</g>
<g >
<title>acpi_ev_detect_gpe (11,582,561 samples, 0.04%)</title><rect x="918.0" y="101" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="921.04" y="111.5" ></text>
</g>
<g >
<title>rb_next (67,389,788 samples, 0.22%)</title><rect x="670.8" y="325" width="2.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="673.82" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="357" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1186.98" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (10,877,448 samples, 0.04%)</title><rect x="110.6" y="437" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="113.57" y="447.5" ></text>
</g>
<g >
<title>security_inode_permission (14,120,274 samples, 0.05%)</title><rect x="944.7" y="261" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="947.69" y="271.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (7,464,513,604 samples, 24.73%)</title><rect x="410.9" y="437" width="291.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="413.85" y="447.5" >os.linux.getdents64</text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (827,383,569 samples, 2.74%)</title><rect x="374.6" y="405" width="32.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="377.56" y="415.5" >me..</text>
</g>
<g >
<title>[[x_tables]] (12,921,052 samples, 0.04%)</title><rect x="831.0" y="373" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="833.97" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="389" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1186.98" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (32,870,140 samples, 0.11%)</title><rect x="892.6" y="245" width="1.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="895.58" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,928,160 samples, 0.04%)</title><rect x="795.6" y="421" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="798.61" y="431.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (15,006,150 samples, 0.05%)</title><rect x="749.3" y="453" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="752.31" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (11,302,510 samples, 0.04%)</title><rect x="337.1" y="325" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="340.08" y="335.5" ></text>
</g>
<g >
<title>__getblk_gfp (1,818,754,836 samples, 6.03%)</title><rect x="507.4" y="245" width="71.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="510.42" y="255.5" >__getblk..</text>
</g>
<g >
<title>fs.Dir.walk (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="469" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1190.17" y="479.5" ></text>
</g>
<g >
<title>check_stack_object (2,613,494 samples, 0.01%)</title><rect x="991.3" y="261" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="994.25" y="271.5" ></text>
</g>
<g >
<title>generic_permission (33,127,052 samples, 0.11%)</title><rect x="943.4" y="245" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="946.40" y="255.5" ></text>
</g>
<g >
<title>path_get (12,883,157 samples, 0.04%)</title><rect x="927.6" y="261" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="930.63" y="271.5" ></text>
</g>
<g >
<title>legitimize_links (11,907,147 samples, 0.04%)</title><rect x="911.4" y="245" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="914.39" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (13,236,908 samples, 0.04%)</title><rect x="967.7" y="245" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="970.69" y="255.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (11,929,993 samples, 0.04%)</title><rect x="577.6" y="165" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="580.56" y="175.5" ></text>
</g>
<g >
<title>migrate_enable (35,020,846 samples, 0.12%)</title><rect x="938.5" y="197" width="1.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="941.51" y="207.5" ></text>
</g>
<g >
<title>filemap_get_entry (1,228,146,651 samples, 4.07%)</title><rect x="526.4" y="197" width="48.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="529.38" y="207.5" >file..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (53,713,095 samples, 0.18%)</title><rect x="1016.0" y="325" width="2.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1018.98" y="335.5" ></text>
</g>
<g >
<title>handle_softirqs (12,928,160 samples, 0.04%)</title><rect x="795.6" y="389" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="798.61" y="399.5" ></text>
</g>
<g >
<title>__common_interrupt (11,666,443 samples, 0.04%)</title><rect x="271.0" y="421" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="274.03" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1190.17" y="271.5" ></text>
</g>
<g >
<title>__fsnotify_parent (19,754,895 samples, 0.07%)</title><rect x="458.0" y="341" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="461.03" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (52,213,764 samples, 0.17%)</title><rect x="992.2" y="309" width="2.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="995.24" y="319.5" ></text>
</g>
<g >
<title>iterate_dir (6,160,970,475 samples, 20.41%)</title><rect x="453.0" y="357" width="240.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="456.02" y="367.5" >iterate_dir</text>
</g>
<g >
<title>lockref_get (65,132,681 samples, 0.22%)</title><rect x="925.1" y="261" width="2.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="928.08" y="271.5" ></text>
</g>
<g >
<title>__pick_eevdf (10,902,277 samples, 0.04%)</title><rect x="983.7" y="133" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="986.65" y="143.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (19,458,209 samples, 0.06%)</title><rect x="337.6" y="469" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="340.65" y="479.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (12,048,795 samples, 0.04%)</title><rect x="1038.6" y="405" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1041.58" y="415.5" ></text>
</g>
<g >
<title>ext4_getblk (2,374,267,762 samples, 7.87%)</title><rect x="506.4" y="261" width="92.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="509.38" y="271.5" >ext4_getblk</text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (83,736,184 samples, 0.28%)</title><rect x="10.0" y="549" width="3.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>kmalloc_trace (202,774,568 samples, 0.67%)</title><rect x="662.9" y="325" width="7.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="665.89" y="335.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (10,877,448 samples, 0.04%)</title><rect x="110.6" y="453" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="113.57" y="463.5" ></text>
</g>
<g >
<title>get_partial_node.part.0 (38,352,074 samples, 0.13%)</title><rect x="890.6" y="229" width="1.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="893.61" y="239.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (13,090,420 samples, 0.04%)</title><rect x="907.2" y="261" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="910.16" y="271.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (11,929,993 samples, 0.04%)</title><rect x="577.6" y="101" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="580.56" y="111.5" ></text>
</g>
<g >
<title>memchr (34,370,817 samples, 0.11%)</title><rect x="489.8" y="277" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="492.79" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (76,614,889 samples, 0.25%)</title><rect x="820.1" y="373" width="3.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="823.14" y="383.5" ></text>
</g>
<g >
<title>is_dx_dir (108,588,353 samples, 0.36%)</title><rect x="658.6" y="325" width="4.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="661.64" y="335.5" ></text>
</g>
<g >
<title>update_cfs_group (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="245" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1186.98" y="255.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (12,092,587 samples, 0.04%)</title><rect x="795.1" y="357" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="798.14" y="367.5" ></text>
</g>
<g >
<title>__memcpy (44,071,409 samples, 0.15%)</title><rect x="621.0" y="277" width="1.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="624.03" y="287.5" ></text>
</g>
<g >
<title>array_list.addOrOom (32,486,462 samples, 0.11%)</title><rect x="271.5" y="453" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="274.48" y="463.5" ></text>
</g>
<g >
<title>ext4_readdir (5,342,390,520 samples, 17.70%)</title><rect x="464.6" y="341" width="208.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="467.60" y="351.5" >ext4_readdir</text>
</g>
<g >
<title>mem.lenSliceTo__anon_8456 (897,217,031 samples, 2.97%)</title><rect x="372.9" y="421" width="35.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="375.85" y="431.5" >me..</text>
</g>
<g >
<title>mutex_lock (243,040,808 samples, 0.81%)</title><rect x="440.1" y="341" width="9.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="443.13" y="351.5" ></text>
</g>
<g >
<title>kfree (22,210,512 samples, 0.07%)</title><rect x="725.5" y="309" width="0.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="728.45" y="319.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (58,756,373 samples, 0.19%)</title><rect x="700.4" y="405" width="2.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="703.38" y="415.5" ></text>
</g>
<g >
<title>perf_iterate_sb.constprop.0 (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="149" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1190.64" y="159.5" ></text>
</g>
<g >
<title>call_filldir (510,680,263 samples, 1.69%)</title><rect x="471.2" y="325" width="19.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="474.16" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (41,180,605 samples, 0.14%)</title><rect x="862.7" y="229" width="1.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="865.67" y="239.5" ></text>
</g>
<g >
<title>advance_transaction (12,092,587 samples, 0.04%)</title><rect x="795.1" y="261" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="798.14" y="271.5" ></text>
</g>
<g >
<title>inode_permission (33,127,052 samples, 0.11%)</title><rect x="943.4" y="261" width="1.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="946.40" y="271.5" ></text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (479,385,836 samples, 1.59%)</title><rect x="202.6" y="517" width="18.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="205.60" y="527.5" ></text>
</g>
<g >
<title>dput (70,442,891 samples, 0.23%)</title><rect x="716.5" y="341" width="2.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="719.54" y="351.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (36,677,586 samples, 0.12%)</title><rect x="256.0" y="453" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="259.00" y="463.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (65,156,664 samples, 0.22%)</title><rect x="904.6" y="245" width="2.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="907.61" y="255.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (12,604,496 samples, 0.04%)</title><rect x="843.2" y="293" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="846.22" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,902,277 samples, 0.04%)</title><rect x="983.7" y="261" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="986.65" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (11,929,993 samples, 0.04%)</title><rect x="577.6" y="133" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="580.56" y="143.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (314,472,167 samples, 1.04%)</title><rect x="945.2" y="261" width="12.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="948.24" y="271.5" ></text>
</g>
<g >
<title>close_fd_get_file (52,922,184 samples, 0.18%)</title><rect x="732.4" y="357" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="735.43" y="367.5" ></text>
</g>
<g >
<title>mem.Allocator.rawAlloc (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="325" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1190.64" y="335.5" ></text>
</g>
<g >
<title>preempt_schedule_irq (13,224,816 samples, 0.04%)</title><rect x="939.4" y="165" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="942.36" y="175.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (309,321,618 samples, 1.02%)</title><rect x="673.9" y="341" width="12.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="676.93" y="351.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11,929,993 samples, 0.04%)</title><rect x="577.6" y="213" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="580.56" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (22,873,305 samples, 0.08%)</title><rect x="910.0" y="149" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="913.04" y="159.5" ></text>
</g>
<g >
<title>ext4_bread (2,374,267,762 samples, 7.87%)</title><rect x="506.4" y="277" width="92.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="509.38" y="287.5" >ext4_bread</text>
</g>
<g >
<title>posix.mmap (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="293" width="1.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1190.64" y="303.5" ></text>
</g>
<g >
<title>acpi_ev_detect_gpe (12,092,587 samples, 0.04%)</title><rect x="795.1" y="293" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="798.14" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_close (832,992,534 samples, 2.76%)</title><rect x="708.8" y="373" width="32.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="711.80" y="383.5" >__..</text>
</g>
<g >
<title>_raw_spin_lock (81,093,310 samples, 0.27%)</title><rect x="574.4" y="213" width="3.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="577.39" y="223.5" ></text>
</g>
<g >
<title>acpi_os_read_port (10,877,448 samples, 0.04%)</title><rect x="110.6" y="325" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="113.57" y="335.5" ></text>
</g>
<g >
<title>ext4_release_dir (179,834,074 samples, 0.60%)</title><rect x="719.3" y="341" width="7.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="722.29" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (14,869,550 samples, 0.05%)</title><rect x="745.1" y="373" width="0.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="748.09" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,773,457,464 samples, 15.81%)</title><rect x="831.5" y="373" width="186.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="834.47" y="383.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>alloc_empty_file (1,335,573,788 samples, 4.42%)</title><rect x="855.5" y="277" width="52.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="858.45" y="287.5" >alloc..</text>
</g>
<g >
<title>mem.eqlBytes (2,391,870,774 samples, 7.92%)</title><rect x="1069.6" y="421" width="93.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1072.62" y="431.5" >mem.eqlBytes</text>
</g>
<g >
<title>valgrind.doClientRequestExpr (12,813,548 samples, 0.04%)</title><rect x="1038.1" y="373" width="0.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1041.08" y="383.5" ></text>
</g>
<g >
<title>mem.alignBackward__anon_8817 (12,656,061 samples, 0.04%)</title><rect x="389.9" y="357" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="392.94" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacityPrecise (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="405" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1190.17" y="415.5" ></text>
</g>
<g >
<title>common_interrupt (11,582,561 samples, 0.04%)</title><rect x="918.0" y="229" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="921.04" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="325" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1186.98" y="335.5" ></text>
</g>
<g >
<title>__mod_memcg_state (12,848,396 samples, 0.04%)</title><rect x="906.7" y="197" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="909.65" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="405" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1186.98" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (21,325,608 samples, 0.07%)</title><rect x="559.2" y="181" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="562.21" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (19,806,383 samples, 0.07%)</title><rect x="1015.2" y="341" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1018.21" y="351.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.next (24,637,130,625 samples, 81.62%)</title><rect x="224.0" y="501" width="963.2" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="227.00" y="511.5" >search_name.SearchIterator.next</text>
</g>
<g >
<title>get_unused_fd_flags (24,908,702 samples, 0.08%)</title><rect x="973.4" y="309" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="976.44" y="319.5" ></text>
</g>
<g >
<title>fsnotify (45,101,034 samples, 0.15%)</title><rect x="923.3" y="245" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="926.32" y="255.5" ></text>
</g>
<g >
<title>handle_softirqs (22,873,305 samples, 0.08%)</title><rect x="910.0" y="165" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="913.04" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (12,223,170 samples, 0.04%)</title><rect x="823.1" y="373" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="826.14" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="437" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1190.17" y="447.5" ></text>
</g>
<g >
<title>path_openat (3,059,251,615 samples, 10.14%)</title><rect x="850.9" y="293" width="119.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="853.90" y="303.5" >path_openat</text>
</g>
<g >
<title>task_tick_fair (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="261" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1186.98" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (11,582,561 samples, 0.04%)</title><rect x="918.0" y="165" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="921.04" y="175.5" ></text>
</g>
<g >
<title>fput (11,898,632 samples, 0.04%)</title><rect x="968.2" y="261" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="971.21" y="271.5" ></text>
</g>
<g >
<title>dnotify_flush (74,904,778 samples, 0.25%)</title><rect x="735.5" y="341" width="2.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="738.49" y="351.5" ></text>
</g>
<g >
<title>___slab_alloc (12,758,891 samples, 0.04%)</title><rect x="619.7" y="245" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="622.73" y="255.5" ></text>
</g>
<g >
<title>mutex_unlock (30,205,739 samples, 0.10%)</title><rect x="693.9" y="357" width="1.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="696.88" y="367.5" ></text>
</g>
<g >
<title>build_open_flags (14,386,713 samples, 0.05%)</title><rect x="845.6" y="309" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="848.58" y="319.5" ></text>
</g>
<g >
<title>down_read_killable (148,204,912 samples, 0.49%)</title><rect x="458.8" y="341" width="5.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="461.80" y="351.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (187,853,908 samples, 0.62%)</title><rect x="579.5" y="213" width="7.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="582.53" y="223.5" ></text>
</g>
<g >
<title>os.linux.close (12,926,974 samples, 0.04%)</title><rect x="706.4" y="453" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="709.43" y="463.5" ></text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3812.Instance.entryFn (5,099,598,311 samples, 16.90%)</title><rect x="22.0" y="549" width="199.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.97" y="559.5" >Thread.LinuxThreadImpl.spa..</text>
</g>
<g >
<title>__handle_irq_event_percpu (11,666,443 samples, 0.04%)</title><rect x="271.0" y="373" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="274.03" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,302,510 samples, 0.04%)</title><rect x="337.1" y="437" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="340.08" y="447.5" ></text>
</g>
<g >
<title>__fput_sync (55,746,670 samples, 0.18%)</title><rect x="730.2" y="357" width="2.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="733.25" y="367.5" ></text>
</g>
<g >
<title>meta.hasUniqueRepresentation (39,591,844 samples, 0.13%)</title><rect x="1182.9" y="421" width="1.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1185.94" y="431.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (24,441,183 samples, 0.08%)</title><rect x="737.5" y="293" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="740.46" y="303.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (12,562,140 samples, 0.04%)</title><rect x="578.0" y="53" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="581.03" y="63.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendSliceAssumeCapacity (120,232,597 samples, 0.40%)</title><rect x="266.3" y="469" width="4.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="269.33" y="479.5" ></text>
</g>
<g >
<title>__put_user_8 (57,523,970 samples, 0.19%)</title><rect x="449.6" y="357" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="452.63" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="245" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1190.17" y="255.5" ></text>
</g>
<g >
<title>dx_probe (22,103,124 samples, 0.07%)</title><rect x="491.6" y="309" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="494.63" y="319.5" ></text>
</g>
<g >
<title>mem.eqlBytes (21,594,579 samples, 0.07%)</title><rect x="1062.4" y="437" width="0.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1065.39" y="447.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="341" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1190.17" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (30,184,193 samples, 0.10%)</title><rect x="901.1" y="229" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="904.05" y="239.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (22,548,592 samples, 0.07%)</title><rect x="1039.1" y="485" width="0.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1042.05" y="495.5" ></text>
</g>
<g >
<title>rb_next_postorder (27,873,085 samples, 0.09%)</title><rect x="657.0" y="309" width="1.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="660.04" y="319.5" ></text>
</g>
<g >
<title>handle_softirqs (12,186,092 samples, 0.04%)</title><rect x="845.7" y="245" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="848.67" y="255.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (955,037,162 samples, 3.16%)</title><rect x="370.6" y="437" width="37.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="373.59" y="447.5" >mem..</text>
</g>
<g >
<title>__check_object_size (140,718,091 samples, 0.47%)</title><rect x="985.9" y="277" width="5.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="988.86" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (10,902,277 samples, 0.04%)</title><rect x="983.7" y="197" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="986.65" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="277" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1190.17" y="287.5" ></text>
</g>
<g >
<title>acpi_hw_gpe_read (10,877,448 samples, 0.04%)</title><rect x="110.6" y="341" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="113.57" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (22,893,131 samples, 0.08%)</title><rect x="729.4" y="325" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="732.35" y="335.5" ></text>
</g>
<g >
<title>touch_atime (23,746,366 samples, 0.08%)</title><rect x="688.2" y="341" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="691.17" y="351.5" ></text>
</g>
<g >
<title>do_mmap (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="197" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1190.64" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureUnusedCapacity (32,486,462 samples, 0.11%)</title><rect x="271.5" y="469" width="1.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="274.48" y="479.5" ></text>
</g>
<g >
<title>fs.Dir.openDirZ (5,552,170,905 samples, 18.39%)</title><rect x="804.1" y="453" width="217.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="807.10" y="463.5" >fs.Dir.openDirZ</text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (43,101,666 samples, 0.14%)</title><rect x="1018.1" y="373" width="1.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1021.08" y="383.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (15,728,067 samples, 0.05%)</title><rect x="1020.5" y="405" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1023.55" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (70,872,027 samples, 0.23%)</title><rect x="10.0" y="533" width="2.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>kthread_is_per_cpu (22,873,305 samples, 0.08%)</title><rect x="910.0" y="133" width="0.9" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="913.04" y="143.5" ></text>
</g>
<g >
<title>common_interrupt (12,092,587 samples, 0.04%)</title><rect x="795.1" y="421" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="798.14" y="431.5" ></text>
</g>
<g >
<title>rcu_segcblist_enqueue (41,476,024 samples, 0.14%)</title><rect x="713.5" y="341" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="716.52" y="351.5" ></text>
</g>
<g >
<title>__legitimize_path (83,586,859 samples, 0.28%)</title><rect x="907.7" y="245" width="3.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="910.67" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,096,833,528 samples, 3.63%)</title><rect x="864.3" y="261" width="42.9" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="867.28" y="271.5" >kmem..</text>
</g>
<g >
<title>hrtimer_interrupt (12,562,140 samples, 0.04%)</title><rect x="578.0" y="165" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="581.03" y="175.5" ></text>
</g>
<g >
<title>common_interrupt (11,666,443 samples, 0.04%)</title><rect x="271.0" y="437" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="274.03" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (10,877,448 samples, 0.04%)</title><rect x="110.6" y="421" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="113.57" y="431.5" ></text>
</g>
<g >
<title>posix.close (1,083,947,704 samples, 3.59%)</title><rect x="706.9" y="453" width="42.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="709.94" y="463.5" >pos..</text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (68,575,384 samples, 0.23%)</title><rect x="1184.5" y="437" width="2.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1187.48" y="447.5" ></text>
</g>
<g >
<title>__slab_free (12,186,092 samples, 0.04%)</title><rect x="845.7" y="197" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="848.67" y="207.5" ></text>
</g>
<g >
<title>mod_objcg_state (60,829,585 samples, 0.20%)</title><rect x="902.2" y="229" width="2.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="905.23" y="239.5" ></text>
</g>
<g >
<title>acpi_os_read_port (11,929,993 samples, 0.04%)</title><rect x="577.6" y="37" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="580.56" y="47.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="133" width="1.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1190.64" y="143.5" ></text>
</g>
<g >
<title>fs.Dir.iterateAssumeFirstIteration (151,921,439 samples, 0.50%)</title><rect x="749.9" y="469" width="5.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="752.90" y="479.5" ></text>
</g>
<g >
<title>mntput_no_expire (22,893,131 samples, 0.08%)</title><rect x="729.4" y="341" width="0.8" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="732.35" y="351.5" ></text>
</g>
<g >
<title>common_interrupt (11,929,993 samples, 0.04%)</title><rect x="577.6" y="197" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="580.56" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (56,632,933 samples, 0.19%)</title><rect x="1022.6" y="437" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1025.63" y="447.5" ></text>
</g>
<g >
<title>alloc_fd (121,609,984 samples, 0.40%)</title><rect x="840.8" y="309" width="4.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="843.83" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (11,302,510 samples, 0.04%)</title><rect x="337.1" y="309" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="340.08" y="319.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (13,813,984 samples, 0.05%)</title><rect x="862.1" y="229" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="865.13" y="239.5" ></text>
</g>
<g >
<title>__legitimize_mnt (83,586,859 samples, 0.28%)</title><rect x="907.7" y="229" width="3.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="910.67" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (38,860,559 samples, 0.13%)</title><rect x="727.8" y="341" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="730.83" y="351.5" ></text>
</g>
<g >
<title>mntput_no_expire (13,003,930 samples, 0.04%)</title><rect x="970.0" y="261" width="0.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="973.00" y="271.5" ></text>
</g>
<g >
<title>fput (29,324,080 samples, 0.10%)</title><rect x="451.9" y="357" width="1.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="454.88" y="367.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (1,656,663,202 samples, 5.49%)</title><rect x="272.8" y="469" width="64.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="275.75" y="479.5" >compile..</text>
</g>
<g >
<title>__htab_map_lookup_elem (33,878,048 samples, 0.11%)</title><rect x="929.6" y="197" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="932.63" y="207.5" ></text>
</g>
<g >
<title>ext4_htree_fill_tree (4,056,082,182 samples, 13.44%)</title><rect x="491.1" y="325" width="158.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="494.13" y="335.5" >ext4_htree_fill_tree</text>
</g>
<g >
<title>__srcu_read_lock (28,007,593 samples, 0.09%)</title><rect x="736.4" y="293" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="739.37" y="303.5" ></text>
</g>
<g >
<title>security_inode_permission (15,857,778 samples, 0.05%)</title><rect x="960.4" y="261" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="963.38" y="271.5" ></text>
</g>
<g >
<title>__fget_light (169,195,184 samples, 0.56%)</title><rect x="961.6" y="261" width="6.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="964.59" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (11,318,231 samples, 0.04%)</title><rect x="337.1" y="453" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="340.08" y="463.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (35,386,271 samples, 0.12%)</title><rect x="939.9" y="213" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="942.88" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (229,140,243 samples, 0.76%)</title><rect x="612.1" y="261" width="8.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="615.07" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (32,637,127 samples, 0.11%)</title><rect x="745.7" y="405" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="748.67" y="415.5" ></text>
</g>
<g >
<title>ext4_getblk (22,103,124 samples, 0.07%)</title><rect x="491.6" y="261" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="494.63" y="271.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (11,929,993 samples, 0.04%)</title><rect x="577.6" y="85" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="580.56" y="95.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall6 (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="261" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.64" y="271.5" ></text>
</g>
<g >
<title>htree_dirblock_to_tree (4,021,061,531 samples, 13.32%)</title><rect x="492.5" y="309" width="157.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="495.50" y="319.5" >htree_dirblock_to_tree</text>
</g>
<g >
<title>terminate_walk (25,653,756 samples, 0.08%)</title><rect x="969.5" y="277" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="972.50" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,902,277 samples, 0.04%)</title><rect x="983.7" y="245" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="986.65" y="255.5" ></text>
</g>
<g >
<title>xas_start (39,138,113 samples, 0.13%)</title><rect x="572.9" y="165" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="575.86" y="175.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (506,731,882 samples, 1.68%)</title><rect x="1163.1" y="421" width="19.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1166.13" y="431.5" ></text>
</g>
<g >
<title>ttwu_do_activate (10,902,277 samples, 0.04%)</title><rect x="983.7" y="181" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="986.65" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).appendAssumeCapacity (12,501,321 samples, 0.04%)</title><rect x="265.8" y="469" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="268.84" y="479.5" ></text>
</g>
<g >
<title>__fget_light (162,271,902 samples, 0.54%)</title><rect x="433.8" y="341" width="6.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="436.78" y="351.5" ></text>
</g>
<g >
<title>_raw_read_lock (104,958,538 samples, 0.35%)</title><rect x="592.3" y="213" width="4.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="595.29" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (21,220,436 samples, 0.07%)</title><rect x="695.1" y="373" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="698.06" y="383.5" ></text>
</g>
<g >
<title>math.isPowerOfTwo__anon_8113 (23,803,463 samples, 0.08%)</title><rect x="372.9" y="405" width="0.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="375.85" y="415.5" ></text>
</g>
<g >
<title>asm_common_interrupt (10,877,448 samples, 0.04%)</title><rect x="110.6" y="501" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="113.57" y="511.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="325" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1190.17" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="373" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1186.98" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,562,140 samples, 0.04%)</title><rect x="578.0" y="133" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="581.03" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (165,957,637 samples, 0.55%)</title><rect x="418.3" y="405" width="6.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="421.32" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,186,092 samples, 0.04%)</title><rect x="845.7" y="277" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="848.67" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="421" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1190.17" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="245" width="1.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.64" y="255.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (11,582,561 samples, 0.04%)</title><rect x="918.0" y="133" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="921.04" y="143.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (82,550,758 samples, 0.27%)</title><rect x="893.9" y="229" width="3.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="896.87" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event (11,929,993 samples, 0.04%)</title><rect x="577.6" y="149" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="580.56" y="159.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (12,092,587 samples, 0.04%)</title><rect x="795.1" y="309" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="798.14" y="319.5" ></text>
</g>
<g >
<title>__ext4_check_dir_entry (262,602,934 samples, 0.87%)</title><rect x="494.9" y="293" width="10.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="497.88" y="303.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (35,791,905 samples, 0.12%)</title><rect x="1037.2" y="389" width="1.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1040.18" y="399.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11,666,443 samples, 0.04%)</title><rect x="271.0" y="453" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="274.03" y="463.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (11,757,498 samples, 0.04%)</title><rect x="910.9" y="245" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="913.94" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,562,140 samples, 0.04%)</title><rect x="578.0" y="117" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="581.03" y="127.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (94,669,637 samples, 0.31%)</title><rect x="342.0" y="453" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="345.00" y="463.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).ensureTotalCapacity (11,666,443 samples, 0.04%)</title><rect x="271.0" y="469" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="274.03" y="479.5" ></text>
</g>
<g >
<title>errseq_sample (81,825,115 samples, 0.27%)</title><rect x="915.3" y="261" width="3.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="918.29" y="271.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,928,160 samples, 0.04%)</title><rect x="795.6" y="405" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="798.61" y="415.5" ></text>
</g>
<g >
<title>str2hashbuf_signed (224,978,340 samples, 0.75%)</title><rect x="640.9" y="261" width="8.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="643.90" y="271.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (35,521,733 samples, 0.12%)</title><rect x="741.4" y="373" width="1.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="744.36" y="383.5" ></text>
</g>
<g >
<title>acpi_irq (11,666,443 samples, 0.04%)</title><rect x="271.0" y="357" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="274.03" y="367.5" ></text>
</g>
<g >
<title>debug.assert (42,638,178 samples, 0.14%)</title><rect x="269.4" y="453" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="272.36" y="463.5" ></text>
</g>
<g >
<title>__memset (159,543,516 samples, 0.53%)</title><rect x="977.8" y="277" width="6.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="980.84" y="287.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (109,733,142 samples, 0.36%)</title><rect x="893.9" y="245" width="4.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="896.87" y="255.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (237,931,237 samples, 0.79%)</title><rect x="225.9" y="485" width="9.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="228.87" y="495.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (34,555,840 samples, 0.11%)</title><rect x="576.2" y="197" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="579.21" y="207.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (27,636,540 samples, 0.09%)</title><rect x="259.5" y="453" width="1.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="262.50" y="463.5" ></text>
</g>
<g >
<title>rcu_segcblist_extract_done_cbs (12,928,160 samples, 0.04%)</title><rect x="795.6" y="341" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="798.61" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (19,774,334 samples, 0.07%)</title><rect x="966.9" y="245" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="969.92" y="255.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7624 (24,777,670,333 samples, 82.09%)</title><rect x="221.3" y="533" width="968.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="224.34" y="543.5" >Thread.callFn__anon_7624</text>
</g>
<g >
<title>__bpf_prog_enter (17,437,923 samples, 0.06%)</title><rect x="936.7" y="213" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="939.71" y="223.5" ></text>
</g>
<g >
<title>rcu_core (22,678,458 samples, 0.08%)</title><rect x="991.4" y="213" width="0.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="994.36" y="223.5" ></text>
</g>
<g >
<title>__common_interrupt (11,582,561 samples, 0.04%)</title><rect x="918.0" y="213" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="921.04" y="223.5" ></text>
</g>
<g >
<title>combined_runner.search_task__anon_8522 (24,777,670,333 samples, 82.09%)</title><rect x="221.3" y="517" width="968.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="224.34" y="527.5" >combined_runner.search_task__anon_8522</text>
</g>
<g >
<title>Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn (24,777,670,333 samples, 82.09%)</title><rect x="221.3" y="549" width="968.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="224.34" y="559.5" >Thread.LinuxThreadImpl.spawn__anon_3920.Instance.entryFn</text>
</g>
<g >
<title>mem.doNotOptimizeAway__anon_8520 (670,299,449 samples, 2.22%)</title><rect x="139.5" y="501" width="26.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="142.51" y="511.5" >m..</text>
</g>
<g >
<title>make_vfsuid (12,791,619 samples, 0.04%)</title><rect x="944.2" y="229" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="947.19" y="239.5" ></text>
</g>
<g >
<title>mod_memcg_state (12,848,396 samples, 0.04%)</title><rect x="906.7" y="213" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="909.65" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,873,305 samples, 0.08%)</title><rect x="910.0" y="181" width="0.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="913.04" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (12,562,140 samples, 0.04%)</title><rect x="578.0" y="85" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="581.03" y="95.5" ></text>
</g>
<g >
<title>[unknown] (306,310,116 samples, 1.01%)</title><rect x="10.0" y="565" width="12.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>fsnotify (123,461,091 samples, 0.41%)</title><rect x="918.5" y="261" width="4.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="921.49" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22,341,242 samples, 0.07%)</title><rect x="732.4" y="341" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="735.43" y="351.5" ></text>
</g>
<g >
<title>do_dentry_open (752,029,112 samples, 2.49%)</title><rect x="911.9" y="277" width="29.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="914.86" y="287.5" >do..</text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (7,464,513,604 samples, 24.73%)</title><rect x="410.9" y="421" width="291.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="413.85" y="431.5" >os.linux.x86_64.syscall3</text>
</g>
<g >
<title>tick_sched_handle (11,302,510 samples, 0.04%)</title><rect x="337.1" y="357" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="340.08" y="367.5" ></text>
</g>
<g >
<title>os.linux.openat (5,037,337,498 samples, 16.69%)</title><rect x="823.6" y="405" width="196.9" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="826.62" y="415.5" >os.linux.openat</text>
</g>
<g >
<title>check_preempt_wakeup_fair (10,902,277 samples, 0.04%)</title><rect x="983.7" y="149" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="986.65" y="159.5" ></text>
</g>
<g >
<title>security_file_permission (55,052,828 samples, 0.18%)</title><rect x="686.0" y="341" width="2.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="689.02" y="351.5" ></text>
</g>
<g >
<title>rcu_do_batch (12,186,092 samples, 0.04%)</title><rect x="845.7" y="213" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="848.67" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (11,302,510 samples, 0.04%)</title><rect x="337.1" y="421" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="340.08" y="431.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="229" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.17" y="239.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (315,277,207 samples, 1.04%)</title><rect x="586.9" y="229" width="12.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="589.88" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="293" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1190.17" y="303.5" ></text>
</g>
<g >
<title>__common_interrupt (10,877,448 samples, 0.04%)</title><rect x="110.6" y="469" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="113.57" y="479.5" ></text>
</g>
<g >
<title>rcu_cblist_dequeue (22,678,458 samples, 0.08%)</title><rect x="991.4" y="181" width="0.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="994.36" y="191.5" ></text>
</g>
<g >
<title>amd_clear_divider (21,694,052 samples, 0.07%)</title><rect x="695.9" y="357" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="698.89" y="367.5" ></text>
</g>
<g >
<title>putname (535,268,963 samples, 1.77%)</title><rect x="994.3" y="309" width="20.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="997.28" y="319.5" ></text>
</g>
<g >
<title>acpi_irq (12,092,587 samples, 0.04%)</title><rect x="795.1" y="341" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="798.14" y="351.5" ></text>
</g>
<g >
<title>may_open (88,502,837 samples, 0.29%)</title><rect x="957.5" y="277" width="3.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="960.54" y="287.5" ></text>
</g>
<g >
<title>fsnotify_find_mark (74,904,778 samples, 0.25%)</title><rect x="735.5" y="325" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="738.49" y="335.5" ></text>
</g>
<g >
<title>rcu_do_batch (22,678,458 samples, 0.08%)</title><rect x="991.4" y="197" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="994.36" y="207.5" ></text>
</g>
<g >
<title>getname (12,676,803 samples, 0.04%)</title><rect x="974.4" y="309" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="977.42" y="319.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (11,582,561 samples, 0.04%)</title><rect x="918.0" y="117" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="921.04" y="127.5" ></text>
</g>
<g >
<title>up_read (122,248,820 samples, 0.41%)</title><rect x="689.1" y="341" width="4.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="692.10" y="351.5" ></text>
</g>
<g >
<title>combined_runner.linreg_task__anon_8510 (3,676,735,045 samples, 12.18%)</title><rect x="22.0" y="517" width="143.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="24.97" y="527.5" >combined_runner.li..</text>
</g>
<g >
<title>try_to_unlazy (107,251,504 samples, 0.36%)</title><rect x="907.7" y="261" width="4.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="910.67" y="271.5" ></text>
</g>
<g >
<title>__fput (386,288,964 samples, 1.28%)</title><rect x="715.1" y="357" width="15.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="718.14" y="367.5" ></text>
</g>
<g >
<title>acpi_irq (11,929,993 samples, 0.04%)</title><rect x="577.6" y="117" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="580.56" y="127.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (11,664,994 samples, 0.04%)</title><rect x="702.7" y="453" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="705.67" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="229" width="1.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1190.64" y="239.5" ></text>
</g>
<g >
<title>os.linux.getdents64 (15,113,243 samples, 0.05%)</title><rect x="704.0" y="453" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="706.95" y="463.5" ></text>
</g>
<g >
<title>rb_insert_color (17,259,877 samples, 0.06%)</title><rect x="622.8" y="277" width="0.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="625.75" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (33,494,700 samples, 0.11%)</title><rect x="649.7" y="309" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="652.70" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (11,302,510 samples, 0.04%)</title><rect x="337.1" y="373" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="340.08" y="383.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="453" width="2.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.17" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (12,864,157 samples, 0.04%)</title><rect x="12.8" y="533" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="15.77" y="543.5" ></text>
</g>
<g >
<title>compiler_rt.memset.memset (139,273,243 samples, 0.46%)</title><rect x="796.1" y="453" width="5.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="799.12" y="463.5" ></text>
</g>
<g >
<title>acpi_ec_gpe_handler (12,092,587 samples, 0.04%)</title><rect x="795.1" y="277" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="798.14" y="287.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.nextLinux (9,131,111,140 samples, 30.25%)</title><rect x="345.7" y="453" width="357.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="348.70" y="463.5" >fs.Dir.Iterator__struct_8657.nextLinux</text>
</g>
<g >
<title>path_init (196,272,214 samples, 0.65%)</title><rect x="961.0" y="277" width="7.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="964.00" y="287.5" ></text>
</g>
<g >
<title>__common_interrupt (11,929,993 samples, 0.04%)</title><rect x="577.6" y="181" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="580.56" y="191.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,678,458 samples, 0.08%)</title><rect x="991.4" y="245" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="994.36" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (11,769,226 samples, 0.04%)</title><rect x="746.9" y="405" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="749.95" y="415.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (23,204,657 samples, 0.08%)</title><rect x="903.7" y="197" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="906.70" y="207.5" ></text>
</g>
<g >
<title>__memset (61,493,440 samples, 0.20%)</title><rect x="667.9" y="293" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="670.91" y="303.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOne (64,825,833 samples, 0.21%)</title><rect x="253.5" y="453" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="256.47" y="463.5" ></text>
</g>
<g >
<title>fsnotify (38,693,289 samples, 0.13%)</title><rect x="726.3" y="341" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="729.32" y="351.5" ></text>
</g>
<g >
<title>expand_files (20,871,802 samples, 0.07%)</title><rect x="844.8" y="293" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="847.77" y="303.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall1 (1,035,253,215 samples, 3.43%)</title><rect x="706.9" y="421" width="40.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="709.94" y="431.5" >os...</text>
</g>
<g >
<title>handle_fasteoi_irq (11,666,443 samples, 0.04%)</title><rect x="271.0" y="405" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="274.03" y="415.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOneAssumeCapacity (47,228,861 samples, 0.16%)</title><rect x="264.0" y="437" width="1.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="266.99" y="447.5" ></text>
</g>
<g >
<title>acpi_ec_gpe_handler (11,666,443 samples, 0.04%)</title><rect x="271.0" y="293" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="274.03" y="303.5" ></text>
</g>
<g >
<title>fs.Dir.close (1,160,237,386 samples, 3.84%)</title><rect x="704.5" y="469" width="45.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="707.54" y="479.5" >fs.D..</text>
</g>
<g >
<title>__x64_sys_getdents64 (6,813,893,407 samples, 22.57%)</title><rect x="428.7" y="373" width="266.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="431.68" y="383.5" >__x64_sys_getdents64</text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (63,595,235 samples, 0.21%)</title><rect x="934.2" y="165" width="2.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="937.22" y="175.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (11,582,561 samples, 0.04%)</title><rect x="918.0" y="197" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="921.04" y="207.5" ></text>
</g>
<g >
<title>asm_common_interrupt (12,092,587 samples, 0.04%)</title><rect x="795.1" y="437" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="798.14" y="447.5" ></text>
</g>
<g >
<title>combined_runner (30,183,578,760 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >combined_runner</text>
</g>
<g >
<title>mmap_region (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="181" width="1.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.64" y="191.5" ></text>
</g>
<g >
<title>mem.indexOfPos__anon_8884 (3,705,344,988 samples, 12.28%)</title><rect x="1042.3" y="469" width="144.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1045.31" y="479.5" >mem.indexOfPos__an..</text>
</g>
<g >
<title>do_syscall_64 (956,126,840 samples, 3.17%)</title><rect x="708.3" y="389" width="37.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="711.29" y="399.5" >do_..</text>
</g>
<g >
<title>atime_needs_update (23,746,366 samples, 0.08%)</title><rect x="688.2" y="325" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="691.17" y="335.5" ></text>
</g>
<g >
<title>[[x_tables]] (318,363,547 samples, 1.05%)</title><rect x="928.8" y="229" width="12.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="931.81" y="239.5" ></text>
</g>
<g >
<title>rcu_do_batch (12,928,160 samples, 0.04%)</title><rect x="795.6" y="357" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="798.61" y="367.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (10,877,448 samples, 0.04%)</title><rect x="110.6" y="373" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="113.57" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="341" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1186.98" y="351.5" ></text>
</g>
<g >
<title>fsnotify (287,475,958 samples, 0.95%)</title><rect x="674.8" y="325" width="11.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="677.78" y="335.5" ></text>
</g>
<g >
<title>posix.openatZ (5,174,889,258 samples, 17.14%)</title><rect x="818.9" y="421" width="202.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="821.85" y="431.5" >posix.openatZ</text>
</g>
<g >
<title>x64_sys_call (12,442,255 samples, 0.04%)</title><rect x="699.9" y="373" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="702.89" y="383.5" ></text>
</g>
<g >
<title>__check_block_validity.constprop.0 (200,721,654 samples, 0.67%)</title><rect x="579.0" y="229" width="7.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="582.03" y="239.5" ></text>
</g>
<g >
<title>step_into (21,213,556 samples, 0.07%)</title><rect x="968.7" y="277" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="971.67" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).addOne (134,641,137 samples, 0.45%)</title><rect x="260.6" y="453" width="5.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="263.58" y="463.5" ></text>
</g>
<g >
<title>ext4_htree_store_dirent (619,564,201 samples, 2.05%)</title><rect x="599.2" y="293" width="24.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="602.20" y="303.5" >e..</text>
</g>
<g >
<title>mem.indexOfSentinel__anon_8725 (22,462,856 samples, 0.07%)</title><rect x="372.0" y="421" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="374.97" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock (27,026,410 samples, 0.09%)</title><rect x="843.7" y="293" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="846.71" y="303.5" ></text>
</g>
<g >
<title>mem.sliceTo__anon_7397 (21,034,397 samples, 0.07%)</title><rect x="703.1" y="453" width="0.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="706.13" y="463.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (314,047,757 samples, 1.04%)</title><rect x="357.7" y="437" width="12.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="360.73" y="447.5" ></text>
</g>
<g >
<title>acpi_hw_gpe_read (11,582,561 samples, 0.04%)</title><rect x="918.0" y="85" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="921.04" y="95.5" ></text>
</g>
<g >
<title>kfree (11,866,510 samples, 0.04%)</title><rect x="656.6" y="309" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="659.57" y="319.5" ></text>
</g>
<g >
<title>inode_query_iversion (13,244,755 samples, 0.04%)</title><rect x="658.1" y="325" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="661.13" y="335.5" ></text>
</g>
<g >
<title>all (30,183,578,760 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__f_unlock_pos (22,685,472 samples, 0.08%)</title><rect x="429.7" y="357" width="0.8" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="432.66" y="367.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (443,342,748 samples, 1.47%)</title><rect x="974.9" y="309" width="17.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="977.91" y="319.5" ></text>
</g>
<g >
<title>fs.Dir.Walker.next (20,536,863,090 samples, 68.04%)</title><rect x="236.2" y="485" width="802.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="239.18" y="495.5" >fs.Dir.Walker.next</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,873,305 samples, 0.08%)</title><rect x="910.0" y="197" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="913.04" y="207.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (4,983,385,031 samples, 16.51%)</title><rect x="825.7" y="389" width="194.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="828.73" y="399.5" >os.linux.x86_64.syscall4</text>
</g>
<g >
<title>compiler_rt.memset.memset (3,214,545 samples, 0.01%)</title><rect x="337.5" y="469" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="340.52" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (11,865,749 samples, 0.04%)</title><rect x="891.6" y="213" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="894.65" y="223.5" ></text>
</g>
<g >
<title>acpi_ev_gpe_detect (11,666,443 samples, 0.04%)</title><rect x="271.0" y="325" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="274.03" y="335.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (20,151,790 samples, 0.07%)</title><rect x="165.7" y="517" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="168.71" y="527.5" ></text>
</g>
<g >
<title>do_sys_openat2 (4,473,380,158 samples, 14.82%)</title><rect x="840.3" y="325" width="174.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="843.33" y="335.5" >do_sys_openat2</text>
</g>
<g >
<title>__memset (12,063,474 samples, 0.04%)</title><rect x="892.1" y="245" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="895.11" y="255.5" ></text>
</g>
<g >
<title>ext4_inode_block_valid (12,867,746 samples, 0.04%)</title><rect x="579.0" y="213" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="582.03" y="223.5" ></text>
</g>
<g >
<title>bpf_lsm_file_open (318,363,547 samples, 1.05%)</title><rect x="928.8" y="245" width="12.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="931.81" y="255.5" ></text>
</g>
<g >
<title>__memset (20,443,092 samples, 0.07%)</title><rect x="620.2" y="245" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="623.23" y="255.5" ></text>
</g>
<g >
<title>mem.Allocator.allocWithSizeAndAlignment__anon_9638 (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="357" width="2.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.17" y="367.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (151,063,579 samples, 0.50%)</title><rect x="133.6" y="501" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="136.60" y="511.5" ></text>
</g>
<g >
<title>filp_flush (175,725,790 samples, 0.58%)</title><rect x="734.5" y="357" width="6.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="737.49" y="367.5" ></text>
</g>
<g >
<title>lockref_put_return (48,744,924 samples, 0.16%)</title><rect x="717.4" y="325" width="1.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="720.38" y="335.5" ></text>
</g>
<g >
<title>fsnotify (12,205,564 samples, 0.04%)</title><rect x="673.5" y="341" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="676.45" y="351.5" ></text>
</g>
<g >
<title>update_curr (11,302,510 samples, 0.04%)</title><rect x="337.1" y="293" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="340.08" y="303.5" ></text>
</g>
<g >
<title>os.linux.mmap (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="277" width="1.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1190.64" y="287.5" ></text>
</g>
<g >
<title>__bpf_prog_exit (63,544,557 samples, 0.21%)</title><rect x="937.4" y="213" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="940.39" y="223.5" ></text>
</g>
<g >
<title>__find_get_block (1,805,613,296 samples, 5.98%)</title><rect x="507.9" y="229" width="70.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="510.93" y="239.5" >__find_..</text>
</g>
<g >
<title>__kmalloc (326,560,061 samples, 1.08%)</title><rect x="608.3" y="277" width="12.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="611.26" y="287.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).append (115,494,381 samples, 0.38%)</title><rect x="252.9" y="469" width="4.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="255.92" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,928,160 samples, 0.04%)</title><rect x="795.6" y="437" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="798.61" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,884,766 samples, 0.04%)</title><rect x="558.7" y="181" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="561.71" y="191.5" ></text>
</g>
<g >
<title>__common_interrupt (12,092,587 samples, 0.04%)</title><rect x="795.1" y="405" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="798.14" y="415.5" ></text>
</g>
<g >
<title>compiler_rt.stack_probe.zig_probe_stack (43,454,395 samples, 0.14%)</title><rect x="801.6" y="453" width="1.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="804.56" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (956,126,840 samples, 3.17%)</title><rect x="708.3" y="405" width="37.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="711.29" y="415.5" >ent..</text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (151,921,439 samples, 0.50%)</title><rect x="749.9" y="453" width="5.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="752.90" y="463.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall3 (222,573,932 samples, 0.74%)</title><rect x="13.3" y="549" width="8.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="16.27" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,562,140 samples, 0.04%)</title><rect x="578.0" y="213" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="581.03" y="223.5" ></text>
</g>
<g >
<title>c.clone (29,877,268,644 samples, 98.99%)</title><rect x="22.0" y="565" width="1168.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="24.97" y="575.5" >c.clone</text>
</g>
<g >
<title>syscall_exit_to_user_mode (102,251,861 samples, 0.34%)</title><rect x="695.9" y="373" width="4.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="698.89" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,678,458 samples, 0.08%)</title><rect x="991.4" y="277" width="0.8" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="994.36" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,562,140 samples, 0.04%)</title><rect x="578.0" y="149" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="581.03" y="159.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).predict (923,325,640 samples, 3.06%)</title><rect x="166.5" y="517" width="36.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="169.50" y="527.5" >lin..</text>
</g>
<g >
<title>security_file_alloc (89,400,027 samples, 0.30%)</title><rect x="860.8" y="245" width="3.5" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="863.78" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_free (157,623,562 samples, 0.52%)</title><rect x="719.3" y="309" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="722.29" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (12,562,140 samples, 0.04%)</title><rect x="578.0" y="181" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="581.03" y="191.5" ></text>
</g>
<g >
<title>acpi_hw_gpe_read (11,929,993 samples, 0.04%)</title><rect x="577.6" y="53" width="0.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="580.56" y="63.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (45,101,034 samples, 0.15%)</title><rect x="923.3" y="261" width="1.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="926.32" y="271.5" ></text>
</g>
<g >
<title>lookup_fast (314,472,167 samples, 1.04%)</title><rect x="945.2" y="277" width="12.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="948.24" y="287.5" ></text>
</g>
<g >
<title>[unknown] (201,994,796 samples, 0.67%)</title><rect x="928.8" y="213" width="7.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="931.81" y="223.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (929,644,679 samples, 3.08%)</title><rect x="759.8" y="453" width="36.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="762.77" y="463.5" >com..</text>
</g>
<g >
<title>acpi_ev_detect_gpe (11,666,443 samples, 0.04%)</title><rect x="271.0" y="309" width="0.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="274.03" y="319.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,902,277 samples, 0.04%)</title><rect x="983.7" y="229" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="986.65" y="239.5" ></text>
</g>
<g >
<title>search_name.openRootDir (12,927,179 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1192.49" y="495.5" ></text>
</g>
<g >
<title>debug.inValgrind (35,184,966 samples, 0.12%)</title><rect x="388.6" y="389" width="1.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="391.57" y="399.5" ></text>
</g>
<g >
<title>mntget (12,883,157 samples, 0.04%)</title><rect x="927.6" y="245" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="930.63" y="255.5" ></text>
</g>
<g >
<title>bpf_probe_read_kernel (147,140,967 samples, 0.49%)</title><rect x="931.0" y="197" width="5.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="933.96" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.allocBytesWithAlignment__anon_7892 (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="341" width="1.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1190.64" y="351.5" ></text>
</g>
<g >
<title>ext4_bread (22,103,124 samples, 0.07%)</title><rect x="491.6" y="277" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="494.63" y="287.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (68,035,207 samples, 0.23%)</title><rect x="221.3" y="501" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="224.34" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_openat (4,554,728,376 samples, 15.09%)</title><rect x="837.1" y="341" width="178.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="840.15" y="351.5" >__x64_sys_openat</text>
</g>
<g >
<title>handle_irq_event (11,666,443 samples, 0.04%)</title><rect x="271.0" y="389" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="274.03" y="399.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (179,834,074 samples, 0.60%)</title><rect x="719.3" y="325" width="7.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="722.29" y="335.5" ></text>
</g>
<g >
<title>cache_from_obj (26,072,029 samples, 0.09%)</title><rect x="993.3" y="293" width="1.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="996.26" y="303.5" ></text>
</g>
<g >
<title>mem.indexOf__anon_8672 (3,766,042,556 samples, 12.48%)</title><rect x="1039.9" y="485" width="147.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1042.94" y="495.5" >mem.indexOf__anon_..</text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (9,365,464,295 samples, 31.03%)</title><rect x="338.4" y="469" width="366.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="341.41" y="479.5" >fs.Dir.Iterator__struct_8657.next</text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (248,778,289 samples, 0.82%)</title><rect x="360.3" y="421" width="9.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="363.28" y="431.5" ></text>
</g>
<g >
<title>mem.alignForward__anon_3584 (19,800,097 samples, 0.07%)</title><rect x="373.8" y="405" width="0.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="376.78" y="415.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (636,317,867 samples, 2.11%)</title><rect x="624.8" y="277" width="24.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="627.82" y="287.5" >_..</text>
</g>
<g >
<title>handle_softirqs (10,902,277 samples, 0.04%)</title><rect x="983.7" y="213" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="986.65" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,562,140 samples, 0.04%)</title><rect x="578.0" y="197" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="581.03" y="207.5" ></text>
</g>
<g >
<title>mem.Allocator.allocAdvancedWithRetAddr (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="373" width="2.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1190.17" y="383.5" ></text>
</g>
<g >
<title>xas_descend (201,770,259 samples, 0.67%)</title><rect x="565.0" y="165" width="7.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="567.97" y="175.5" ></text>
</g>
<g >
<title>acpi_os_read_port (11,582,561 samples, 0.04%)</title><rect x="918.0" y="69" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="921.04" y="79.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="213" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1190.17" y="223.5" ></text>
</g>
<g >
<title>verify_dirent_name (60,726,293 samples, 0.20%)</title><rect x="488.8" y="293" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="491.76" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (53,713,095 samples, 0.18%)</title><rect x="1016.0" y="341" width="2.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1018.98" y="351.5" ></text>
</g>
<g >
<title>init_file (202,844,856 samples, 0.67%)</title><rect x="856.3" y="261" width="8.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="859.35" y="271.5" ></text>
</g>
<g >
<title>wakeup_preempt (10,902,277 samples, 0.04%)</title><rect x="983.7" y="165" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="986.65" y="175.5" ></text>
</g>
<g >
<title>acpi_ev_detect_gpe (10,877,448 samples, 0.04%)</title><rect x="110.6" y="357" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="113.57" y="367.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).ensureTotalCapacity (18,080,235 samples, 0.06%)</title><rect x="255.3" y="437" width="0.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="258.30" y="447.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (12,092,587 samples, 0.04%)</title><rect x="795.1" y="389" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="798.14" y="399.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (10,877,448 samples, 0.04%)</title><rect x="110.6" y="389" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="113.57" y="399.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (19,894,573 samples, 0.07%)</title><rect x="1019.8" y="373" width="0.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1022.77" y="383.5" ></text>
</g>
<g >
<title>___slab_alloc (96,935,764 samples, 0.32%)</title><rect x="888.3" y="245" width="3.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="891.32" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (7,006,316,445 samples, 23.21%)</title><rect x="426.5" y="389" width="273.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="429.47" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>mem.indexOfPosLinear__anon_9120 (3,656,545,166 samples, 12.11%)</title><rect x="1044.2" y="453" width="143.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1047.22" y="463.5" >mem.indexOfPosLine..</text>
</g>
<g >
<title>simd.firstTrue__anon_8115 (421,161,884 samples, 1.40%)</title><rect x="390.4" y="389" width="16.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="393.44" y="399.5" ></text>
</g>
<g >
<title>mem.sliceAsBytes__anon_7864 (14,979,035 samples, 0.05%)</title><rect x="370.0" y="437" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="373.00" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (181,338,184 samples, 0.60%)</title><rect x="977.0" y="293" width="7.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="979.99" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,678,458 samples, 0.08%)</title><rect x="991.4" y="261" width="0.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="994.36" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (11,302,510 samples, 0.04%)</title><rect x="337.1" y="389" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="340.08" y="399.5" ></text>
</g>
<g >
<title>advance_transaction (11,666,443 samples, 0.04%)</title><rect x="271.0" y="277" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="274.03" y="287.5" ></text>
</g>
<g >
<title>slab_update_freelist.isra.0 (57,864,917 samples, 0.19%)</title><rect x="654.3" y="293" width="2.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="657.31" y="303.5" ></text>
</g>
<g >
<title>__check_heap_object (12,772,194 samples, 0.04%)</title><rect x="988.6" y="261" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="991.56" y="271.5" ></text>
</g>
<g >
<title>os.linux.close (1,035,253,215 samples, 3.43%)</title><rect x="706.9" y="437" width="40.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="709.94" y="447.5" >os...</text>
</g>
<g >
<title>mem.eqlBytes (52,535,468 samples, 0.17%)</title><rect x="358.2" y="421" width="2.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="361.23" y="431.5" ></text>
</g>
<g >
<title>__fdget_pos (488,053,524 samples, 1.62%)</title><rect x="430.5" y="357" width="19.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="433.55" y="367.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (11,666,443 samples, 0.04%)</title><rect x="271.0" y="341" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="274.03" y="351.5" ></text>
</g>
<g >
<title>[unknown] (88,838,059 samples, 0.29%)</title><rect x="820.1" y="405" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="823.14" y="415.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,186,092 samples, 0.04%)</title><rect x="845.7" y="261" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="848.67" y="271.5" ></text>
</g>
<g >
<title>heap.PageAllocator.alloc (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="309" width="1.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1190.64" y="319.5" ></text>
</g>
<g >
<title>update_process_times (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="293" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1186.98" y="303.5" ></text>
</g>
<g >
<title>rcu_core (12,928,160 samples, 0.04%)</title><rect x="795.6" y="373" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="798.61" y="383.5" ></text>
</g>
<g >
<title>mem.isAligned (12,656,061 samples, 0.04%)</title><rect x="389.9" y="389" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="392.94" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (12,015,542 samples, 0.04%)</title><rect x="1187.2" y="309" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.17" y="319.5" ></text>
</g>
<g >
<title>update_process_times (11,302,510 samples, 0.04%)</title><rect x="337.1" y="341" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="340.08" y="351.5" ></text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (11,772,245 samples, 0.04%)</title><rect x="1021.2" y="453" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1024.16" y="463.5" ></text>
</g>
<g >
<title>memcg_account_kmem (12,848,396 samples, 0.04%)</title><rect x="906.7" y="229" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="909.65" y="239.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (22,103,124 samples, 0.07%)</title><rect x="491.6" y="293" width="0.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="494.63" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (54,535,360 samples, 0.18%)</title><rect x="696.7" y="357" width="2.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="699.74" y="367.5" ></text>
</g>
<g >
<title>__ext4_read_dirblock (2,405,822,567 samples, 7.97%)</title><rect x="505.2" y="293" width="94.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="508.15" y="303.5" >__ext4_read..</text>
</g>
<g >
<title>rcu_core (12,186,092 samples, 0.04%)</title><rect x="845.7" y="229" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="848.67" y="239.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).pop (80,258,759 samples, 0.27%)</title><rect x="257.4" y="469" width="3.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="260.44" y="479.5" ></text>
</g>
<g >
<title>update_process_times (12,562,140 samples, 0.04%)</title><rect x="578.0" y="101" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="581.03" y="111.5" ></text>
</g>
<g >
<title>os.linux.x86_64.syscall4 (88,838,059 samples, 0.29%)</title><rect x="820.1" y="389" width="3.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="823.14" y="399.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,895,235 samples, 0.04%)</title><rect x="670.3" y="293" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="673.31" y="303.5" ></text>
</g>
<g >
<title>security_file_open (335,836,335 samples, 1.11%)</title><rect x="928.1" y="261" width="13.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="931.13" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (59,831,826 samples, 0.20%)</title><rect x="742.8" y="373" width="2.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="745.75" y="383.5" ></text>
</g>
<g >
<title>posix.errno__anon_7363 (48,694,489 samples, 0.16%)</title><rect x="747.4" y="437" width="1.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="750.41" y="447.5" ></text>
</g>
<g >
<title>fs.Dir.openDirFlagsZ (5,339,132,536 samples, 17.69%)</title><rect x="812.4" y="437" width="208.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="815.43" y="447.5" >fs.Dir.openDirFlagsZ</text>
</g>
<g >
<title>mem.indexOfScalar__anon_7169 (363,377,491 samples, 1.20%)</title><rect x="1024.8" y="437" width="14.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1027.85" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,705,862,726 samples, 15.59%)</title><rect x="834.1" y="357" width="184.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="837.11" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>common_interrupt (10,877,448 samples, 0.04%)</title><rect x="110.6" y="485" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="113.57" y="495.5" ></text>
</g>
<g >
<title>linreg.LinReg(20).fit (578,235,609 samples, 1.92%)</title><rect x="111.0" y="501" width="22.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="114.00" y="511.5" >l..</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (101,909,600 samples, 0.34%)</title><rect x="941.3" y="277" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="944.26" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (56,160,200 samples, 0.19%)</title><rect x="989.1" y="261" width="2.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="992.06" y="271.5" ></text>
</g>
<g >
<title>acpi_irq (10,877,448 samples, 0.04%)</title><rect x="110.6" y="405" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="113.57" y="415.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (176,021,680 samples, 0.58%)</title><rect x="663.9" y="309" width="6.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="666.94" y="319.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (12,079,737 samples, 0.04%)</title><rect x="268.9" y="453" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="271.89" y="463.5" ></text>
</g>
<g >
<title>handle_softirqs (22,678,458 samples, 0.08%)</title><rect x="991.4" y="229" width="0.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="994.36" y="239.5" ></text>
</g>
<g >
<title>compiler_rt.memcpy.memcpy (12,927,179 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1192.49" y="479.5" ></text>
</g>
<g >
<title>migrate_disable (17,437,923 samples, 0.06%)</title><rect x="936.7" y="197" width="0.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="939.71" y="207.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(fs.Dir.Walker.StackItem,null).addOneAssumeCapacity (32,465,206 samples, 0.11%)</title><rect x="254.0" y="437" width="1.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="257.03" y="447.5" ></text>
</g>
<g >
<title>debug.assert (12,048,795 samples, 0.04%)</title><rect x="1038.6" y="389" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1041.58" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (11,302,510 samples, 0.04%)</title><rect x="337.1" y="405" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="340.08" y="415.5" ></text>
</g>
<g >
<title>__call_rcu_common (150,193,039 samples, 0.50%)</title><rect x="709.3" y="357" width="5.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="712.27" y="367.5" ></text>
</g>
<g >
<title>debug.inValgrind (35,791,905 samples, 0.12%)</title><rect x="1037.2" y="405" width="1.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1040.18" y="415.5" ></text>
</g>
<g >
<title>fsnotify_grab_connector (52,448,776 samples, 0.17%)</title><rect x="736.4" y="309" width="2.0" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="739.37" y="319.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (23,141,055 samples, 0.08%)</title><rect x="389.0" y="373" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="392.04" y="383.5" ></text>
</g>
<g >
<title>_raw_read_unlock (38,886,968 samples, 0.13%)</title><rect x="596.4" y="213" width="1.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="599.40" y="223.5" ></text>
</g>
<g >
<title>search_name.searchName (72,504,501 samples, 0.24%)</title><rect x="1187.2" y="501" width="2.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1190.17" y="511.5" ></text>
</g>
<g >
<title>posix.toPosixPath (445,894,120 samples, 1.48%)</title><rect x="1021.6" y="453" width="17.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1024.62" y="463.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (134,712,967 samples, 0.45%)</title><rect x="931.4" y="181" width="5.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="934.44" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (27,182,384 samples, 0.09%)</title><rect x="897.1" y="229" width="1.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="900.09" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (165,032,962 samples, 0.55%)</title><rect x="898.2" y="245" width="6.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="901.16" y="255.5" ></text>
</g>
<g >
<title>mem.eql__anon_4894 (3,101,599,968 samples, 10.28%)</title><rect x="1063.2" y="437" width="121.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1066.23" y="447.5" >mem.eql__anon_4..</text>
</g>
<g >
<title>acpi_ev_detect_gpe (11,929,993 samples, 0.04%)</title><rect x="577.6" y="69" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="580.56" y="79.5" ></text>
</g>
<g >
<title>fs.Dir.openDir (7,244,430,540 samples, 24.00%)</title><rect x="755.8" y="469" width="283.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="758.84" y="479.5" >fs.Dir.openDir</text>
</g>
<g >
<title>strncpy_from_user (208,851,612 samples, 0.69%)</title><rect x="984.1" y="293" width="8.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="987.08" y="303.5" ></text>
</g>
<g >
<title>complete_walk (107,251,504 samples, 0.36%)</title><rect x="907.7" y="277" width="4.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="910.67" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7,048,881,929 samples, 23.35%)</title><rect x="424.8" y="405" width="275.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="427.81" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>os.linux.errnoFromSyscall (74,875,227 samples, 0.25%)</title><rect x="407.9" y="437" width="3.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="410.93" y="447.5" ></text>
</g>
<g >
<title>perf_event_mmap (47,561,780 samples, 0.16%)</title><rect x="1187.6" y="165" width="1.9" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1190.64" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (222,573,932 samples, 0.74%)</title><rect x="13.3" y="533" width="8.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="16.27" y="543.5" ></text>
</g>
<g >
<title>inode_permission (24,371,649 samples, 0.08%)</title><rect x="959.4" y="261" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="962.43" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (59,831,826 samples, 0.20%)</title><rect x="742.8" y="357" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="745.75" y="367.5" ></text>
</g>
<g >
<title>acpi_ev_sci_xrupt_handler (12,092,587 samples, 0.04%)</title><rect x="795.1" y="325" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="798.14" y="335.5" ></text>
</g>
<g >
<title>perf_event_task_tick (12,562,140 samples, 0.04%)</title><rect x="578.0" y="69" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="581.03" y="79.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (12,186,092 samples, 0.04%)</title><rect x="845.7" y="293" width="0.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="848.67" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (11,582,561 samples, 0.04%)</title><rect x="918.0" y="181" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="921.04" y="191.5" ></text>
</g>
<g >
<title>filldir64 (412,953,451 samples, 1.37%)</title><rect x="475.0" y="309" width="16.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="477.99" y="319.5" ></text>
</g>
<g >
<title>locks_remove_posix (75,348,401 samples, 0.25%)</title><rect x="738.4" y="341" width="3.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="741.42" y="351.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (12,848,396 samples, 0.04%)</title><rect x="906.7" y="181" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="909.65" y="191.5" ></text>
</g>
<g >
<title>array_list.ArrayListAlignedUnmanaged(u8,null).append (134,641,137 samples, 0.45%)</title><rect x="260.6" y="469" width="5.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="263.58" y="479.5" ></text>
</g>
<g >
<title>bpf_lsm_file_permission (12,648,830 samples, 0.04%)</title><rect x="687.7" y="325" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="690.68" y="335.5" ></text>
</g>
<g >
<title>search_name.SearchIterator.init (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="485" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1190.17" y="495.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (26,022,449 samples, 0.09%)</title><rect x="698.9" y="357" width="1.0" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="701.87" y="367.5" ></text>
</g>
<g >
<title>fs.Dir.Iterator__struct_8657.next (25,995,557 samples, 0.09%)</title><rect x="235.2" y="485" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="238.17" y="495.5" ></text>
</g>
<g >
<title>fd_install (75,149,143 samples, 0.25%)</title><rect x="970.5" y="309" width="2.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="973.50" y="319.5" ></text>
</g>
<g >
<title>do_filp_open (3,180,969,584 samples, 10.54%)</title><rect x="846.1" y="309" width="124.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="849.15" y="319.5" >do_filp_open</text>
</g>
<g >
<title>__memset (22,485,271 samples, 0.07%)</title><rect x="863.4" y="213" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="866.40" y="223.5" ></text>
</g>
<g >
<title>__filemap_get_folio (1,301,624,285 samples, 4.31%)</title><rect x="523.5" y="213" width="50.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="526.51" y="223.5" >__fil..</text>
</g>
<g >
<title>acpi_irq (11,582,561 samples, 0.04%)</title><rect x="918.0" y="149" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="921.04" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (10,754,296 samples, 0.04%)</title><rect x="896.7" y="213" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="899.67" y="223.5" ></text>
</g>
<g >
<title>__slab_free (142,365,860 samples, 0.47%)</title><rect x="651.0" y="309" width="5.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="654.01" y="319.5" ></text>
</g>
<g >
<title>valgrind.runningOnValgrind (26,229,902 samples, 0.09%)</title><rect x="406.9" y="405" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="409.90" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (13,224,816 samples, 0.04%)</title><rect x="939.4" y="181" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="942.36" y="191.5" ></text>
</g>
<g >
<title>mem.indexOfScalarPos__anon_7243 (363,377,491 samples, 1.20%)</title><rect x="1024.8" y="421" width="14.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1027.85" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="309" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1186.98" y="319.5" ></text>
</g>
<g >
<title>xas_load (366,992,728 samples, 1.22%)</title><rect x="560.0" y="181" width="14.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="563.04" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,873,305 samples, 0.08%)</title><rect x="910.0" y="213" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="913.04" y="223.5" ></text>
</g>
<g >
<title>handle_irq_event (12,092,587 samples, 0.04%)</title><rect x="795.1" y="373" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="798.14" y="383.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (215,600,155 samples, 0.71%)</title><rect x="649.7" y="325" width="8.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="652.70" y="335.5" ></text>
</g>
<g >
<title>mem.Allocator.alignedAlloc__anon_9401 (59,577,322 samples, 0.20%)</title><rect x="1187.2" y="389" width="2.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.17" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (12,911,857 samples, 0.04%)</title><rect x="1184.0" y="277" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1186.98" y="287.5" ></text>
</g>
<g >
<title>Thread.callFn__anon_7622 (5,099,598,311 samples, 16.90%)</title><rect x="22.0" y="533" width="199.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="24.97" y="543.5" >Thread.callFn__anon_7622</text>
</g>
<g >
<title>debug.assert (21,635,360 samples, 0.07%)</title><rect x="803.3" y="453" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="806.26" y="463.5" ></text>
</g>
</g>
</svg>
